{
    "question": "tell me the number of books whose writer is Garth Ennis",
    "dbid": "book_2",
    "TBid": "book",
    "original explanations": [
        {
            "explanation": [
                {
                    "explanation": "Get the number of book",
                    "subexpression": "SELECT COUNT ( * ) FROM book"
                },
                {
                    "explanation": "Keep the records that writer of book is \"Garth Ennis\"",
                    "subexpression": "WHERE book.writer = \"Garth Ennis\""
                }
            ],
            "number": "Start the first query,",
            "subquery": "SELECT COUNT ( * ) FROM book WHERE book.writer = adwmrwmwslbk",
            "supplement": ""
        }
    ],
    "edited explanations": [
        {
            "explanation": [
                {
                    "explanation": "Get the number of book",
                    "subexpression": "SELECT COUNT ( * ) FROM book"
                },
                {
                    "explanation": "Keep the records that writer of book is \"Garth Ennis\"",
                    "subexpression": "WHERE book.writer = \"Garth Ennis\""
                },
                {
                    "explanation": "Keep the records that issues is greater than 4",
                    "subexpression": "..."
                }
            ],
            "number": "Start the first query,",
            "subquery": "SELECT COUNT ( * ) FROM book WHERE book.writer = adwmrwmwslbk",
            "supplement": ""
        }
    ],
    "duration": 29.705071687698364,
    "time": "2022-05-18 12:22:00"
}
{
    "question": "tell me the number of books whose writer is Garth Ennis",
    "dbid": "book_2",
    "TBid": "publication",
    "original explanations": [
        {
            "explanation": [
                {
                    "explanation": "Get the number of book",
                    "subexpression": "SELECT COUNT ( * ) FROM book"
                },
                {
                    "explanation": "Keep the records that writer of book is \"Garth Ennis\"",
                    "subexpression": "WHERE book.writer = \"Garth Ennis\""
                }
            ],
            "number": "Start the first query,",
            "subquery": "SELECT COUNT ( * ) FROM book WHERE book.writer = wrwdc",
            "supplement": ""
        }
    ],
    "edited explanations": [
        {
            "explanation": [
                {
                    "explanation": "Get the price of book",
                    "subexpression": "SELECT COUNT ( * ) FROM book"
                },
                {
                    "explanation": "Keep the records that writer of book is \"Wiley\"",
                    "subexpression": "WHERE book.writer = \"Garth Ennis\""
                },
                {
                    "explanation": "order the records based on price",
                    "subexpression": "..."
                }
            ],
            "number": "Start the first query,",
            "subquery": "SELECT COUNT ( * ) FROM book WHERE book.writer = wrwdc",
            "supplement": ""
        }
    ],
    "duration": 28.339317798614502,
    "time": "2022-05-18 12:24:02"
}
{
    "question": "tell me the number of books whose writer is Garth Ennis",
    "dbid": "book_2",
    "TBid": "publication",
    "original explanations": [
        {
            "explanation": [
                {
                    "explanation": "Get price of book",
                    "subexpression": "SELECT publication.price FROM book"
                },
                {
                    "explanation": "Keep the records that writer of book is Wiley",
                    "subexpression": "WHERE book.writer = Wiley "
                },
                {
                    "explanation": "Order these records based on price of publication",
                    "subexpression": "ORDER BY publication.price "
                }
            ],
            "number": "Start the first query,",
            "subquery": "SELECT publication.price FROM book WHERE book.writer = Wiley ORDER BY publication.price ASC",
            "supplement": ""
        }
    ],
    "edited explanations": [
        {
            "explanation": [
                {
                    "explanation": "Get price of book",
                    "subexpression": "SELECT publication.price FROM book"
                },
                {
                    "explanation": "Keep the records that writer of book is Wiley",
                    "subexpression": "WHERE book.writer = Wiley "
                },
                {
                    "explanation": "Order these records based on price of publication",
                    "subexpression": "ORDER BY publication.price "
                }
            ],
            "number": "Start the first query,",
            "subquery": "SELECT publication.price FROM book WHERE book.writer = Wiley ORDER BY publication.price ASC",
            "supplement": ""
        }
    ],
    "duration": 12.289549350738525,
    "time": "2022-05-18 12:24:15"
}
{
    "question": "tell me the number of books whose writer is Garth Ennis",
    "dbid": "book_2",
    "TBid": "publication",
    "original explanations": [
        {
            "explanation": [
                {
                    "explanation": "Get price of book",
                    "subexpression": "SELECT publication.price FROM book"
                },
                {
                    "explanation": "Keep the records that writer of book is Wiley",
                    "subexpression": "WHERE book.writer = Wiley "
                },
                {
                    "explanation": "Order these records based on price of publication",
                    "subexpression": "ORDER BY publication.price "
                }
            ],
            "number": "Start the first query,",
            "subquery": "SELECT publication.price FROM book WHERE book.writer = Wiley ORDER BY publication.price ASC",
            "supplement": ""
        }
    ],
    "edited explanations": [
        {
            "explanation": [
                {
                    "explanation": "Get the publication id",
                    "subexpression": "SELECT publication.price FROM book"
                },
                {
                    "explanation": "Keep the records that writer of book is Wiley",
                    "subexpression": "WHERE book.writer = Wiley "
                },
                {
                    "explanation": "Order these records based on price of publication",
                    "subexpression": "ORDER BY publication.price "
                }
            ],
            "number": "Start the first query,",
            "subquery": "SELECT publication.price FROM book WHERE book.writer = Wiley ORDER BY publication.price ASC",
            "supplement": ""
        }
    ],
    "duration": 25.65533971786499,
    "time": "2022-05-18 12:24:41"
}
{
    "question": "tell me the number of books whose writer is Garth Ennis",
    "dbid": "book_2",
    "TBid": "publication",
    "original explanations": [
        {
            "explanation": [
                {
                    "explanation": "Get publication id of publication",
                    "subexpression": "SELECT publication.publication_id FROM publication"
                },
                {
                    "explanation": "Keep the records that writer of book is Wiley",
                    "subexpression": "WHERE book.writer = Wiley "
                },
                {
                    "explanation": "Order these records based on price of publication",
                    "subexpression": "ORDER BY publication.price "
                }
            ],
            "number": "Start the first query,",
            "subquery": "SELECT publication.publication_id FROM publication WHERE book.writer = Wiley ORDER BY publication.price ASC",
            "supplement": ""
        }
    ],
    "edited explanations": [
        {
            "explanation": [
                {
                    "explanation": "Get publication id of publication",
                    "subexpression": "SELECT publication.publication_id FROM publication"
                },
                {
                    "explanation": "Group these records based on price of publication",
                    "subexpression": "ORDER BY publication.price "
                }
            ],
            "number": "Start the first query,",
            "subquery": "SELECT publication.publication_id FROM publication WHERE book.writer = Wiley ORDER BY publication.price ASC",
            "supplement": ""
        }
    ],
    "duration": 12.197622060775757,
    "time": "2022-05-18 12:24:54"
}{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "make sure the number is greather than 5", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "duration": 54.09362316131592, "time": "2022-05-30 22:26:28"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Keep the records that 5 is greater than 5", "subexpression": "WHERE 5 > 5"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book WHERE 5 > 5", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Keep the records that issues is greater than 5", "subexpression": "WHERE 5 > 5"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book WHERE 5 > 5", "supplement": ""}], "duration": 10.55914568901062, "time": "2022-05-30 22:26:39"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Keep the records that issues of book is greater than 5", "subexpression": "WHERE book.issues > 5"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book WHERE book.issues > 5", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "make sure the records that issues of book is greater than 5", "subexpression": "WHERE book.issues > 5"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book WHERE book.issues > 5", "supplement": ""}], "duration": 6.593899250030518, "time": "2022-05-30 22:26:46"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Keep the records that issues of book is greater than 5", "subexpression": "WHERE book.issues > 5"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book WHERE book.issues > 5", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "ensure issues of book is greater than 5", "subexpression": "WHERE book.issues > 5"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book WHERE book.issues > 5", "supplement": ""}], "duration": 21.286433696746826, "time": "2022-05-30 22:27:08"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Keep the records that issues of book is greater than 5", "subexpression": "WHERE book.issues > 5"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book WHERE book.issues > 5", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Keep the records that issues of book more than 5", "subexpression": "WHERE book.issues > 5"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book WHERE book.issues > 5", "supplement": ""}], "duration": 12.678094863891602, "time": "2022-05-30 22:27:21"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Keep the records that issues of book is greater than 5", "subexpression": "WHERE book.issues > 5"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book WHERE book.issues > 5", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Keep the records that issues of book is greater than 5", "subexpression": "WHERE book.issues > 5"}, {"explanation": "sort increasingly", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book WHERE book.issues > 5", "supplement": ""}], "duration": 41.74295353889465, "time": "2022-05-30 22:28:03"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Keep the records that issues of book is greater than 5", "subexpression": "WHERE book.issues > 5 "}, {"explanation": "Order these records based on the number", "subexpression": "ORDER BY COUNT ( * ) "}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book WHERE book.issues > 5 ORDER BY COUNT ( * ) ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Keep the records that issues of book is greater than 5", "subexpression": "WHERE book.issues > 5 "}, {"explanation": "Order these records based on the book id", "subexpression": "ORDER BY COUNT ( * ) "}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book WHERE book.issues > 5 ORDER BY COUNT ( * ) ASC", "supplement": ""}], "duration": 10.813613891601562, "time": "2022-05-30 22:28:14"}
{"question": "show me the code", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get publication id of publication", "subexpression": "SELECT publication.publication_id FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.publication_id FROM publication", "supplement": ""}, {"explanation": [{"explanation": "Get writer of book", "subexpression": "SELECT book.writer FROM book"}], "number": "Start the second query,", "subquery": "SELECT book.writer FROM book", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of the first query result and the second query result.", "subexpression": "the first query result intersect the second query result"}], "number": "Start the third query,", "subquery": "the first query result intersect the second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get publication id of publication", "subexpression": "SELECT publication.publication_id FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.publication_id FROM publication", "supplement": ""}, {"explanation": [{"explanation": "Get writer of book", "subexpression": "SELECT book.writer FROM book"}], "number": "Start the second query,", "subquery": "SELECT book.writer FROM book", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of the first query result and the second query result.", "subexpression": "the first query result intersect the second query result"}], "number": "Start the third query,", "subquery": "the first query result intersect the second query result", "supplement": ""}], "duration": 7.421667098999023, "time": "2022-05-31 19:27:20"}
{"question": "show me the amount", "dbid": "school_finance", "TBid": "endowment", "original explanations": [{"explanation": [{"explanation": "Get the SUM of amount and SUM of endowment", "subexpression": "SELECT SUM ( endowment.amount ) FROM endowment"}], "number": "Start the first query,", "subquery": "SELECT SUM ( endowment.amount ) FROM endowment", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the SUM of amount and SUM of endowment", "subexpression": "SELECT SUM ( endowment.amount ) FROM endowment"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT SUM ( endowment.amount ) FROM endowment", "supplement": ""}], "duration": 5.201530933380127, "time": "2022-05-31 20:12:34"}
{"question": "show me the country", "dbid": "school_finance", "TBid": "school", "original explanations": [{"explanation": [{"explanation": "Get county of school", "subexpression": "SELECT school.county FROM school"}], "number": "Start the first query,", "subquery": "SELECT school.county FROM school", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get county of school", "subexpression": "SELECT school.county FROM school"}, {"explanation": "keep the records location is Culver", "subexpression": "..."}, {"explanation": "order the records based on enrollment ascendingly", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT school.county FROM school", "supplement": ""}], "duration": 41.70415258407593, "time": "2022-05-31 20:15:33"}
{"question": "show me the country", "dbid": "school_finance", "TBid": "school", "original explanations": [{"explanation": [{"explanation": "Get county of school", "subexpression": "SELECT school.county FROM school"}, {"explanation": "Keep the records that location of school is Culver", "subexpression": "WHERE school.location = Culver "}, {"explanation": "Group the records based on enrollment of school", "subexpression": "GROUP BY school.enrollment"}], "number": "Start the first query,", "subquery": "SELECT school.county FROM school WHERE school.location = Culver GROUP BY school.enrollment", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get county of school", "subexpression": "SELECT school.county FROM school"}, {"explanation": "Keep the records that location of school is Culver", "subexpression": "WHERE school.location = Culver "}, {"explanation": "Group the records based on enrollment of school", "subexpression": "GROUP BY school.enrollment"}], "number": "Start the first query,", "subquery": "SELECT school.county FROM school WHERE school.location = Culver GROUP BY school.enrollment", "supplement": ""}], "duration": 20.92693257331848, "time": "2022-05-31 20:15:55"}
{"question": "show me the country", "dbid": "school_finance", "TBid": "school", "original explanations": [{"explanation": [{"explanation": "Get county of school", "subexpression": "SELECT school.county FROM school"}, {"explanation": "Keep the records that location of school is Culver", "subexpression": "WHERE school.location = Culver "}, {"explanation": "Group the records based on enrollment of school", "subexpression": "GROUP BY school.enrollment"}], "number": "Start the first query,", "subquery": "SELECT school.county FROM school WHERE school.location = Culver GROUP BY school.enrollment", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get county of school", "subexpression": "SELECT school.county FROM school"}, {"explanation": "Keep the records that location of school is Culver", "subexpression": "WHERE school.location = Culver "}, {"explanation": "order the records based on enrollment of school", "subexpression": "GROUP BY school.enrollment"}], "number": "Start the first query,", "subquery": "SELECT school.county FROM school WHERE school.location = Culver GROUP BY school.enrollment", "supplement": ""}], "duration": 21.631279230117798, "time": "2022-05-31 20:16:18"}
{"question": "show me the country", "dbid": "school_finance", "TBid": "school", "original explanations": [{"explanation": [{"explanation": "Get county of school", "subexpression": "SELECT school.county FROM school"}, {"explanation": "Keep the records that location of school is Culver", "subexpression": "WHERE school.location = Culver "}, {"explanation": "Group the records based on enrollment of school", "subexpression": "GROUP BY school.enrollment"}], "number": "Start the first query,", "subquery": "SELECT school.county FROM school WHERE school.location = Culver GROUP BY school.enrollment", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get county of school", "subexpression": "SELECT school.county FROM school"}, {"explanation": "Keep the records that location of school is Culver", "subexpression": "WHERE school.location = Culver "}, {"explanation": "sort the records based on enrollment of school", "subexpression": "GROUP BY school.enrollment"}], "number": "Start the first query,", "subquery": "SELECT school.county FROM school WHERE school.location = Culver GROUP BY school.enrollment", "supplement": ""}], "duration": 47.457252979278564, "time": "2022-05-31 20:17:07"}
{"question": "show me the country", "dbid": "school_finance", "TBid": "school", "original explanations": [{"explanation": [{"explanation": "Get county of school", "subexpression": "SELECT school.county FROM school"}, {"explanation": "Keep the records that location of school is Culver", "subexpression": "WHERE school.location = Culver "}, {"explanation": "Group the records based on enrollment of school", "subexpression": "GROUP BY school.enrollment"}], "number": "Start the first query,", "subquery": "SELECT school.county FROM school WHERE school.location = Culver GROUP BY school.enrollment", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get county of school", "subexpression": "SELECT school.county FROM school"}, {"explanation": "Keep the records that location of school is Culver", "subexpression": "WHERE school.location = Culver "}, {"explanation": "order them", "subexpression": "GROUP BY school.enrollment"}], "number": "Start the first query,", "subquery": "SELECT school.county FROM school WHERE school.location = Culver GROUP BY school.enrollment", "supplement": ""}], "duration": 11.476628065109253, "time": "2022-05-31 20:17:20"}
{"question": "show me the country", "dbid": "school_finance", "TBid": "school", "original explanations": [{"explanation": [{"explanation": "Get county of school", "subexpression": "SELECT school.county FROM school"}, {"explanation": "Keep the records that location of school is Culver", "subexpression": "WHERE school.location = Culver "}, {"explanation": "Order these records based on the number", "subexpression": "ORDER BY COUNT ( * ) "}], "number": "Start the first query,", "subquery": "SELECT school.county FROM school WHERE school.location = Culver ORDER BY COUNT ( * ) ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get county of school", "subexpression": "SELECT school.county FROM school"}, {"explanation": "Keep the records that location of school is Culver", "subexpression": "WHERE school.location = Culver "}, {"explanation": "Order these records based on enrollment", "subexpression": "ORDER BY COUNT ( * ) "}], "number": "Start the first query,", "subquery": "SELECT school.county FROM school WHERE school.location = Culver ORDER BY COUNT ( * ) ASC", "supplement": ""}], "duration": 13.726642608642578, "time": "2022-05-31 20:17:35"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 3.1111717224121094, "time": "2022-05-31 20:20:15"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 1.587435007095337, "time": "2022-05-31 20:20:17"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 5.778397798538208, "time": "2022-05-31 20:20:23"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 2.4759204387664795, "time": "2022-05-31 20:20:26"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 1.6185061931610107, "time": "2022-05-31 20:20:28"}
{"question": "show me th eprice", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 3.050330638885498, "time": "2022-05-31 20:22:47"}
{"question": "show me th eprice", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 3.964144468307495, "time": "2022-05-31 20:22:51"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 1.036010980606079, "time": "2022-05-31 20:23:41"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 4.97734808921814, "time": "2022-05-31 20:23:47"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "duration": 5.624175548553467, "time": "2022-05-31 20:24:32"}
{"question": "show me the location", "dbid": "school_finance", "TBid": "school", "original explanations": [{"explanation": [{"explanation": "Get location of school", "subexpression": "SELECT school.location FROM school"}], "number": "Start the first query,", "subquery": "SELECT school.location FROM school", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get location of school", "subexpression": "SELECT school.location FROM school"}], "number": "Start the first query,", "subquery": "SELECT school.location FROM school", "supplement": ""}], "duration": 1.944518804550171, "time": "2022-05-31 20:25:21"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "duration": 3.163830041885376, "time": "2022-05-31 20:25:56"}
{"question": "show me the amount", "dbid": "school_finance", "TBid": "endowment", "original explanations": [{"explanation": [{"explanation": "Get the SUM of amount and SUM of endowment", "subexpression": "SELECT SUM ( endowment.amount ) FROM endowment"}], "number": "Start the first query,", "subquery": "SELECT SUM ( endowment.amount ) FROM endowment", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the SUM of amount and SUM of endowment", "subexpression": "SELECT SUM ( endowment.amount ) FROM endowment"}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT SUM ( endowment.amount ) FROM endowment", "supplement": ""}], "duration": 3.1848361492156982, "time": "2022-05-31 20:26:21"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 3.0605506896972656, "time": "2022-05-31 20:33:04"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 3.1398632526397705, "time": "2022-05-31 20:34:52"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 2.537785053253174, "time": "2022-05-31 20:34:55"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "order ascending", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 80.38797092437744, "time": "2022-05-31 20:36:16"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 2.0835318565368652, "time": "2022-05-31 20:38:35"}
{"question": "show me the invested", "dbid": "school_finance", "TBid": "budget", "original explanations": [{"explanation": [{"explanation": "Get invested of budget", "subexpression": "SELECT budget.invested FROM budget"}], "number": "Start the first query,", "subquery": "SELECT budget.invested FROM budget", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get invested of budget", "subexpression": "SELECT budget.invested FROM budget"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT budget.invested FROM budget", "supplement": ""}], "duration": 4.092031002044678, "time": "2022-05-31 20:39:16"}
{"question": "show me the hs", "dbid": "soccer_2", "TBid": "player", "original explanations": [{"explanation": [{"explanation": "Get pname of college that has tryout", "subexpression": "SELECT player.pname FROM college JOIN tryout"}], "number": "Start the first query,", "subquery": "SELECT player.pname FROM college JOIN tryout ON college.cname = tryout.cname", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get pname of college that has tryout", "subexpression": "SELECT player.pname FROM college JOIN tryout"}], "number": "Start the first query,", "subquery": "SELECT player.pname FROM college JOIN tryout ON college.cname = tryout.cname", "supplement": ""}], "duration": 0.921440601348877, "time": "2022-05-31 20:39:56"}
{"question": "show me the hs", "dbid": "soccer_2", "TBid": "player", "original explanations": [{"explanation": [{"explanation": "Get cname of college that has tryout", "subexpression": "SELECT college.cname FROM college JOIN tryout"}], "number": "Start the first query,", "subquery": "SELECT college.cname FROM college JOIN tryout ON college.cname = tryout.cname", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get cname of college that has tryout", "subexpression": "SELECT college.cname FROM college JOIN tryout"}], "number": "Start the first query,", "subquery": "SELECT college.cname FROM college JOIN tryout ON college.cname = tryout.cname", "supplement": ""}], "duration": 0.9114949703216553, "time": "2022-05-31 20:39:57"}
{"question": "asdf", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get publisher of publication", "subexpression": "SELECT publication.publisher FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.publisher FROM publication", "supplement": ""}, {"explanation": [{"explanation": "Get publisher of publication", "subexpression": "SELECT publication.publisher FROM publication"}], "number": "Start the second query,", "subquery": "SELECT publication.publisher FROM publication", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of the first query result and the second query result.", "subexpression": "the first query result intersect the second query result"}], "number": "Start the third query,", "subquery": "the first query result intersect the second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get publisher of publication", "subexpression": "SELECT publication.publisher FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.publisher FROM publication", "supplement": ""}, {"explanation": [{"explanation": "Get publisher of publication", "subexpression": "SELECT publication.publisher FROM publication"}], "number": "Start the second query,", "subquery": "SELECT publication.publisher FROM publication", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of the first query result and the second query result.", "subexpression": "the first query result intersect the second query result"}, {"explanation": "", "subexpression": "..."}], "number": "Start the third query,", "subquery": "the first query result intersect the second query result", "supplement": ""}], "duration": 7.895734071731567, "time": "2022-05-31 20:40:29"}
{"question": "asdfa", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get writer of publication", "subexpression": "SELECT book.writer FROM publication"}], "number": "Start the first query,", "subquery": "SELECT book.writer FROM publication", "supplement": ""}, {"explanation": [{"explanation": "Get writer of publication", "subexpression": "SELECT book.writer FROM publication"}], "number": "Start the second query,", "subquery": "SELECT book.writer FROM publication", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of the first query result and the second query result.", "subexpression": "the first query result intersect the second query result"}], "number": "Start the third query,", "subquery": "the first query result intersect the second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get writer of publication", "subexpression": "SELECT book.writer FROM publication"}], "number": "Start the first query,", "subquery": "SELECT book.writer FROM publication", "supplement": ""}, {"explanation": [{"explanation": "Get writer of publication", "subexpression": "SELECT book.writer FROM publication"}], "number": "Start the second query,", "subquery": "SELECT book.writer FROM publication", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of the first query result and the second query result.", "subexpression": "the first query result intersect the second query result"}], "number": "Start the third query,", "subquery": "the first query result intersect the second query result", "supplement": ""}], "duration": 1.0121650695800781, "time": "2022-05-31 20:51:37"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 5.4382383823394775, "time": "2022-05-31 20:52:47"}
{"question": "show me the interface", "dbid": "store_product", "TBid": "product", "original explanations": [{"explanation": [{"explanation": "Get interface of product", "subexpression": "SELECT product.interface FROM product"}], "number": "Start the first query,", "subquery": "SELECT product.interface FROM product", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get interface of product", "subexpression": "SELECT product.interface FROM product"}], "number": "Start the first query,", "subquery": "SELECT product.interface FROM product", "supplement": ""}], "duration": 0.912926197052002, "time": "2022-06-01 11:50:01"}
{"question": "show me the interface", "dbid": "store_product", "TBid": "product", "original explanations": [{"explanation": [{"explanation": "Get interface of product", "subexpression": "SELECT product.interface FROM product"}], "number": "Start the first query,", "subquery": "SELECT product.interface FROM product", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get interface of product", "subexpression": "SELECT product.interface FROM product"}], "number": "Start the first query,", "subquery": "SELECT product.interface FROM product", "supplement": ""}], "duration": 1.5772430896759033, "time": "2022-06-01 11:50:03"}
{"question": "show me the interface", "dbid": "store_product", "TBid": "product", "original explanations": [{"explanation": [{"explanation": "Get interface of product", "subexpression": "SELECT product.interface FROM product"}], "number": "Start the first query,", "subquery": "SELECT product.interface FROM product", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get interface of product", "subexpression": "SELECT product.interface FROM product"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT product.interface FROM product", "supplement": ""}], "duration": 4.6165244579315186, "time": "2022-06-01 11:50:09"}
{"question": "show me the dpi", "dbid": "store_product", "TBid": "product", "original explanations": [{"explanation": [{"explanation": "Get distinct and dpi of product", "subexpression": "SELECT DISTINCT product.dpi FROM product"}], "number": "Start the first query,", "subquery": "SELECT DISTINCT product.dpi FROM product", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get distinct and dpi of product", "subexpression": "SELECT DISTINCT product.dpi FROM product"}, {"explanation": "make dpi equal to 600", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT DISTINCT product.dpi FROM product", "supplement": ""}], "duration": 49.62639379501343, "time": "2022-06-01 13:20:47"}
{"question": "show me the enrollment", "dbid": "school_finance", "TBid": "school", "original explanations": [{"explanation": [{"explanation": "Get enrollment of school", "subexpression": "SELECT school.enrollment FROM school"}], "number": "Start the first query,", "subquery": "SELECT school.enrollment FROM school", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get enrollment of school", "subexpression": "SELECT school.enrollment FROM school"}, {"explanation": "make sure mascot is Lions", "subexpression": "..."}, {"explanation": "sort them ascendingly", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT school.enrollment FROM school", "supplement": ""}], "duration": 3337.8632593154907, "time": "2022-06-17 02:12:20"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}, {"explanation": "keep the records greater than 40000", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 13.881675481796265, "time": "2022-06-17 03:07:33"}
{"question": "show me the biggest trust", "dbid": "epinions_1", "TBid": "useracct", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Order these records based on trust of trust and sort them in descending order, and return the top 1 record", "subexpression": "ORDER BY trust.trust DESC LIMIT 1"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust ORDER BY trust.trust DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "keep the records that trust is less than 7", "subexpression": "..."}, {"explanation": "Order these records based on trust of trust and sort them in descending order, and return the top 1 record", "subexpression": "ORDER BY trust.trust DESC LIMIT 1"}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust ORDER BY trust.trust DESC LIMIT 1", "supplement": ""}], "duration": 107.10348892211914, "time": "2022-06-17 03:33:02"}
{"question": "show me the biggest trust", "dbid": "epinions_1", "TBid": "useracct", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Keep the records that", "subexpression": "WHERE trust.trust<7 "}, {"explanation": "Order these records based on trust of trust", "subexpression": "ORDER BY trust.trust "}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust WHERE trust.trust<7 ORDER BY trust.trust DESC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Keep the records that trust is less than 7", "subexpression": "WHERE trust.trust<7 "}, {"explanation": "Order these records based on trust of trust", "subexpression": "ORDER BY trust.trust "}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust WHERE trust.trust<7 ORDER BY trust.trust DESC", "supplement": ""}], "duration": 89.21870517730713, "time": "2022-06-17 03:34:31"}
{"question": "show me the biggest trust", "dbid": "epinions_1", "TBid": "useracct", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Keep the records that", "subexpression": "WHERE trust.trust<7 "}, {"explanation": "Order these records based on trust of trust", "subexpression": "ORDER BY trust.trust "}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust WHERE trust.trust<7 ORDER BY trust.trust ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Keep the records that asdfas", "subexpression": "WHERE trust.trust<7 "}, {"explanation": "Order these records based on trust of trust", "subexpression": "ORDER BY trust.trust "}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust WHERE trust.trust<7 ORDER BY trust.trust ASC", "supplement": ""}], "duration": 46.10582947731018, "time": "2022-06-17 03:35:18"}
{"question": "show me the biggest trust", "dbid": "epinions_1", "TBid": "useracct", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Keep the records that title of item is df", "subexpression": "WHERE item.title = df "}, {"explanation": "Order these records based on trust of trust", "subexpression": "ORDER BY trust.trust "}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust WHERE item.title = df ORDER BY trust.trust ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Keep the records that trust is less than 7", "subexpression": "WHERE item.title = df "}, {"explanation": "Order these records based on trust of trust", "subexpression": "ORDER BY trust.trust "}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust WHERE item.title = df ORDER BY trust.trust ASC", "supplement": ""}], "duration": 18.336814403533936, "time": "2022-06-17 03:35:37"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "sort them ascendingly", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "duration": 15.201683044433594, "time": "2022-06-17 04:05:22"}
{"question": "show me the biggest trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Order these records based on trust of trust and sort them in descending order, and return the top 1 record", "subexpression": "ORDER BY trust.trust DESC LIMIT 1"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust ORDER BY trust.trust DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Order these records based on trust of trust and sort them in descending order, and return the top 1 record", "subexpression": "ORDER BY trust.trust DESC LIMIT 1"}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust ORDER BY trust.trust DESC LIMIT 1", "supplement": ""}], "duration": 16.91328716278076, "time": "2022-06-17 04:23:24"}
{"question": "show me the biggest issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Order these records based on issues of book and sort them in descending order, and return the top 1 record", "subexpression": "ORDER BY book.issues DESC LIMIT 1"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book ORDER BY book.issues DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book ORDER BY book.issues DESC LIMIT 1", "supplement": ""}], "duration": 41.85568594932556, "time": "2022-06-17 04:44:05"}
{"question": "show me the biggest issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "duration": 11.27893352508545, "time": "2022-06-17 04:44:17"}
{"question": "show me the biggest issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Order these records based on issues of book and sort them in descending order, and return the top 1 record", "subexpression": "ORDER BY book.issues DESC LIMIT 1"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book ORDER BY book.issues DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Order these records based on issues of book and sort them in descending order, and return the top 1 record", "subexpression": "ORDER BY book.issues DESC LIMIT 1"}, {"explanation": "keep the recoreds that greater than 33", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book ORDER BY book.issues DESC LIMIT 1", "supplement": ""}], "duration": 34.14658713340759, "time": "2022-06-17 04:52:08"}
{"question": "show me the biggest issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Keep the records that issues of book is greater than 33", "subexpression": "WHERE book.issues > 33 "}, {"explanation": "Order these records based on issues of book", "subexpression": "ORDER BY book.issues "}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book WHERE book.issues > 33 ORDER BY book.issues DESC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Keep the records that issues of book is greater than 5", "subexpression": "WHERE book.issues > 33 "}, {"explanation": "Order these records based on issues of book", "subexpression": "ORDER BY book.issues "}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book WHERE book.issues > 33 ORDER BY book.issues DESC", "supplement": ""}], "duration": 22.01446509361267, "time": "2022-06-17 04:52:31"}
{"question": "show me the biggest issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Keep the records that issues of book is greater than 5", "subexpression": "WHERE book.issues > 5 "}, {"explanation": "Order these records based on issues of book", "subexpression": "ORDER BY book.issues "}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book WHERE book.issues > 5 ORDER BY book.issues ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Keep the records that issues of book is greater than 5", "subexpression": "WHERE book.issues > 5 "}, {"explanation": "Order these records based on issues of book", "subexpression": "ORDER BY book.issues "}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book WHERE book.issues > 5 ORDER BY book.issues ASC", "supplement": ""}], "duration": 1.732283353805542, "time": "2022-06-17 04:52:33"}
{"question": "show me the greatest value", "dbid": "train_station", "TBid": "train", "original explanations": [{"explanation": [{"explanation": "Get name of station", "subexpression": "SELECT station.name FROM station"}, {"explanation": "Order these records based on total passengers of station and sort them in descending order, and return the top 1 record", "subexpression": "ORDER BY station.total_passengers DESC LIMIT 1"}], "number": "Start the first query,", "subquery": "SELECT station.name FROM station ORDER BY station.total_passengers DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get name of station", "subexpression": "SELECT station.name FROM station"}, {"explanation": "Order these records based on total passengers of station and sort them in descending order, and return the top 1 record", "subexpression": "ORDER BY station.total_passengers DESC LIMIT 1"}], "number": "Start the first query,", "subquery": "SELECT station.name FROM station ORDER BY station.total_passengers DESC LIMIT 1", "supplement": ""}], "duration": 4.636418581008911, "time": "2022-06-17 05:05:33"}
{"question": "show me the greatest issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Order these records based on issues of book and sort them in descending order, and return the top 1 record", "subexpression": "ORDER BY book.issues DESC LIMIT 1"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book ORDER BY book.issues DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Order these records based on issues of book and sort them in descending order, and return the top 1 record", "subexpression": "ORDER BY book.issues DESC LIMIT 1"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book ORDER BY book.issues DESC LIMIT 1", "supplement": ""}], "duration": 5.916527271270752, "time": "2022-06-17 05:08:30"}
{"question": "show me the biggest trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Order these records based on trust of trust and sort them in descending order, and return the top 1 record", "subexpression": "ORDER BY trust.trust DESC LIMIT 1"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust ORDER BY trust.trust DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Order these records based on trust of trust and sort them in descending order, and return the top 1 record", "subexpression": "ORDER BY trust.trust DESC LIMIT 1"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust ORDER BY trust.trust DESC LIMIT 1", "supplement": ""}], "duration": 2.090294361114502, "time": "2022-06-17 05:10:00"}
{"question": "show me the greatest trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Order these records based on trust of trust and sort them in descending order, and return the top 1 record", "subexpression": "ORDER BY trust.trust DESC LIMIT 1"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust ORDER BY trust.trust DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Order these records based on trust of trust and sort them in descending order, and return the top 1 record", "subexpression": "ORDER BY trust.trust DESC LIMIT 1"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust ORDER BY trust.trust DESC LIMIT 1", "supplement": ""}], "duration": 4.637373447418213, "time": "2022-06-17 05:10:51"}
{"question": "show me the greatest issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Order these records based on issues of book and sort them in descending order, and return the top 1 record", "subexpression": "ORDER BY book.issues DESC LIMIT 1"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book ORDER BY book.issues DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Order these records based on issues of book and sort them in descending order, and return the top 1 record", "subexpression": "ORDER BY book.issues DESC LIMIT 1"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book ORDER BY book.issues DESC LIMIT 1", "supplement": ""}], "duration": 1.8372063636779785, "time": "2022-06-17 05:12:53"}
{"question": "show me the greatest amount", "dbid": "school_finance", "TBid": "endowment", "original explanations": [{"explanation": [{"explanation": "Get amount of endowment", "subexpression": "SELECT endowment.amount FROM endowment"}, {"explanation": "Order these records based on amount of endowment and sort them in descending order, and return the top 1 record", "subexpression": "ORDER BY endowment.amount DESC LIMIT 1"}], "number": "Start the first query,", "subquery": "SELECT endowment.amount FROM endowment ORDER BY endowment.amount DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get amount of endowment", "subexpression": "SELECT endowment.amount FROM endowment"}, {"explanation": "Order these records based on amount of endowment and sort them in descending order, and return the top 1 record", "subexpression": "ORDER BY endowment.amount DESC LIMIT 1"}], "number": "Start the first query,", "subquery": "SELECT endowment.amount FROM endowment ORDER BY endowment.amount DESC LIMIT 1", "supplement": ""}], "duration": 2.5664026737213135, "time": "2022-06-17 05:14:24"}
{"question": "show me the greatest amount", "dbid": "school_finance", "TBid": "endowment", "original explanations": [{"explanation": [{"explanation": "Get amount of endowment", "subexpression": "SELECT endowment.amount FROM endowment"}, {"explanation": "Order these records based on amount of endowment", "subexpression": "ORDER BY endowment.amount "}], "number": "Start the first query,", "subquery": "SELECT endowment.amount FROM endowment ORDER BY endowment.amount DESC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get amount of endowment", "subexpression": "SELECT endowment.amount FROM endowment"}, {"explanation": "Order these records based on amount of endowment", "subexpression": "ORDER BY endowment.amount "}], "number": "Start the first query,", "subquery": "SELECT endowment.amount FROM endowment ORDER BY endowment.amount DESC", "supplement": ""}], "duration": 4.9403395652771, "time": "2022-06-17 05:14:29"}
{"question": "show me the biggest trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Order these records based on trust of trust and sort them in descending order, and return the top 1 record", "subexpression": "ORDER BY trust.trust DESC LIMIT 1"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust ORDER BY trust.trust DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Order these records based on trust of trust and sort them in descending order, and return the top 1 record", "subexpression": "ORDER BY trust.trust DESC LIMIT 1"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust ORDER BY trust.trust DESC LIMIT 1", "supplement": ""}], "duration": 1.6542632579803467, "time": "2022-06-17 05:16:35"}
{"question": "show me the biggest trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Order these records based on trust of trust", "subexpression": "ORDER BY trust.trust "}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust ORDER BY trust.trust DESC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Order these records based on trust of trust", "subexpression": "ORDER BY trust.trust "}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust ORDER BY trust.trust DESC", "supplement": ""}], "duration": 26.101245403289795, "time": "2022-06-17 05:17:01"}
{"question": "show me the biggest trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Order these records based on trust of trust and sort them in descending order, and return the top 1 record", "subexpression": "ORDER BY trust.trust DESC LIMIT 1"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust ORDER BY trust.trust DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Order these records based on trust of trust and sort them in descending order, and return the top 1 record", "subexpression": "ORDER BY trust.trust DESC LIMIT 1"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust ORDER BY trust.trust DESC LIMIT 1", "supplement": ""}], "duration": 1.8794822692871094, "time": "2022-06-17 05:19:54"}
{"question": "show me the biggest price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get the maximum value of price of publication", "subexpression": "SELECT MAX ( publication.price ) FROM publication"}], "number": "Start the first query,", "subquery": "SELECT MAX ( publication.price ) FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the maximum value of price of publication", "subexpression": "SELECT MAX ( publication.price ) FROM publication"}, {"explanation": "order ascendingly\n", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT MAX ( publication.price ) FROM publication", "supplement": ""}], "duration": 8.988578081130981, "time": "2022-06-17 05:21:55"}
{"question": "show me the biggest price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get the maximum value of price of publication", "subexpression": "SELECT MAX ( publication.price ) FROM publication"}], "number": "Start the first query,", "subquery": "SELECT MAX ( publication.price ) FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the maximum value of price of publication", "subexpression": "SELECT MAX ( publication.price ) FROM publication"}, {"explanation": "order them\n", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT MAX ( publication.price ) FROM publication", "supplement": ""}], "duration": 6.9975574016571045, "time": "2022-06-17 05:23:15"}
{"question": "show me the biggest id", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get book id of book that has publication", "subexpression": "SELECT publication.book_id FROM book JOIN publication ON book.book_id = publication.book_id"}, {"explanation": "Group the records based on book id of book", "subexpression": "GROUP BY book.book_id"}, {"explanation": "Order these records based on the number and sort them in descending order, and return the top 1 record", "subexpression": "ORDER BY COUNT ( * ) DESC LIMIT 1"}], "number": "Start the first query,", "subquery": "SELECT publication.book_id FROM book JOIN publication ON book.book_id = publication.book_id GROUP BY book.book_id ORDER BY COUNT ( * ) DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get book id of book that has publication", "subexpression": "SELECT publication.book_id FROM book JOIN publication ON book.book_id = publication.book_id"}, {"explanation": "Group the records based on book id of book", "subexpression": "GROUP BY book.book_id"}, {"explanation": "Order these records based on the number and sort them in descending order, and return the top 1 record", "subexpression": "ORDER BY COUNT ( * ) DESC LIMIT 1"}], "number": "Start the first query,", "subquery": "SELECT publication.book_id FROM book JOIN publication ON book.book_id = publication.book_id GROUP BY book.book_id ORDER BY COUNT ( * ) DESC LIMIT 1", "supplement": ""}], "duration": 2.453629970550537, "time": "2022-06-17 05:25:40"}
{"question": "show me the biggest id", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get book id of book that has publication", "subexpression": "SELECT book.book_id FROM book JOIN publication ON book.book_id = publication.book_id"}, {"explanation": "Group the records based on book id of book", "subexpression": "GROUP BY book.book_id"}, {"explanation": "Order these records based on the number", "subexpression": "ORDER BY COUNT ( * ) "}], "number": "Start the first query,", "subquery": "SELECT book.book_id FROM book JOIN publication ON book.book_id = publication.book_id GROUP BY book.book_id ORDER BY COUNT ( * ) DESC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get book id of book that has publication", "subexpression": "SELECT book.book_id FROM book JOIN publication ON book.book_id = publication.book_id"}, {"explanation": "Group the records based on book id of book", "subexpression": "GROUP BY book.book_id"}, {"explanation": "Order these records based on the number", "subexpression": "ORDER BY COUNT ( * ) "}], "number": "Start the first query,", "subquery": "SELECT book.book_id FROM book JOIN publication ON book.book_id = publication.book_id GROUP BY book.book_id ORDER BY COUNT ( * ) DESC", "supplement": ""}], "duration": 10.683173418045044, "time": "2022-06-17 05:25:51"}
{"question": "show me the biggest issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Order these records based on issues of book and sort them in descending order, and return the top 1 record", "subexpression": "ORDER BY book.issues DESC LIMIT 1"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book ORDER BY book.issues DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Order these records based on issues of book and sort them in descending order, and return the top 1 record", "subexpression": "ORDER BY book.issues DESC LIMIT 1"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book ORDER BY book.issues DESC LIMIT 1", "supplement": ""}], "duration": 1.9033229351043701, "time": "2022-06-17 05:32:00"}
{"question": "show me the biggest issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Order these records based on issues of book", "subexpression": "ORDER BY book.issues "}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book ORDER BY book.issues DESC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Order these records based on issues of book", "subexpression": "ORDER BY book.issues "}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book ORDER BY book.issues DESC", "supplement": ""}], "duration": 13.429856061935425, "time": "2022-06-17 05:32:14"}
{"question": "show me the biggest issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Order these records based on issues of book", "subexpression": "ORDER BY book.issues "}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book ORDER BY book.issues ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Order these records based on issues of book", "subexpression": "ORDER BY book.issues "}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book ORDER BY book.issues ASC", "supplement": ""}], "duration": 8.369908571243286, "time": "2022-06-17 05:32:23"}
{"question": "find the greatest trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Order these records based on trust of trust and sort them in descending order, and return the top 1 record", "subexpression": "ORDER BY trust.trust DESC LIMIT 1"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust ORDER BY trust.trust DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "make sure trust is greater than 7", "subexpression": "..."}, {"explanation": "Order these records based on trust of trust and sort them in descending order, and return the top 1 record", "subexpression": "ORDER BY trust.trust DESC LIMIT 1"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust ORDER BY trust.trust DESC LIMIT 1", "supplement": ""}], "duration": 16.701139211654663, "time": "2022-06-17 11:38:20"}
{"question": "asdfa", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get u id of useracct", "subexpression": "SELECT useracct.u_id FROM useracct"}], "number": "Start the first query,", "subquery": "SELECT useracct.u_id FROM useracct", "supplement": ""}, {"explanation": [{"explanation": "Get name of review", "subexpression": "SELECT useracct.name FROM review"}], "number": "Start the second query,", "subquery": "SELECT useracct.name FROM review", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of the first query result and the second query result.", "subexpression": "the first query result intersect the second query result"}], "number": "Start the third query,", "subquery": "the first query result intersect the second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get u id of useracct", "subexpression": "SELECT useracct.u_id FROM useracct"}], "number": "Start the first query,", "subquery": "SELECT useracct.u_id FROM useracct", "supplement": ""}, {"explanation": [{"explanation": "Get name of review", "subexpression": "SELECT useracct.name FROM review"}], "number": "Start the second query,", "subquery": "SELECT useracct.name FROM review", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of the first query result and the second query result.", "subexpression": "the first query result intersect the second query result"}], "number": "Start the third query,", "subquery": "the first query result intersect the second query result", "supplement": ""}], "duration": 15.186431407928467, "time": "2022-06-20 00:01:24"}
{"question": "show me all the location", "dbid": "train_station", "TBid": "station", "original explanations": [{"explanation": [{"explanation": "Get distinct location of station", "subexpression": "SELECT DISTINCT station.location FROM station"}], "number": "Start the first query,", "subquery": "SELECT DISTINCT station.location FROM station", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get distinct location of station", "subexpression": "SELECT DISTINCT station.location FROM station"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT DISTINCT station.location FROM station", "supplement": ""}], "duration": 13.044300556182861, "time": "2022-06-20 00:13:53"}
{"question": "show me the name", "dbid": "train_station", "TBid": "station", "original explanations": [{"explanation": [{"explanation": "Get name of station", "subexpression": "SELECT station.name FROM station"}], "number": "Start the first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get name of station", "subexpression": "SELECT station.name FROM station"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}], "duration": 413.222775220871, "time": "2022-06-20 22:07:55"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "duration": 29.942965030670166, "time": "2022-06-20 22:26:59"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "duration": 5429.156979560852, "time": "2022-06-20 23:57:29"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}, {"explanation": "order ascendingly", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 23.727991580963135, "time": "2022-06-21 00:00:10"}
{"question": "asdf", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get publisher of publication", "subexpression": "SELECT publication.publisher FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.publisher FROM publication", "supplement": ""}, {"explanation": [{"explanation": "Get publisher of publication", "subexpression": "SELECT publication.publisher FROM publication"}], "number": "Start the second query,", "subquery": "SELECT publication.publisher FROM publication", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of the first query result and the second query result.", "subexpression": "the first query result intersect the second query result"}], "number": "Start the third query,", "subquery": "the first query result intersect the second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get publisher of publication", "subexpression": "SELECT publication.publisher FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.publisher FROM publication", "supplement": ""}, {"explanation": [{"explanation": "Get publisher of publication", "subexpression": "SELECT publication.publisher FROM publication"}, {"explanation": "order ascendingly", "subexpression": "..."}], "number": "Start the second query,", "subquery": "SELECT publication.publisher FROM publication", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of the first query result and the second query result.", "subexpression": "the first query result intersect the second query result"}], "number": "Start the third query,", "subquery": "the first query result intersect the second query result", "supplement": ""}], "duration": 15.047019481658936, "time": "2022-06-21 00:00:51"}
{"question": "asdf", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get publisher of publication", "subexpression": "SELECT publication.publisher FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.publisher FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get publisher of publication", "subexpression": "SELECT publication.publisher FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.publisher FROM publication", "supplement": ""}], "duration": 120.40223979949951, "time": "2022-06-21 00:02:52"}
{"question": "asdf", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get publisher of publication", "subexpression": "SELECT publication.publisher FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.publisher FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get publisher of publication", "subexpression": "SELECT publication.publisher FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.publisher FROM publication", "supplement": ""}], "duration": 1.1596133708953857, "time": "2022-06-21 00:02:53"}
{"question": "show me the location", "dbid": "train_station", "TBid": "station", "original explanations": [{"explanation": [{"explanation": "Get location of station", "subexpression": "SELECT station.location FROM station"}], "number": "Start the first query,", "subquery": "SELECT station.location FROM station", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get location of station", "subexpression": "SELECT station.location FROM station"}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT station.location FROM station", "supplement": ""}], "duration": 2.8459553718566895, "time": "2022-06-21 00:50:08"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 3.549488067626953, "time": "2022-06-21 00:51:04"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 1.6580736637115479, "time": "2022-06-21 00:51:06"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 0.6765139102935791, "time": "2022-06-21 00:51:07"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 0.6351182460784912, "time": "2022-06-21 00:51:08"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 0.5468761920928955, "time": "2022-06-21 00:51:08"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 0.6687712669372559, "time": "2022-06-21 00:51:09"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 1.0200586318969727, "time": "2022-06-21 00:51:10"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 1.320704460144043, "time": "2022-06-21 00:51:12"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 0.5142617225646973, "time": "2022-06-21 00:51:13"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 0.8641073703765869, "time": "2022-06-21 00:51:14"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 1.2695395946502686, "time": "2022-06-21 00:51:15"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 0.901940107345581, "time": "2022-06-21 00:51:16"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 0.9616968631744385, "time": "2022-06-21 00:51:18"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 0.8892381191253662, "time": "2022-06-21 00:51:19"}
{"question": "", "dbid": "", "TBid": "", "original explanations": [], "edited explanations": [], "duration": 1655788152.7340245, "time": "2022-06-21 01:09:12"}
{"question": "", "dbid": "", "TBid": "", "original explanations": [], "edited explanations": [], "duration": 1655788157.5517268, "time": "2022-06-21 01:09:17"}
{"question": "", "dbid": "", "TBid": "", "original explanations": [], "edited explanations": [], "duration": 1655788794.9222152, "time": "2022-06-21 01:19:54"}
{"question": "show me the title", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "duration": 7.165517568588257, "time": "2022-06-21 01:26:37"}
{"question": "show me the title", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "duration": 8.246683835983276, "time": "2022-06-21 01:26:45"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 14.975202083587646, "time": "2022-06-21 01:30:55"}
{"question": "", "dbid": "", "TBid": "", "original explanations": [], "edited explanations": [], "duration": 1655790238.2082007, "time": "2022-06-21 01:43:58"}
{"question": "show me the county", "dbid": "school_finance", "TBid": "school", "original explanations": [{"explanation": [{"explanation": "Get county of school", "subexpression": "SELECT school.county FROM school"}], "number": "Start the first query,", "subquery": "SELECT school.county FROM school", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get county of school", "subexpression": "SELECT school.county FROM school"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT school.county FROM school", "supplement": ""}], "duration": 18.147518634796143, "time": "2022-06-21 03:04:08"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 10.241002321243286, "time": "2022-06-21 03:10:32"}
{"question": "", "dbid": "", "TBid": "", "original explanations": [], "edited explanations": [], "duration": 1655837756.6258612, "time": "2022-06-21 14:55:56"}
{"question": "", "dbid": "", "TBid": "", "original explanations": [], "edited explanations": [], "duration": 1655837946.6663876, "time": "2022-06-21 14:59:06"}
{"question": "", "dbid": "", "TBid": "", "original explanations": [], "edited explanations": [], "duration": 1655838162.0630565, "time": "2022-06-21 15:02:42"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "adsf", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 22.34090280532837, "time": "2022-06-21 15:03:15"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Keep the records that trust of trust is ads", "subexpression": "WHERE trust.trust = ads"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust WHERE trust.trust = ads", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Keep the records that trust of trust is ads", "subexpression": "WHERE trust.trust = ads"}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust WHERE trust.trust = ads", "supplement": ""}], "duration": 153.62652492523193, "time": "2022-06-21 15:05:49"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Keep the records that trust of trust is ads", "subexpression": "WHERE trust.trust = ads"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust WHERE trust.trust = ads", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Keep the records that trust of trust is ads", "subexpression": "WHERE trust.trust = ads"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust WHERE trust.trust = ads", "supplement": ""}], "duration": 1.0490710735321045, "time": "2022-06-21 15:05:51"}
{"question": "show me the trust", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Keep the records that trust of trust is ads", "subexpression": "WHERE trust.trust = ads"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust WHERE trust.trust = ads", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Keep the records that trust of trust is ads", "subexpression": "WHERE trust.trust = ads"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust WHERE trust.trust = ads", "supplement": ""}], "duration": 64.09988927841187, "time": "2022-06-21 15:06:55"}
{"question": "show me the trust", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get writer of publication", "subexpression": "SELECT book.writer FROM publication"}, {"explanation": "Keep the records that title of book is yes", "subexpression": "WHERE book.title = yes"}], "number": "Start the first query,", "subquery": "SELECT book.writer FROM publication WHERE book.title = yes", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title", "subexpression": "SELECT book.writer FROM publication"}, {"explanation": "Keep the records that title of book is yes", "subexpression": "WHERE book.title = yes"}], "number": "Start the first query,", "subquery": "SELECT book.writer FROM publication WHERE book.title = yes", "supplement": ""}], "duration": 14.815905094146729, "time": "2022-06-21 15:07:10"}
{"question": "show me the trust", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Keep the records that title of book is yes", "subexpression": "WHERE book.title = yes"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book WHERE book.title = yes", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Keep the records that title is yes", "subexpression": "WHERE book.title = yes"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book WHERE book.title = yes", "supplement": ""}], "duration": 313.21418142318726, "time": "2022-06-21 15:12:24"}
{"question": "show me the trust", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Keep the records that title of book is yes", "subexpression": "WHERE book.title = yes"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book WHERE book.title = yes", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Keep the records that title of book is Bloody Mary", "subexpression": "WHERE book.title = yes"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book WHERE book.title = yes", "supplement": ""}], "duration": 18.14880347251892, "time": "2022-06-21 15:12:43"}
{"question": "show me the trust", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Keep the records that title of book is Bloody and Mary", "subexpression": "WHERE book.title = Bloody Mary"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book WHERE book.title = Bloody Mary", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Keep the records that title of book is \"Bloody Mary\"", "subexpression": "WHERE book.title = Bloody Mary"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book WHERE book.title = Bloody Mary", "supplement": ""}], "duration": 17.182804822921753, "time": "2022-06-21 15:13:00"}
{"question": "show me the writer whose title is Bloody Mary", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get writer of book", "subexpression": "SELECT book.writer FROM book"}, {"explanation": "Keep the records that title of book is Bloody and Mary", "subexpression": "WHERE book.title = Bloody Mary"}], "number": "Start the first query,", "subquery": "SELECT book.writer FROM book WHERE book.title = Bloody Mary", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.writer FROM book"}, {"explanation": "Keep the records that title of book is Bloody and Mary", "subexpression": "WHERE book.title = Bloody Mary"}], "number": "Start the first query,", "subquery": "SELECT book.writer FROM book WHERE book.title = Bloody Mary", "supplement": ""}], "duration": 18.764105081558228, "time": "2022-06-21 15:22:33"}
{"question": "show me the writer whose title is Bloody Mary", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Keep the records that title of book is Bloody and Mary", "subexpression": "WHERE book.title = Bloody and Mary"}], "number": "Start the first query,", "subquery": "SELECT book.writer FROM book WHERE book.title = Bloody Mary", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Keep the records that title of book is Bloody and Mary", "subexpression": "WHERE book.title = Bloody and Mary"}], "number": "Start the first query,", "subquery": "SELECT book.writer FROM book WHERE book.title = Bloody Mary", "supplement": ""}], "duration": 10.128215074539185, "time": "2022-06-21 15:22:43"}
{"question": "show me the writer whose title is Bloody Mary", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Keep the records that title of book is Bloody and Mary", "subexpression": "WHERE book.title = Bloody and Mary"}], "number": "Start the first query,", "subquery": "SELECT book.writer FROM book WHERE book.title = Bloody Mary", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Keep the records that title of book is \"Bloody Mary\"", "subexpression": "WHERE book.title = Bloody and Mary"}], "number": "Start the first query,", "subquery": "SELECT book.writer FROM book WHERE book.title = Bloody Mary", "supplement": ""}], "duration": 16.185606002807617, "time": "2022-06-21 15:22:59"}
{"question": "show me the writer whose title is Bloody Mary", "dbid": "csu_1", "TBid": "campuses", "original explanations": [{"explanation": [{"explanation": "Get writer of book", "subexpression": "SELECT book.writer FROM book"}, {"explanation": "Keep the records that title of book is Bloody and Mary", "subexpression": "WHERE book.title = Bloody Mary"}], "number": "Start the first query,", "subquery": "SELECT book.writer FROM book WHERE book.title = Bloody Mary", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get writer", "subexpression": "SELECT book.writer FROM book"}, {"explanation": "Keep the records that title is \"Bloody Mary\"", "subexpression": "WHERE book.title = Bloody Mary"}, {"explanation": "make sure the year is 1965", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT book.writer FROM book WHERE book.title = Bloody Mary", "supplement": ""}], "duration": 378.48553133010864, "time": "2022-06-21 15:29:45"}
{"question": "show me the writer whose title is Bloody Mary", "dbid": "csu_1", "TBid": "campuses", "original explanations": [{"explanation": [{"explanation": "Get campus of campuses", "subexpression": "SELECT campuses.campus FROM campuses"}, {"explanation": "Keep the records that campus of campuses is Bloody AND Mary AND year of campuses is 1965", "subexpression": "WHERE campuses.campus = Bloody Mary AND campuses.year = 1965"}], "number": "Start the first query,", "subquery": "SELECT campuses.campus FROM campuses WHERE campuses.campus = Bloody Mary AND campuses.year = 1965", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get campus of campuses", "subexpression": "SELECT campuses.campus FROM campuses"}, {"explanation": "Keep the records that year of campuses is 1965", "subexpression": "WHERE campuses.campus = Bloody Mary AND campuses.year = 1965"}], "number": "Start the first query,", "subquery": "SELECT campuses.campus FROM campuses WHERE campuses.campus = Bloody Mary AND campuses.year = 1965", "supplement": ""}], "duration": 78.57342147827148, "time": "2022-06-21 15:31:04"}
{"question": "show me the writer whose title is Bloody Mary", "dbid": "csu_1", "TBid": "campuses", "original explanations": [{"explanation": [{"explanation": "Get campus of campuses", "subexpression": "SELECT campuses.campus FROM campuses"}, {"explanation": "Keep the records that year of campuses is 1965", "subexpression": "WHERE campuses.year = 1965"}], "number": "Start the first query,", "subquery": "SELECT campuses.campus FROM campuses WHERE campuses.year = 1965", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get campus of campuses", "subexpression": "SELECT campuses.campus FROM campuses"}, {"explanation": "make sure the year is 1965", "subexpression": "WHERE campuses.year = 1965"}], "number": "Start the first query,", "subquery": "SELECT campuses.campus FROM campuses WHERE campuses.year = 1965", "supplement": ""}], "duration": 12.916004419326782, "time": "2022-06-21 15:31:18"}
{"question": "show me the writer whose title is Bloody Mary", "dbid": "csu_1", "TBid": "discipline_enrollments", "original explanations": [{"explanation": [{"explanation": "Get campus of campuses", "subexpression": "SELECT campuses.campus FROM campuses"}, {"explanation": "Keep the records that year of campuses is 1965", "subexpression": "WHERE campuses.year = 1965"}], "number": "Start the first query,", "subquery": "SELECT campuses.campus FROM campuses WHERE campuses.year = 1965", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Keep the records that year is 1965", "subexpression": "WHERE campuses.year = 1965"}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT campuses.campus FROM campuses WHERE campuses.year = 1965", "supplement": ""}], "duration": 5818.776329755783, "time": "2022-06-21 17:08:17"}
{"question": "", "dbid": "", "TBid": "", "original explanations": [], "edited explanations": [], "duration": 1655869457.7137725, "time": "2022-06-21 23:44:17"}
{"question": "show me the amount", "dbid": "school_finance", "TBid": "endowment", "original explanations": [{"explanation": [{"explanation": "Get the SUM of amount and SUM of endowment", "subexpression": "SELECT SUM ( endowment.amount ) FROM endowment"}], "number": "Start the first query,", "subquery": "SELECT SUM ( endowment.amount ) FROM endowment", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the SUM of amount and SUM of endowment", "subexpression": "SELECT SUM ( endowment.amount ) FROM endowment"}], "number": "Start the first query,", "subquery": "SELECT SUM ( endowment.amount ) FROM endowment", "supplement": ""}], "duration": 37.58047533035278, "time": "2022-06-21 23:45:57"}
{"question": "show me the title", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "order the records ascendingly", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "duration": 22.590928554534912, "time": "2022-06-22 00:02:47"}
{"question": "show me the title", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "Group the records based on trust of trust", "subexpression": "GROUP BY trust.trust"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item GROUP BY trust.trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "Group the records based on trust of trust", "subexpression": "GROUP BY trust.trust"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item GROUP BY trust.trust", "supplement": ""}], "duration": 8.195921659469604, "time": "2022-06-22 00:02:56"}
{"question": "show me the title", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "Group the records based on trust of trust", "subexpression": "GROUP BY trust.trust"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item GROUP BY trust.trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "Group the records based on trust of trust", "subexpression": "GROUP BY trust.trust"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item GROUP BY trust.trust", "supplement": ""}], "duration": 2.7979300022125244, "time": "2022-06-22 00:02:59"}
{"question": "show me the title", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "Group the records based on trust of trust", "subexpression": "GROUP BY trust.trust"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item GROUP BY trust.trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "Group the records based on trust of trust", "subexpression": "GROUP BY trust.trust"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item GROUP BY trust.trust", "supplement": ""}], "duration": 1.2513389587402344, "time": "2022-06-22 00:03:01"}
{"question": "show me the title", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "Group the records based on trust of trust", "subexpression": "GROUP BY trust.trust"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item GROUP BY trust.trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "Group the records based on trust of trust", "subexpression": "GROUP BY trust.trust"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item GROUP BY trust.trust", "supplement": ""}], "duration": 1.2474465370178223, "time": "2022-06-22 00:03:02"}
{"question": "show me the title", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "Group the records based on trust of trust", "subexpression": "GROUP BY trust.trust"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item GROUP BY trust.trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "Group the records based on trust of trust", "subexpression": "GROUP BY trust.trust"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item GROUP BY trust.trust", "supplement": ""}], "duration": 1.3086042404174805, "time": "2022-06-22 00:03:04"}
{"question": "show me the title", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "Group the records based on trust of trust", "subexpression": "GROUP BY trust.trust"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item GROUP BY trust.trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "Group the records based on trust of trust", "subexpression": "GROUP BY trust.trust"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item GROUP BY trust.trust", "supplement": ""}], "duration": 4.325216770172119, "time": "2022-06-22 00:03:08"}
{"question": "show me the title", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "Group the records based on trust of trust", "subexpression": "GROUP BY trust.trust"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item GROUP BY trust.trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "Group the records based on trust of trust", "subexpression": "GROUP BY trust.trust"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item GROUP BY trust.trust", "supplement": ""}], "duration": 1.6716461181640625, "time": "2022-06-22 00:03:10"}
{"question": "show me the title", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "Group the records based on trust of trust", "subexpression": "GROUP BY trust.trust"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item GROUP BY trust.trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "Group the recadfasdords based on trust of trust", "subexpression": "GROUP BY trust.trust"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item GROUP BY trust.trust", "supplement": ""}], "duration": 3.2415339946746826, "time": "2022-06-22 00:03:14"}
{"question": "show me the title", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "Group the records based on trust of trust", "subexpression": "GROUP BY trust.trust"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item GROUP BY trust.trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "Group the records based on trust of trust", "subexpression": "GROUP BY trust.trust"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item GROUP BY trust.trust", "supplement": ""}], "duration": 0.8772358894348145, "time": "2022-06-22 00:03:15"}
{"question": "show me the title", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "Group the records based on trust of trust", "subexpression": "GROUP BY trust.trust"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item GROUP BY trust.trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "Group the records based on trust of trust", "subexpression": "GROUP BY trust.trust"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item GROUP BY trust.trust", "supplement": ""}], "duration": 3.2691562175750732, "time": "2022-06-22 00:03:19"}
{"question": "show me the title", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "Group the records based on trust of trust", "subexpression": "GROUP BY trust.trust"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item GROUP BY trust.trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "Group the records based on trust of trust", "subexpression": "GROUP BY trust.trust"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item GROUP BY trust.trust", "supplement": ""}], "duration": 1.7016644477844238, "time": "2022-06-22 00:03:21"}
{"question": "show me the title", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "Group the records based on trust of trust", "subexpression": "GROUP BY trust.trust"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item GROUP BY trust.trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "Group the records based on trust of trust", "subexpression": "GROUP BY trust.trust"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item GROUP BY trust.trust", "supplement": ""}], "duration": 1.6109607219696045, "time": "2022-06-22 00:03:23"}
{"question": "show me the title", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "Group the records based on trust of trust", "subexpression": "GROUP BY trust.trust"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item GROUP BY trust.trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "Group the records based on trust of trust", "subexpression": "GROUP BY trust.trust"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item GROUP BY trust.trust", "supplement": ""}], "duration": 7.808894634246826, "time": "2022-06-22 00:03:31"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 3.7916479110717773, "time": "2022-06-22 00:04:41"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 3.793966293334961, "time": "2022-06-22 00:04:45"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}, {"explanation": "order them ascendingly", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 9.075915575027466, "time": "2022-06-22 00:04:54"}
{"question": "show me the time", "dbid": "train_station", "TBid": "train", "original explanations": [{"explanation": [{"explanation": "Get time of train", "subexpression": "SELECT train.time FROM train"}], "number": "Start the first query,", "subquery": "SELECT train.time FROM train", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get time of train", "subexpression": "SELECT train.time FROM train"}, {"explanation": "order them ascendingly", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT train.time FROM train", "supplement": ""}], "duration": 11.343966007232666, "time": "2022-06-22 00:19:10"}
{"question": "show me the time", "dbid": "train_station", "TBid": "train", "original explanations": [{"explanation": [{"explanation": "Get time of train", "subexpression": "SELECT train.time FROM train"}, {"explanation": "Group the records based on name of station", "subexpression": "GROUP BY station.name"}], "number": "Start the first query,", "subquery": "SELECT train.time FROM train GROUP BY station.name", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get time of train", "subexpression": "SELECT train.time FROM train"}, {"explanation": "Group the records based on name of station", "subexpression": "GROUP BY station.name"}], "number": "Start the first query,", "subquery": "SELECT train.time FROM train GROUP BY station.name", "supplement": ""}], "duration": 7.724024295806885, "time": "2022-06-22 00:19:18"}
{"question": "show me the name", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "duration": 0.9782037734985352, "time": "2022-06-22 00:21:36"}
{"question": "show me the name", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "order them ascendingly", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "duration": 12.072314500808716, "time": "2022-06-22 00:21:48"}
{"question": "show me the name", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Group the records based on writer of book", "subexpression": "GROUP BY book.writer"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book GROUP BY book.writer", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Group the records based on writer of book", "subexpression": "GROUP BY book.writer"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book GROUP BY book.writer", "supplement": ""}], "duration": 21.25910210609436, "time": "2022-06-22 00:22:09"}
{"question": "show me the name", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Group the records based on writer of book", "subexpression": "GROUP BY book.writer"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book GROUP BY book.writer", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Group the records based on writer of book", "subexpression": "GROUP BY book.writer"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book GROUP BY book.writer", "supplement": ""}], "duration": 47.773805141448975, "time": "2022-06-22 00:22:58"}
{"question": "show me the name", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Group the records based on writer of book", "subexpression": "GROUP BY book.writer"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book GROUP BY book.writer", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book GROUP BY book.writer", "supplement": ""}], "duration": 20.595885038375854, "time": "2022-06-22 00:23:19"}
{"question": "show me the time", "dbid": "train_station", "TBid": "train", "original explanations": [{"explanation": [{"explanation": "Get time of train", "subexpression": "SELECT train.time FROM train"}], "number": "Start the first query,", "subquery": "SELECT train.time FROM train", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get time of train", "subexpression": "SELECT train.time FROM train"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT train.time FROM train", "supplement": ""}], "duration": 5.289511442184448, "time": "2022-06-22 00:26:18"}
{"question": "show me the title", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "duration": 2.925948143005371, "time": "2022-06-22 00:39:21"}
{"question": "show me the title", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "duration": 11.739385843276978, "time": "2022-06-22 00:39:33"}
{"question": "show me the title", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "duration": 40.7566864490509, "time": "2022-06-22 00:40:14"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 2.1474077701568604, "time": "2022-06-22 00:43:40"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 0.5458872318267822, "time": "2022-06-22 00:43:41"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 0.35944557189941406, "time": "2022-06-22 00:43:42"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 32.259135723114014, "time": "2022-06-22 00:44:14"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 0.7870297431945801, "time": "2022-06-22 00:44:16"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 0.7660908699035645, "time": "2022-06-22 00:44:17"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 0.1605210304260254, "time": "2022-06-22 00:44:17"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 0.19233036041259766, "time": "2022-06-22 00:44:17"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 0.3389279842376709, "time": "2022-06-22 00:44:17"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 0.21238493919372559, "time": "2022-06-22 00:44:17"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 0.33100056648254395, "time": "2022-06-22 00:44:17"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 0.43169093132019043, "time": "2022-06-22 00:44:18"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 0.31735825538635254, "time": "2022-06-22 00:44:18"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 18.189278841018677, "time": "2022-06-22 00:44:56"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 0.1773817539215088, "time": "2022-06-22 00:44:56"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 0.293515682220459, "time": "2022-06-22 00:44:56"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 0.26216554641723633, "time": "2022-06-22 00:44:57"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 0.2981400489807129, "time": "2022-06-22 00:44:57"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 0.4897160530090332, "time": "2022-06-22 00:44:58"}
{"question": "show me the title", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "duration": 5.0627827644348145, "time": "2022-06-22 00:45:20"}
{"question": "show me the title", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "keep the records that issues is 6", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "duration": 17.723098754882812, "time": "2022-06-22 00:45:38"}
{"question": "show me the name", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "duration": 2.280759572982788, "time": "2022-06-22 00:46:54"}
{"question": "show me the county", "dbid": "school_finance", "TBid": "school", "original explanations": [{"explanation": [{"explanation": "Get county of school", "subexpression": "SELECT school.county FROM school"}], "number": "Start the first query,", "subquery": "SELECT school.county FROM school", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get county of school", "subexpression": "SELECT school.county FROM school"}], "number": "Start the first query,", "subquery": "SELECT school.county FROM school", "supplement": ""}], "duration": 1.912367343902588, "time": "2022-06-22 00:57:23"}
{"question": "show me the county", "dbid": "school_finance", "TBid": "school", "original explanations": [{"explanation": [{"explanation": "Get county of school", "subexpression": "SELECT school.county FROM school"}], "number": "Start the first query,", "subquery": "SELECT school.county FROM school", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get county of school", "subexpression": "SELECT school.county FROM school"}], "number": "Start the first query,", "subquery": "SELECT school.county FROM school", "supplement": ""}], "duration": 2.3302202224731445, "time": "2022-06-22 00:57:26"}
{"question": "show me the county", "dbid": "school_finance", "TBid": "school", "original explanations": [{"explanation": [{"explanation": "Get county of school", "subexpression": "SELECT school.county FROM school"}], "number": "Start the first query,", "subquery": "SELECT school.county FROM school", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get county of school", "subexpression": "SELECT school.county FROM school"}], "number": "Start the first query,", "subquery": "SELECT school.county FROM school", "supplement": ""}], "duration": 0.1684248447418213, "time": "2022-06-22 00:57:26"}
{"question": "show me the county", "dbid": "school_finance", "TBid": "school", "original explanations": [{"explanation": [{"explanation": "Get county of school", "subexpression": "SELECT school.county FROM school"}], "number": "Start the first query,", "subquery": "SELECT school.county FROM school", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get county of school", "subexpression": "SELECT school.county FROM school"}], "number": "Start the first query,", "subquery": "SELECT school.county FROM school", "supplement": ""}], "duration": 0.2822892665863037, "time": "2022-06-22 00:57:26"}
{"question": "show me the county", "dbid": "school_finance", "TBid": "school", "original explanations": [{"explanation": [{"explanation": "Get county of school", "subexpression": "SELECT school.county FROM school"}], "number": "Start the first query,", "subquery": "SELECT school.county FROM school", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get county of school", "subexpression": "SELECT school.county FROM school"}], "number": "Start the first query,", "subquery": "SELECT school.county FROM school", "supplement": ""}], "duration": 0.21420598030090332, "time": "2022-06-22 00:57:27"}
{"question": "show me name", "dbid": "school_finance", "TBid": "school", "original explanations": [{"explanation": [{"explanation": "Get school name of school", "subexpression": "SELECT school.school_name FROM school"}], "number": "Start the first query,", "subquery": "SELECT school.school_name FROM school", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get school name of school", "subexpression": "SELECT school.school_name FROM school"}], "number": "Start the first query,", "subquery": "SELECT school.school_name FROM school", "supplement": ""}], "duration": 926.5544083118439, "time": "2022-06-22 01:12:59"}
{"question": "show me the name", "dbid": "train_station", "TBid": "station", "original explanations": [{"explanation": [{"explanation": "Get name of station", "subexpression": "SELECT station.name FROM station"}], "number": "Start the first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get name of station", "subexpression": "SELECT station.name FROM station"}], "number": "Start the first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}], "duration": 0.6053743362426758, "time": "2022-06-22 01:15:06"}
{"question": "show me the name", "dbid": "train_station", "TBid": "station", "original explanations": [{"explanation": [{"explanation": "Get name of station", "subexpression": "SELECT station.name FROM station"}], "number": "Start the first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get name of station", "subexpression": "SELECT station.name FROM station"}], "number": "Start the first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}], "duration": 0.34603214263916016, "time": "2022-06-22 01:15:06"}
{"question": "show me the name", "dbid": "train_station", "TBid": "station", "original explanations": [{"explanation": [{"explanation": "Get name of station", "subexpression": "SELECT station.name FROM station"}], "number": "Start the first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get name of station", "subexpression": "SELECT station.name FROM station"}], "number": "Start the first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}], "duration": 0.16181731224060059, "time": "2022-06-22 01:15:06"}
{"question": "show me the name", "dbid": "train_station", "TBid": "station", "original explanations": [{"explanation": [{"explanation": "Get name of station", "subexpression": "SELECT station.name FROM station"}], "number": "Start the first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get name of station", "subexpression": "SELECT station.name FROM station"}], "number": "Start the first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}], "duration": 0.2929983139038086, "time": "2022-06-22 01:15:07"}
{"question": "show me the name", "dbid": "train_station", "TBid": "station", "original explanations": [{"explanation": [{"explanation": "Get name of station", "subexpression": "SELECT station.name FROM station"}], "number": "Start the first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get name of station", "subexpression": "SELECT station.name FROM station"}], "number": "Start the first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}], "duration": 0.23282980918884277, "time": "2022-06-22 01:15:07"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 8.46769642829895, "time": "2022-06-22 01:21:12"}
{"question": "show me the id", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get i id of item", "subexpression": "SELECT item.i_id FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.i_id FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get i id of item", "subexpression": "SELECT item.i_id FROM item"}, {"explanation": "order the records increasingly", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT item.i_id FROM item", "supplement": ""}], "duration": 42.4324676990509, "time": "2022-06-22 01:35:10"}
{"question": "show me the id", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get i id of item", "subexpression": "SELECT item.i_id FROM item"}, {"explanation": "Group the records based on trust of trust", "subexpression": "GROUP BY trust.trust"}], "number": "Start the first query,", "subquery": "SELECT item.i_id FROM item GROUP BY trust.trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get i id of item", "subexpression": "SELECT item.i_id FROM item"}, {"explanation": "sort the records based on trust of trust", "subexpression": "GROUP BY trust.trust"}], "number": "Start the first query,", "subquery": "SELECT item.i_id FROM item GROUP BY trust.trust", "supplement": ""}], "duration": 7.955050468444824, "time": "2022-06-22 01:35:18"}
{"question": "show me the id", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get i id of item", "subexpression": "SELECT item.i_id FROM item"}, {"explanation": "Group the records based on trust of trust", "subexpression": "GROUP BY trust.trust"}], "number": "Start the first query,", "subquery": "SELECT item.i_id FROM item GROUP BY trust.trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get i id of item", "subexpression": "SELECT item.i_id FROM item"}, {"explanation": "Group the records based on trust of trust", "subexpression": "GROUP BY trust.trust"}], "number": "Start the first query,", "subquery": "SELECT item.i_id FROM item GROUP BY trust.trust", "supplement": ""}], "duration": 6.0113935470581055, "time": "2022-06-22 01:35:25"}
{"question": "show me the item", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "duration": 1.33762788772583, "time": "2022-06-22 01:36:34"}
{"question": "show me the item", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "sort them increasingly", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "duration": 11.516262292861938, "time": "2022-06-22 01:36:46"}
{"question": "", "dbid": "", "TBid": "", "original explanations": [], "edited explanations": [], "duration": 1655877716.9359624, "time": "2022-06-22 02:01:56"}
{"question": "", "dbid": "", "TBid": "", "original explanations": [], "edited explanations": [], "duration": 1655877719.9766035, "time": "2022-06-22 02:01:59"}
{"question": "show me the title", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "duration": 16.838329076766968, "time": "2022-06-22 02:05:06"}
{"question": "show me the title", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "duration": 17.233484268188477, "time": "2022-06-22 02:05:24"}
{"question": "show me the title", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "duration": 17.608336210250854, "time": "2022-06-22 02:05:42"}
{"question": "show me the title", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "sort the records increasingly", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "duration": 28.84267544746399, "time": "2022-06-22 02:06:11"}
{"question": "show me the title", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Group the records based on writer of book", "subexpression": "GROUP BY book.writer"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book GROUP BY book.writer", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Group the records based on writer of book", "subexpression": "GROUP BY book.writer"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book GROUP BY book.writer", "supplement": ""}], "duration": 6.286195993423462, "time": "2022-06-22 02:06:17"}
{"question": "show me the title", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Group the records based on writer of book", "subexpression": "GROUP BY book.writer"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book GROUP BY book.writer", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book GROUP BY book.writer", "supplement": ""}], "duration": 10.005363941192627, "time": "2022-06-22 02:06:28"}
{"question": "show me teh price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 18.07345700263977, "time": "2022-06-22 02:15:23"}
{"question": "show me teh price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}, {"explanation": "show me", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 20.70997929573059, "time": "2022-06-22 02:15:44"}
{"question": "show me the city", "dbid": "store_product", "TBid": "district", "original explanations": [{"explanation": [{"explanation": "Get headquartered city of district", "subexpression": "SELECT district.headquartered_city FROM district"}], "number": "Start the first query,", "subquery": "SELECT district.headquartered_city FROM district", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get headquartered city of district", "subexpression": "SELECT district.headquartered_city FROM district"}, {"explanation": "sort ascendingly", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT district.headquartered_city FROM district", "supplement": ""}], "duration": 23.584986686706543, "time": "2022-06-22 02:22:06"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "sort them ascendly", "subexpression": "..."}, {"explanation": "asdfasdf", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "duration": 11.477835178375244, "time": "2022-06-22 02:30:32"}
{"question": "show me the id", "dbid": "epinions_1", "TBid": "useracct", "original explanations": [{"explanation": [{"explanation": "Get i id of item", "subexpression": "SELECT item.i_id FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.i_id FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get i id of item", "subexpression": "SELECT item.i_id FROM item"}, {"explanation": "asdfas", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT item.i_id FROM item", "supplement": ""}], "duration": 6.289117097854614, "time": "2022-06-22 03:26:29"}
{"question": "show me the id", "dbid": "epinions_1", "TBid": "useracct", "original explanations": [{"explanation": [{"explanation": "Get i id of item", "subexpression": "SELECT item.i_id FROM item"}, {"explanation": "Keep the records that title of item is asdfas", "subexpression": "WHERE item.title = asdfas"}], "number": "Start the first query,", "subquery": "SELECT item.i_id FROM item WHERE item.title = asdfas", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get i id of item", "subexpression": "SELECT item.i_id FROM item"}, {"explanation": "aaa", "subexpression": "WHERE item.title = asdfas"}], "number": "Start the first query,", "subquery": "SELECT item.i_id FROM item WHERE item.title = asdfas", "supplement": ""}], "duration": 11.26063346862793, "time": "2022-06-22 03:26:40"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "asdfa", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "duration": 3.283694267272949, "time": "2022-06-22 03:33:24"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Keep the records that writer of book is", "subexpression": "WHERE book.writer = AS"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book WHERE book.writer = AS", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Keep the records that writer of book is", "subexpression": "WHERE book.writer = AS"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book WHERE book.writer = AS", "supplement": ""}], "duration": 8.264171361923218, "time": "2022-06-22 03:33:33"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Keep the records that writer of book is f", "subexpression": "WHERE book.writer = f"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book WHERE book.writer = f", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Keep the records that writer of book is f", "subexpression": "WHERE book.writer = f"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book WHERE book.writer = f", "supplement": ""}], "duration": 11.85312294960022, "time": "2022-06-22 03:33:45"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Keep the records that writer of book is f", "subexpression": "WHERE book.writer = f"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book WHERE book.writer = f", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Keep the records that writer of book is f", "subexpression": "WHERE book.writer = f"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book WHERE book.writer = f", "supplement": ""}], "duration": 6.226145029067993, "time": "2022-06-22 03:33:52"}
{"question": "show me the title", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "asdf", "subexpression": "..."}, {"explanation": "asd", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "duration": 4.848361015319824, "time": "2022-06-22 03:36:38"}
{"question": "show me the title", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "Keep the records that title of item is AND trust of trust is", "subexpression": "WHERE item.title = AS AND trust.trust = AS"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item WHERE item.title = AS AND trust.trust = AS", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "Keep the records that title of item is AND trust of trust is", "subexpression": "WHERE item.title = AS AND trust.trust = AS"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item WHERE item.title = AS AND trust.trust = AS", "supplement": ""}], "duration": 8.483102321624756, "time": "2022-06-22 03:36:47"}
{"question": "show me the title", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get title and trust of item", "subexpression": "SELECT item.title , trust.trust FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title, trust.trust FROM item JOIN trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title and trust of item", "subexpression": "SELECT item.title , trust.trust FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title, trust.trust FROM item JOIN trust", "supplement": ""}], "duration": 10.663501977920532, "time": "2022-06-22 03:36:58"}
{"question": "show me the title", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get title and trust of item", "subexpression": "SELECT item.title , trust.trust FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title , trust.trust FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title and trust of item", "subexpression": "SELECT item.title , trust.trust FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title , trust.trust FROM item", "supplement": ""}], "duration": 3.3857531547546387, "time": "2022-06-22 03:37:01"}
{"question": "show me the title", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get title and trust of item", "subexpression": "SELECT item.title , trust.trust FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title , trust.trust FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title , trust.trust FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title , trust.trust FROM item", "supplement": ""}], "duration": 10.5438711643219, "time": "2022-06-22 03:37:12"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "duration": 1.7589013576507568, "time": "2022-06-22 03:40:26"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "duration": 7.914788007736206, "time": "2022-06-22 03:40:34"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "duration": 10.997855186462402, "time": "2022-06-22 03:40:46"}
{"question": "show me the id", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get i id of item", "subexpression": "SELECT item.i_id FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.i_id FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get i id of item", "subexpression": "SELECT item.i_id FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.i_id FROM item", "supplement": ""}], "duration": 1.6858668327331543, "time": "2022-06-22 03:43:40"}
{"question": "show me the id", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get i id of item", "subexpression": "SELECT item.i_id FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.i_id FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get i id of item", "subexpression": "SELECT item.i_id FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.i_id FROM item", "supplement": ""}], "duration": 0.1367173194885254, "time": "2022-06-22 03:43:41"}
{"question": "show me the id", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get i id of item", "subexpression": "SELECT item.i_id FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.i_id FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get i id of item", "subexpression": "SELECT item.i_id FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.i_id FROM item", "supplement": ""}], "duration": 2.071073293685913, "time": "2022-06-22 03:43:43"}
{"question": "show me the title", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "duration": 2.835700750350952, "time": "2022-06-22 03:53:04"}
{"question": "show me the title", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "", "subexpression": ""}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "duration": 0.39526867866516113, "time": "2022-06-22 03:53:05"}
{"question": "show me the title", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "asdf", "subexpression": ""}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "duration": 4.218860387802124, "time": "2022-06-22 03:53:10"}
{"question": "show me the title", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Keep the records that writer of book is", "subexpression": "WHERE book.writer = AS"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book WHERE book.writer = AS", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Keep the records that writer of book is", "subexpression": "WHERE book.writer = AS"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book WHERE book.writer = AS", "supplement": ""}], "duration": 11.800522565841675, "time": "2022-06-22 03:53:22"}
{"question": "show me the title", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Keep the records that writer of book is f", "subexpression": "WHERE book.writer = f"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book WHERE book.writer = f", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Keep the records that writer of book is f", "subexpression": "WHERE book.writer = f"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book WHERE book.writer = f", "supplement": ""}], "duration": 12.74270486831665, "time": "2022-06-22 03:53:35"}
{"question": "show me the title", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Keep the records that writer of book is f", "subexpression": "WHERE book.writer = f"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book WHERE book.writer = f", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Keep the records that writer of book is f", "subexpression": "WHERE book.writer = f"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book WHERE book.writer = f", "supplement": ""}], "duration": 9.984864950180054, "time": "2022-06-22 03:53:45"}
{"question": "show me the title", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Keep the records that writer of book is f", "subexpression": "WHERE book.writer = f"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book WHERE book.writer = f", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Keep the records that writer of book is f", "subexpression": "WHERE book.writer = f"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book WHERE book.writer = f", "supplement": ""}], "duration": 55.36556792259216, "time": "2022-06-22 03:54:41"}
{"question": "show me the title", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Keep the records that writer of book is f", "subexpression": "WHERE book.writer = f"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book WHERE book.writer = f", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Keep the records that writer of book is f", "subexpression": "WHERE book.writer = f"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book WHERE book.writer = f", "supplement": ""}], "duration": 8.442859411239624, "time": "2022-06-22 03:54:50"}
{"question": "show me the title", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Keep the records that writer of book is f", "subexpression": "WHERE book.writer = f"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book WHERE book.writer = f", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "asdf", "subexpression": "WHERE book.writer = as"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "duration": 60.727200746536255, "time": "2022-06-22 03:55:51"}
{"question": "show me the title", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Keep the records that writer of book is", "subexpression": "WHERE book.writer = AS"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book WHERE book.writer = AS", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "asdf", "subexpression": "WHERE book.writer = as"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "duration": 10.667121648788452, "time": "2022-06-22 03:56:02"}
{"question": "show me the id", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get i id of item", "subexpression": "SELECT item.i_id FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.i_id FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get i id of item", "subexpression": "SELECT item.i_id FROM item"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT item.i_id FROM item", "supplement": ""}], "duration": 3.373126983642578, "time": "2022-06-22 04:00:14"}
{"question": "show me the id", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get i id of item", "subexpression": "SELECT item.i_id FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.i_id FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get i id of item", "subexpression": "SELECT item.i_id FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.i_id FROM item", "supplement": ""}], "duration": 8.183145761489868, "time": "2022-06-22 04:00:22"}
{"question": "show me the id", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get i id of item", "subexpression": "SELECT item.i_id FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.i_id FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get i id of item", "subexpression": "SELECT item.i_id FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.i_id FROM item", "supplement": ""}], "duration": 17.935636043548584, "time": "2022-06-22 04:00:40"}
{"question": "show me the id", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get i id of item", "subexpression": "SELECT item.i_id FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.i_id FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get i id of item", "subexpression": "SELECT item.i_id FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.i_id FROM item", "supplement": ""}], "duration": 77.59800601005554, "time": "2022-06-22 04:01:58"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "asdf", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 3.1193628311157227, "time": "2022-06-22 04:03:45"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Keep the records that title of item is", "subexpression": "WHERE item.title = AS"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust WHERE item.title = AS", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Keep the records that title of item is", "subexpression": "WHERE item.title = AS"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust WHERE item.title = AS", "supplement": ""}], "duration": 3.07966947555542, "time": "2022-06-22 04:03:48"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Keep the records that title of item is f", "subexpression": "WHERE item.title = f"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust WHERE item.title = f", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Keep the records that title of item is f", "subexpression": "WHERE item.title = f"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust WHERE item.title = f", "supplement": ""}], "duration": 8.688708305358887, "time": "2022-06-22 04:03:57"}
{"question": "show me the time", "dbid": "train_station", "TBid": "train", "original explanations": [{"explanation": [{"explanation": "Get time of train", "subexpression": "SELECT train.time FROM train"}], "number": "Start the first query,", "subquery": "SELECT train.time FROM train", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get time of train", "subexpression": "SELECT train.time FROM train"}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT train.time FROM train", "supplement": ""}], "duration": 5.729151248931885, "time": "2022-06-22 04:17:30"}
{"question": "show me the time", "dbid": "train_station", "TBid": "train", "original explanations": [{"explanation": [{"explanation": "Get time of train", "subexpression": "SELECT train.time FROM train"}], "number": "Start the first query,", "subquery": "SELECT train.time FROM train", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get time of train", "subexpression": "SELECT train.time FROM train"}], "number": "Start the first query,", "subquery": "SELECT train.time FROM train", "supplement": ""}], "duration": 16.12984800338745, "time": "2022-06-22 04:17:46"}
{"question": "show me the time", "dbid": "train_station", "TBid": "train", "original explanations": [{"explanation": [{"explanation": "Get time of train", "subexpression": "SELECT train.time FROM train"}], "number": "Start the first query,", "subquery": "SELECT train.time FROM train", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get time of train", "subexpression": "SELECT train.time FROM train"}, {"explanation": "", "subexpression": ""}], "number": "Start the first query,", "subquery": "SELECT train.time FROM train", "supplement": ""}], "duration": 41.79805374145508, "time": "2022-06-22 04:18:28"}
{"question": "show me the time", "dbid": "train_station", "TBid": "train", "original explanations": [{"explanation": [{"explanation": "Get time of train", "subexpression": "SELECT train.time FROM train"}], "number": "Start the first query,", "subquery": "SELECT train.time FROM train", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get time of train", "subexpression": "SELECT train.time FROM train"}, {"explanation": "", "subexpression": ""}], "number": "Start the first query,", "subquery": "SELECT train.time FROM train", "supplement": ""}], "duration": 253.2987253665924, "time": "2022-06-22 04:22:42"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "duration": 4.859424352645874, "time": "2022-06-22 04:24:51"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "duration": 1.5237984657287598, "time": "2022-06-22 04:27:02"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "duration": 0.3666057586669922, "time": "2022-06-22 04:27:03"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "duration": 6.6391706466674805, "time": "2022-06-22 04:27:10"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "duration": 12.041603326797485, "time": "2022-06-22 04:27:22"}
{"question": "show me the title", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "duration": 4.497659206390381, "time": "2022-06-22 04:32:37"}
{"question": "show me the title", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "", "subexpression": ""}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "duration": 0.7211558818817139, "time": "2022-06-22 04:32:38"}
{"question": "show me the title", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "", "subexpression": ""}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "duration": 22.507676124572754, "time": "2022-06-22 04:33:01"}
{"question": "show me the title", "dbid": "epinions_1", "TBid": "item", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "", "subexpression": ""}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "duration": 6.4435789585113525, "time": "2022-06-22 04:33:08"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "duration": 2.534632444381714, "time": "2022-06-22 04:35:19"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "", "subexpression": ""}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "duration": 6.939276933670044, "time": "2022-06-22 04:35:27"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 2.7476084232330322, "time": "2022-06-22 04:39:14"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 0.5180597305297852, "time": "2022-06-22 04:39:15"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 0.9158146381378174, "time": "2022-06-22 04:39:16"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get publisher of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 4.855031967163086, "time": "2022-06-22 04:39:21"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get publisher of publication", "subexpression": "SELECT publication.publisher FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.publisher FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}, {"explanation": "order the price ascendingly", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 16.274579524993896, "time": "2022-06-22 04:39:38"}
{"question": "show me the price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}, {"explanation": "Order these records based on price of publication", "subexpression": "ORDER BY publication.price "}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication ORDER BY publication.price ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "get aaa", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 20.55618691444397, "time": "2022-06-22 04:39:59"}
{"question": "show me the name", "dbid": "epinions_1", "TBid": "useracct", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "duration": 2.276665210723877, "time": "2022-06-22 04:40:36"}
{"question": "show me the name", "dbid": "epinions_1", "TBid": "useracct", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "duration": 0.19785189628601074, "time": "2022-06-22 04:40:36"}
{"question": "show me the name", "dbid": "epinions_1", "TBid": "useracct", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "duration": 0.3411417007446289, "time": "2022-06-22 04:40:36"}
{"question": "show me the name", "dbid": "epinions_1", "TBid": "useracct", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "duration": 0.2490997314453125, "time": "2022-06-22 04:40:36"}
{"question": "show me the name", "dbid": "epinions_1", "TBid": "useracct", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get publisher ", "subexpression": "SELECT item.title FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "duration": 13.49326753616333, "time": "2022-06-22 04:40:50"}
{"question": "show me the name", "dbid": "epinions_1", "TBid": "useracct", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "show me everything", "subexpression": "SELECT item.title FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "duration": 21.034982442855835, "time": "2022-06-22 04:41:12"}
{"question": "show me the results", "dbid": "epinions_1", "TBid": "useracct", "original explanations": [{"explanation": [{"explanation": "Get rank of item that has review", "subexpression": "SELECT review.rank FROM item JOIN review"}], "number": "Start the first query,", "subquery": "SELECT review.rank FROM item JOIN review ON item.i_id = review.i_id", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get rank of item that has review", "subexpression": "SELECT review.rank FROM item JOIN review"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT review.rank FROM item JOIN review ON item.i_id = review.i_id", "supplement": ""}], "duration": 10.89045786857605, "time": "2022-06-22 04:43:37"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 1.4715981483459473, "time": "2022-06-22 04:47:57"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 3.4646413326263428, "time": "2022-06-22 04:48:01"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "asdfa", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 6.66042947769165, "time": "2022-06-22 04:48:08"}
{"question": "show me the name", "dbid": "epinions_1", "TBid": "useracct", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get id of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "duration": 11.510454893112183, "time": "2022-06-22 04:49:07"}
{"question": "show me the name", "dbid": "epinions_1", "TBid": "useracct", "original explanations": [{"explanation": [{"explanation": "Get i id of item", "subexpression": "SELECT item.i_id FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.i_id FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "show me the i id", "subexpression": "SELECT item.i_id FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.i_id FROM item", "supplement": ""}], "duration": 11.180161237716675, "time": "2022-06-22 04:49:18"}
{"question": "show me the name", "dbid": "epinions_1", "TBid": "useracct", "original explanations": [{"explanation": [{"explanation": "Get i id of item", "subexpression": "SELECT item.i_id FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.i_id FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "show me the i id", "subexpression": "SELECT item.i_id FROM item"}, {"explanation": "sort them ascendingly", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT item.i_id FROM item", "supplement": ""}], "duration": 39.789029359817505, "time": "2022-06-22 04:49:59"}
{"question": "show me the name", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get i id of item", "subexpression": "SELECT item.i_id FROM item"}, {"explanation": "Group the records based on title of item", "subexpression": "GROUP BY item.title"}], "number": "Start the first query,", "subquery": "SELECT item.i_id FROM item GROUP BY item.title", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get id", "subexpression": "SELECT item.i_id FROM item"}, {"explanation": "", "subexpression": ""}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "duration": 370.7227714061737, "time": "2022-06-22 04:56:10"}
{"question": "show me the title", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "duration": 2.2987892627716064, "time": "2022-06-22 04:57:33"}
{"question": "show me the title", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book", "supplement": ""}], "duration": 1.963663101196289, "time": "2022-06-22 04:57:35"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "duration": 0.6427278518676758, "time": "2022-06-22 04:58:16"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "duration": 0.3919990062713623, "time": "2022-06-22 04:58:16"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "duration": 4.35724949836731, "time": "2022-06-22 04:58:21"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "duration": 2.3082613945007324, "time": "2022-06-22 04:59:00"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "duration": 0.2956244945526123, "time": "2022-06-22 04:59:01"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "duration": 2.244056463241577, "time": "2022-06-22 04:59:03"}
{"question": "show me the amount", "dbid": "school_finance", "TBid": "endowment", "original explanations": [{"explanation": [{"explanation": "Get the SUM of amount and SUM of endowment", "subexpression": "SELECT SUM ( endowment.amount ) FROM endowment"}], "number": "Start the first query,", "subquery": "SELECT SUM ( endowment.amount ) FROM endowment", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the SUM of amount and SUM of endowment", "subexpression": "SELECT SUM ( endowment.amount ) FROM endowment"}], "number": "Start the first query,", "subquery": "SELECT SUM ( endowment.amount ) FROM endowment", "supplement": ""}], "duration": 3.5336897373199463, "time": "2022-06-22 05:00:35"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 5.874715566635132, "time": "2022-06-22 05:01:46"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 1.4251458644866943, "time": "2022-06-22 05:01:48"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "", "subexpression": ""}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 4.735120534896851, "time": "2022-06-22 05:01:53"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 1.0813477039337158, "time": "2022-06-22 05:03:28"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 0.6866073608398438, "time": "2022-06-22 05:03:29"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 0.6496663093566895, "time": "2022-06-22 05:03:30"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 20.12623643875122, "time": "2022-06-22 05:03:50"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 1.9248392581939697, "time": "2022-06-22 05:04:42"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 0.38170528411865234, "time": "2022-06-22 05:04:43"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 0.3392221927642822, "time": "2022-06-22 05:04:44"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 2.4704225063323975, "time": "2022-06-22 05:04:46"}
{"question": "asdfa", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get u id of useracct", "subexpression": "SELECT useracct.u_id FROM useracct"}], "number": "Start the first query,", "subquery": "SELECT useracct.u_id FROM useracct", "supplement": ""}, {"explanation": [{"explanation": "Get name of review", "subexpression": "SELECT useracct.name FROM review"}], "number": "Start the second query,", "subquery": "SELECT useracct.name FROM review", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of the first query result and the second query result.", "subexpression": "the first query result intersect the second query result"}], "number": "Start the third query,", "subquery": "the first query result intersect the second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get u id of useracct", "subexpression": "SELECT useracct.u_id FROM useracct"}], "number": "Start the first query,", "subquery": "SELECT useracct.u_id FROM useracct", "supplement": ""}, {"explanation": [{"explanation": "Get name of review", "subexpression": "SELECT useracct.name FROM review"}], "number": "Start the second query,", "subquery": "SELECT useracct.name FROM review", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of the first query result and the second query result.", "subexpression": "the first query result intersect the second query result"}], "number": "Start the third query,", "subquery": "the first query result intersect the second query result", "supplement": ""}], "duration": 5.001162528991699, "time": "2022-06-22 05:05:00"}
{"question": "asdfa", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get u id of useracct", "subexpression": "SELECT useracct.u_id FROM useracct"}], "number": "Start the first query,", "subquery": "SELECT useracct.u_id FROM useracct", "supplement": ""}, {"explanation": [{"explanation": "Get name of review", "subexpression": "SELECT item.title FROM review"}], "number": "Start the second query,", "subquery": "SELECT useracct.name FROM review", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of the first query result and the second query result.", "subexpression": "WHERE review.i_id = 2"}], "number": "Start the third query,", "subquery": "the first query result intersect the second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get u id of useracct", "subexpression": "SELECT useracct.u_id FROM useracct"}], "number": "Start the first query,", "subquery": "SELECT useracct.u_id FROM useracct", "supplement": ""}, {"explanation": [{"explanation": "Get name of review", "subexpression": "SELECT item.title FROM review"}], "number": "Start the second query,", "subquery": "SELECT useracct.name FROM review", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of the first query result and the second query result.", "subexpression": "WHERE review.i_id = 2"}], "number": "Start the third query,", "subquery": "the first query result intersect the second query result", "supplement": ""}], "duration": 0.33530139923095703, "time": "2022-06-22 05:05:00"}
{"question": "asdfa", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get u id of useracct", "subexpression": "SELECT useracct.u_id FROM useracct"}], "number": "Start the first query,", "subquery": "SELECT useracct.u_id FROM useracct", "supplement": ""}, {"explanation": [{"explanation": "Get name of review", "subexpression": "SELECT item.title FROM review"}], "number": "Start the second query,", "subquery": "SELECT useracct.name FROM review", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of the first query result and the second query result.", "subexpression": "WHERE review.i_id = 2"}], "number": "Start the third query,", "subquery": "the first query result intersect the second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get u id of useracct", "subexpression": "SELECT useracct.u_id FROM useracct"}], "number": "Start the first query,", "subquery": "SELECT useracct.u_id FROM useracct", "supplement": ""}, {"explanation": [{"explanation": "Get name of review", "subexpression": "SELECT item.title FROM review"}], "number": "Start the second query,", "subquery": "SELECT useracct.name FROM review", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of the first query result and the second query result.", "subexpression": "WHERE review.i_id = 2"}], "number": "Start the third query,", "subquery": "the first query result intersect the second query result", "supplement": ""}], "duration": 0.19433093070983887, "time": "2022-06-22 05:05:01"}
{"question": "asdfa", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get u id of useracct", "subexpression": "SELECT useracct.u_id FROM useracct"}], "number": "Start the first query,", "subquery": "SELECT useracct.u_id FROM useracct", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get u id of useracct", "subexpression": "SELECT useracct.u_id FROM useracct"}], "number": "Start the first query,", "subquery": "SELECT useracct.u_id FROM useracct", "supplement": ""}], "duration": 0.18231511116027832, "time": "2022-06-22 05:05:01"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 1.436856985092163, "time": "2022-06-22 05:06:17"}
{"question": "show me the trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 1.5737495422363281, "time": "2022-06-22 05:06:19"}
{"question": "show me the year", "dbid": "school_player", "TBid": "school_performance", "original explanations": [{"explanation": [{"explanation": "Get school year of school performance that has school", "subexpression": "SELECT school_performance.school_year FROM school_performance JOIN school"}], "number": "Start the first query,", "subquery": "SELECT school_performance.school_year FROM school_performance JOIN school ON school_performance.school_id = school.school_id", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get school year of school performance that has school", "subexpression": "SELECT school_performance.school_year FROM school_performance JOIN school"}, {"explanation": "make sure the year is greater than 1987", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT school_performance.school_year FROM school_performance JOIN school ON school_performance.school_id = school.school_id", "supplement": ""}], "duration": 16.89660668373108, "time": "2022-06-22 05:08:14"}
{"question": "show me the year", "dbid": "school_player", "TBid": "school_performance", "original explanations": [{"explanation": [{"explanation": "Get school year of school performance that has school", "subexpression": "SELECT school_performance.school_year FROM school_performance JOIN school ON school_performance.school_id = school.school_id"}, {"explanation": "Keep the records that founded of school is greater than 1987", "subexpression": "WHERE school.founded > 1987"}], "number": "Start the first query,", "subquery": "SELECT school_performance.school_year FROM school_performance JOIN school ON school_performance.school_id = school.school_id WHERE school.founded > 1987", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get school year of school performance that has school", "subexpression": "SELECT school_performance.school_year FROM school_performance JOIN school ON school_performance.school_id = school.school_id"}], "number": "Start the first query,", "subquery": "SELECT school_performance.school_year FROM school_performance JOIN school ON school_performance.school_id = school.school_id WHERE school.founded > 1987", "supplement": ""}], "duration": 43.95688319206238, "time": "2022-06-22 05:08:58"}
{"question": "5454", "dbid": "school_player", "TBid": "school_performance", "original explanations": [{"explanation": [{"explanation": "Get school of school", "subexpression": "SELECT school.school FROM school"}], "number": "Start the first query,", "subquery": "SELECT school.school FROM school", "supplement": ""}, {"explanation": [{"explanation": "Get school of player that has school", "subexpression": "SELECT school.school FROM player JOIN school"}], "number": "Start the second query,", "subquery": "SELECT school.school FROM player JOIN school ON player.school_id = school.school_id", "supplement": ""}, {"explanation": [{"explanation": "Keep the records in the first query result but not in the second query result.", "subexpression": "the first query result except the second query result"}], "number": "Start the third query,", "subquery": "the first query result except the second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get school of school", "subexpression": "SELECT school.school FROM school"}], "number": "Start the first query,", "subquery": "SELECT school.school FROM school", "supplement": ""}, {"explanation": [{"explanation": "Get school of player that has school", "subexpression": "SELECT school.school FROM player JOIN school"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the second query,", "subquery": "SELECT school.school FROM player JOIN school ON player.school_id = school.school_id", "supplement": ""}, {"explanation": [{"explanation": "Keep the records in the first query result but not in the second query result.", "subexpression": "the first query result except the second query result"}], "number": "Start the third query,", "subquery": "the first query result except the second query result", "supplement": ""}], "duration": 31739.85019683838, "time": "2022-06-22 14:04:29"}
{"question": "show me the text", "dbid": "twitter_1", "TBid": "tweets", "original explanations": [{"explanation": [{"explanation": "Get text of tweets", "subexpression": "SELECT tweets.text FROM tweets"}], "number": "Start the first query,", "subquery": "SELECT tweets.text FROM tweets", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get text of tweets", "subexpression": "SELECT tweets.text FROM tweets"}, {"explanation": "make sure the id is 8", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT tweets.text FROM tweets", "supplement": ""}], "duration": 13.35037875175476, "time": "2022-06-23 16:04:36"}
{"question": "show me the text", "dbid": "twitter_1", "TBid": "tweets", "original explanations": [{"explanation": [{"explanation": "Get text of tweets", "subexpression": "SELECT tweets.text FROM tweets"}, {"explanation": "Keep the records that uid of user profiles is 8", "subexpression": "WHERE user_profiles.uid = 8"}], "number": "Start the first query,", "subquery": "SELECT tweets.text FROM tweets WHERE user_profiles.uid = 8", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get text of tweets", "subexpression": "SELECT tweets.text FROM tweets"}, {"explanation": "Keep the records that uid of user profiles is 8", "subexpression": "WHERE user_profiles.uid = 8"}], "number": "Start the first query,", "subquery": "SELECT tweets.text FROM tweets WHERE user_profiles.uid = 8", "supplement": ""}], "duration": 1.5437791347503662, "time": "2022-06-23 16:04:38"}
{"question": "show me the text", "dbid": "twitter_1", "TBid": "tweets", "original explanations": [{"explanation": [{"explanation": "Get text of tweets", "subexpression": "SELECT tweets.text FROM tweets"}, {"explanation": "Keep the records that uid of user profiles is 8", "subexpression": "WHERE user_profiles.uid = 8"}], "number": "Start the first query,", "subquery": "SELECT tweets.text FROM tweets WHERE user_profiles.uid = 8", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get text of tweets", "subexpression": "SELECT tweets.text FROM tweets"}, {"explanation": "Keep the records that uid of user profiles is 8", "subexpression": "WHERE user_profiles.uid = 8"}], "number": "Start the first query,", "subquery": "SELECT tweets.text FROM tweets WHERE user_profiles.uid = 8", "supplement": ""}], "duration": 1.2693617343902588, "time": "2022-06-23 16:04:40"}
{"question": "show me the text", "dbid": "twitter_1", "TBid": "tweets", "original explanations": [{"explanation": [{"explanation": "Get text of tweets", "subexpression": "SELECT tweets.text FROM tweets"}, {"explanation": "Keep the records that uid of user profiles is 8", "subexpression": "WHERE user_profiles.uid = 8"}], "number": "Start the first query,", "subquery": "SELECT tweets.text FROM tweets WHERE user_profiles.uid = 8", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get text of tweets", "subexpression": "SELECT tweets.text FROM tweets"}, {"explanation": "Keep the records that uid of user profiles is 8", "subexpression": "WHERE user_profiles.uid = 8"}], "number": "Start the first query,", "subquery": "SELECT tweets.text FROM tweets WHERE user_profiles.uid = 8", "supplement": ""}], "duration": 2.500040054321289, "time": "2022-06-23 16:04:43"}
{"question": "show me the text", "dbid": "twitter_1", "TBid": "tweets", "original explanations": [{"explanation": [{"explanation": "Get text of tweets", "subexpression": "SELECT tweets.text FROM tweets"}], "number": "Start the first query,", "subquery": "SELECT tweets.text FROM tweets", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get text of tweets", "subexpression": "SELECT tweets.text FROM tweets"}, {"explanation": "make sure the id is 7", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT tweets.text FROM tweets", "supplement": ""}], "duration": 8.713651657104492, "time": "2022-06-23 16:05:07"}
{"question": "show me all books published by Pearson and also their prices", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price and price of publication", "subexpression": "SELECT publication.price , publication.price FROM publication"}, {"explanation": "Keep the records that publisher of publication is Pearson", "subexpression": "WHERE publication.publisher = Pearson"}], "number": "Start the first query,", "subquery": "SELECT publication.price , publication.price FROM publication WHERE publication.publisher = Pearson", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price , publication.price FROM publication"}, {"explanation": "Keep the records that publisher of publication is Pearson", "subexpression": "WHERE publication.publisher = Pearson"}], "number": "Start the first query,", "subquery": "SELECT publication.price , publication.price FROM publication WHERE publication.publisher = Pearson", "supplement": ""}], "duration": 782.321492433548, "time": "2022-06-23 16:28:17"}
{"question": "show me all books published by Pearson and also their prices", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}, {"explanation": "Keep the records that publisher of publication is Pearson", "subexpression": "WHERE publication.publisher = Pearson"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication WHERE publication.publisher = Pearson", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the id and price of publication", "subexpression": "SELECT publication.price FROM publication"}, {"explanation": "Keep the records that publisher of publication is Pearson", "subexpression": "WHERE publication.publisher = Pearson"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication WHERE publication.publisher = Pearson", "supplement": ""}], "duration": 83.3492226600647, "time": "2022-06-23 16:29:44"}
{"question": "show me all books published by Pearson and also their prices", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get publication id and price of publication", "subexpression": "SELECT publication.publication_id , publication.price FROM publication"}, {"explanation": "Keep the records that publisher of publication is Pearson", "subexpression": "WHERE publication.publisher = Pearson"}], "number": "Start the first query,", "subquery": "SELECT publication.publication_id , publication.price FROM publication WHERE publication.publisher = Pearson", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get book id and price of publication", "subexpression": "SELECT publication.publication_id , publication.price FROM publication"}, {"explanation": "Keep the records that publisher of publication is Pearson", "subexpression": "WHERE publication.publisher = Pearson"}], "number": "Start the first query,", "subquery": "SELECT publication.publication_id , publication.price FROM publication WHERE publication.publisher = Pearson", "supplement": ""}], "duration": 16.65610384941101, "time": "2022-06-23 16:30:01"}
{"question": "show me the text", "dbid": "twitter_1", "TBid": "tweets", "original explanations": [{"explanation": [{"explanation": "Get text of tweets", "subexpression": "SELECT tweets.text FROM tweets"}], "number": "Start the first query,", "subquery": "SELECT tweets.text FROM tweets", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get text of tweets", "subexpression": "SELECT tweets.text FROM tweets"}, {"explanation": "make id is 7", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT tweets.text FROM tweets", "supplement": ""}], "duration": 2321.9422986507416, "time": "2022-06-23 16:47:55"}
{"question": "show me the name", "dbid": "train_station", "TBid": "station", "original explanations": [{"explanation": [{"explanation": "Get name of station", "subexpression": "SELECT station.name FROM station"}], "number": "Start the first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get name of station", "subexpression": "SELECT station.name FROM station"}, {"explanation": "make sure the name is East Croydon", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}], "duration": 130.79759693145752, "time": "2022-06-24 11:41:17"}
{"question": "show me the book title whose writer is Howard Chaykin", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Keep the records that writer of book is \"Howard Chaykin\"", "subexpression": "WHERE book.writer = \"Howard Chaykin\""}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book WHERE book.writer = a999specific999start999symbolHoward9999this0is0a0specific0hypen123654777Chaykin", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Keep the records that writer of book is \"Howard Chaykin\"", "subexpression": "WHERE book.writer = \"Howard Chaykin\""}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book WHERE book.writer = a999specific999start999symbolHoward9999this0is0a0specific0hypen123654777Chaykin", "supplement": ""}], "duration": 5.347163915634155, "time": "2022-07-02 20:51:16"}
{"question": "show me the book title whose writer is Howard Chaykin", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Keep the records that writer of book is Howard and Chaykin", "subexpression": "WHERE book.writer = Howard Chaykin"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book WHERE book.writer = Howard Chaykin", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Keep the records that writer of book is Howard Chaykin", "subexpression": "WHERE book.writer = Howard Chaykin"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book WHERE book.writer = Howard Chaykin", "supplement": ""}], "duration": 50.433266401290894, "time": "2022-07-02 20:52:07"}
{"question": "show me the book title whose writer is Howard Chaykin", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Keep the records that writer of book is Howard", "subexpression": "WHERE book.writer = Howard"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book WHERE book.writer = Howard", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Keep the records that publisher is Howard", "subexpression": "WHERE book.writer = Howard"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book WHERE book.writer = Howard", "supplement": ""}], "duration": 534.8661370277405, "time": "2022-07-02 21:01:03"}
{"question": "show me the book title whose writer is Howard Chaykin", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Keep the records that publisher of publication is Howard", "subexpression": "WHERE publication.publisher = Howard"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book WHERE publication.publisher = Howard", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Keep the records that publisher of publication is Wiley", "subexpression": "WHERE publication.publisher = Howard"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book WHERE publication.publisher = Howard", "supplement": ""}], "duration": 7.521130323410034, "time": "2022-07-02 21:01:11"}
{"question": "show me the book title whose writer is Howard Chaykin", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get title of book", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Keep the records that publisher of publication is Wiley", "subexpression": "WHERE publication.publisher = Wiley"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book WHERE publication.publisher = Wiley", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price", "subexpression": "SELECT book.title FROM book"}, {"explanation": "Keep the records that publisher of publication is Wiley", "subexpression": "WHERE publication.publisher = Wiley"}], "number": "Start the first query,", "subquery": "SELECT book.title FROM book WHERE publication.publisher = Wiley", "supplement": ""}], "duration": 65.06315660476685, "time": "2022-07-02 21:02:16"}
{"question": "show me the price whose publisher is Wiley", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}, {"explanation": "Keep the records that publisher of publication is \"Wiley\"", "subexpression": "WHERE publication.publisher = \"Wiley\""}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication WHERE publication.publisher = a999specific999start999symbolWiley", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}, {"explanation": "Keep the records that publisher of publication is \"Wiley\"", "subexpression": "WHERE publication.publisher = \"Wiley\""}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication WHERE publication.publisher = a999specific999start999symbolWiley", "supplement": ""}], "duration": 29.83481740951538, "time": "2022-07-02 21:03:37"}
{"question": "show me the price whose publisher is Wiley", "dbid": "soccer_2", "TBid": "college", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}, {"explanation": "Keep the records that publisher of publication is Wiley", "subexpression": "WHERE publication.publisher = Wiley"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication WHERE publication.publisher = Wiley", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}, {"explanation": "Keep the records that publisher of publication is Wiley", "subexpression": "WHERE publication.publisher = Wiley"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication WHERE publication.publisher = Wiley", "supplement": ""}], "duration": 10779.743399143219, "time": "2022-07-03 00:03:17"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "duration": 130.1880078315735, "time": "2022-07-03 17:25:57"}
{"question": "show me the id", "dbid": "train_station", "TBid": "train_station", "original explanations": [{"explanation": [{"explanation": "Get station id of station", "subexpression": "SELECT station.station_id FROM station"}], "number": "Start the first query,", "subquery": "SELECT station.station_id FROM station", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get station id of station", "subexpression": "SELECT station.station_id FROM station"}], "number": "Start the first query,", "subquery": "SELECT station.station_id FROM station", "supplement": ""}], "duration": 4.7258899211883545, "time": "2022-07-03 17:39:30"}
{"question": "show me the namw", "dbid": "train_station", "TBid": "train", "original explanations": [{"explanation": [{"explanation": "Get name of station", "subexpression": "SELECT station.name FROM station"}], "number": "Start the first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get name of station", "subexpression": "SELECT station.name FROM station"}], "number": "Start the first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}], "duration": 3.5072481632232666, "time": "2022-07-03 21:07:59"}
{"question": "show me the namw", "dbid": "train_station", "TBid": "train", "original explanations": [{"explanation": [{"explanation": "Get name of station", "subexpression": "SELECT station.name FROM station"}], "number": "Start the first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get name of station", "subexpression": "SELECT station.name FROM station"}], "number": "Start the first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}], "duration": 8.131215810775757, "time": "2022-07-03 21:08:07"}
{"question": "show me the namw", "dbid": "train_station", "TBid": "train", "original explanations": [{"explanation": [{"explanation": "Get name of station", "subexpression": "SELECT station.name FROM station"}], "number": "Start the first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get name of station", "subexpression": "SELECT station.name FROM station"}], "number": "Start the first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}], "duration": 6.4032862186431885, "time": "2022-07-03 21:08:14"}
{"question": "show me the namw", "dbid": "train_station", "TBid": "train", "original explanations": [{"explanation": [{"explanation": "Get name of station", "subexpression": "SELECT station.name FROM station"}], "number": "Start the first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get name of station", "subexpression": "SELECT station.name FROM station"}], "number": "Start the first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}], "duration": 3.7083053588867188, "time": "2022-07-03 21:08:18"}
{"question": "show me the namw", "dbid": "train_station", "TBid": "train", "original explanations": [{"explanation": [{"explanation": "Get name of station", "subexpression": "SELECT station.name FROM station"}], "number": "Start the first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get name of station", "subexpression": "SELECT station.name FROM station"}], "number": "Start the first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}], "duration": 2.674696207046509, "time": "2022-07-03 21:08:21"}
{"question": "show me the namw", "dbid": "train_station", "TBid": "train", "original explanations": [{"explanation": [{"explanation": "Get name of station", "subexpression": "SELECT station.name FROM station"}], "number": "Start the first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get name of station", "subexpression": "SELECT station.name FROM station"}], "number": "Start the first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}], "duration": 13.27258014678955, "time": "2022-07-03 21:08:35"}
{"question": "show me the name", "dbid": "train_station", "TBid": "train", "original explanations": [{"explanation": [{"explanation": "Get name of station", "subexpression": "SELECT station.name FROM station"}], "number": "Start the first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get name of station", "subexpression": "SELECT station.name FROM station"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}], "duration": 6.694546937942505, "time": "2022-07-03 21:09:57"}
{"question": "show me price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "show price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 25.160863876342773, "time": "2022-07-03 21:17:26"}
{"question": "show me price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "list price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 42.732805013656616, "time": "2022-07-03 21:18:10"}
{"question": "show me issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "duration": 5.827737808227539, "time": "2022-07-03 21:21:43"}
{"question": "show me book id", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get book id of book", "subexpression": "SELECT book.book_id FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.book_id FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get book id of book", "subexpression": "SELECT book.book_id FROM book"}, {"explanation": "ss", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT book.book_id FROM book", "supplement": ""}], "duration": 4.320777177810669, "time": "2022-07-03 21:23:56"}
{"question": "show me price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}, {"explanation": "ss", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 4.085305452346802, "time": "2022-07-03 21:25:03"}
{"question": "show me price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}, {"explanation": "dd", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 3.6010875701904297, "time": "2022-07-03 21:28:40"}
{"question": "show me price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}, {"explanation": "Keep the records that writer of book is dd", "subexpression": "WHERE book.writer = dd"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication WHERE book.writer = dd", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}, {"explanation": "dd", "subexpression": "WHERE book.writer = dd"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 4.4578564167022705, "time": "2022-07-03 21:28:45"}
{"question": "show me price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}, {"explanation": "Keep the records that writer of book is dd", "subexpression": "WHERE book.writer = dd"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication WHERE book.writer = dd", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}, {"explanation": "dd", "subexpression": "WHERE book.writer = dd"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 2.049222230911255, "time": "2022-07-03 21:28:47"}
{"question": "show me price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}, {"explanation": "Keep the records that writer of book is dd", "subexpression": "WHERE book.writer = dd"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication WHERE book.writer = dd", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}, {"explanation": "dd", "subexpression": "WHERE book.writer = dd"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 9.197482824325562, "time": "2022-07-03 21:28:57"}
{"question": "show me issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "ddd", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "duration": 4.178891658782959, "time": "2022-07-03 21:30:35"}
{"question": "show me issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Keep the records that writer of book is dd", "subexpression": "WHERE book.writer = dd"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book WHERE book.writer = dd", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Keep the records that writer of book is dd", "subexpression": "WHERE book.writer = dd"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book WHERE book.writer = dd", "supplement": ""}], "duration": 1.4627444744110107, "time": "2022-07-03 21:30:37"}
{"question": "show me issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Keep the records that writer of book is dd", "subexpression": "WHERE book.writer = dd"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book WHERE book.writer = dd", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "Keep the records that writer of book is dd", "subexpression": "WHERE book.writer = dd"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book WHERE book.writer = dd", "supplement": ""}], "duration": 1.0743541717529297, "time": "2022-07-03 21:30:39"}
{"question": "show me trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 5.522921800613403, "time": "2022-07-03 21:32:56"}
{"question": "show me trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 1.5715367794036865, "time": "2022-07-03 21:32:58"}
{"question": "show me trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 7.800495624542236, "time": "2022-07-03 21:33:06"}
{"question": "show me price", "dbid": "book_2", "TBid": "publication", "original explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get price of publication", "subexpression": "SELECT publication.price FROM publication"}], "number": "Start the first query,", "subquery": "SELECT publication.price FROM publication", "supplement": ""}], "duration": 2.4844093322753906, "time": "2022-07-03 21:36:04"}
{"question": "show me trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "dd", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 4.030608654022217, "time": "2022-07-03 21:37:35"}
{"question": "show me trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Keep the records that trust of trust is dd", "subexpression": "WHERE trust.trust = dd"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust WHERE trust.trust = dd", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Keep the records that trust of trust is dd", "subexpression": "WHERE trust.trust = dd"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust WHERE trust.trust = dd", "supplement": ""}], "duration": 3.8315656185150146, "time": "2022-07-03 21:37:39"}
{"question": "show me trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "sdsd", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust", "supplement": ""}], "duration": 5.769787549972534, "time": "2022-07-03 21:42:35"}
{"question": "show me trust", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Keep the records that trust of trust is s", "subexpression": "WHERE trust.trust = s"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust WHERE trust.trust = s", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get trust of trust", "subexpression": "SELECT trust.trust FROM trust"}, {"explanation": "Keep the records that trust of trust is s", "subexpression": "WHERE trust.trust = s"}], "number": "Start the first query,", "subquery": "SELECT trust.trust FROM trust WHERE trust.trust = s", "supplement": ""}], "duration": 2.580366373062134, "time": "2022-07-03 21:42:38"}
{"question": "show me price", "dbid": "epinions_1", "TBid": "trust", "original explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get title of item", "subexpression": "SELECT item.title FROM item"}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT item.title FROM item", "supplement": ""}], "duration": 24.981969833374023, "time": "2022-07-03 22:41:54"}
{"question": "show me time", "dbid": "train_station", "TBid": "train", "original explanations": [{"explanation": [{"explanation": "Get time of train", "subexpression": "SELECT train.time FROM train"}], "number": "Start the first query,", "subquery": "SELECT train.time FROM train", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get time of train", "subexpression": "SELECT train.time FROM train"}, {"explanation": "", "subexpression": "..."}, {"explanation": "", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT train.time FROM train", "supplement": ""}], "duration": 16.250304222106934, "time": "2022-07-03 22:50:05"}
{"question": "show me the issues", "dbid": "book_2", "TBid": "book", "original explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get issues of book", "subexpression": "SELECT book.issues FROM book"}, {"explanation": "make issues greater than 5", "subexpression": "..."}], "number": "Start the first query,", "subquery": "SELECT book.issues FROM book", "supplement": ""}], "duration": 27.543303728103638, "time": "2022-07-04 00:08:38"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "duration": 50.85678195953369, "time": "2022-09-06 12:49:33"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "duration": 5.964095830917358, "time": "2022-09-06 12:53:13"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airlines", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "duration": 11.293212890625, "time": "2022-09-08 18:39:36"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "flights", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "duration": 14.606606245040894, "time": "2022-09-08 18:41:33"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "duration": 7.531437635421753, "time": "2022-09-08 18:50:37"}
{"question": "show me the name", "dbid": "store_product", "TBid": "product", "original explanations": [{"explanation": [{"explanation": "Get the district name FROM TABLE district", "subexpression": "SELECT district.district_name FROM district"}], "number": "Start first query,", "subquery": "SELECT district.district_name FROM district", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the district name FROM TABLE district", "subexpression": "SELECT district.district_name FROM district"}, {"explanation": "get the name\n", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT district.district_name FROM district", "supplement": ""}], "duration": 8.458130359649658, "time": "2022-09-08 18:54:31"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "duration": 7.707965850830078, "time": "2022-09-08 19:02:47"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "flights", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "duration": 6.595093488693237, "time": "2022-09-08 19:06:28"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "flights", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportcode = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports WHERE airports.airportcode = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports WHERE airports.airportcode = \"AKO\"", "supplement": ""}], "duration": 7.2809717655181885, "time": "2022-09-08 19:06:35"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "flights", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "order the records based on the flightno", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports", "supplement": ""}], "duration": 18.22294282913208, "time": "2022-09-08 19:06:54"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "flights", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "Group the records based on the flightno of flights", "subexpression": "GROUP BY flights.flightno"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports GROUP BY flights.flightno", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "sort the records based on flightno", "subexpression": "GROUP BY flights.flightno"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports GROUP BY flights.flightno", "supplement": ""}], "duration": 17.065900564193726, "time": "2022-09-08 19:07:11"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "flights", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "Group the records based on the flightno of flights", "subexpression": "GROUP BY flights.flightno"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports GROUP BY flights.flightno", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "group the records based on destairport", "subexpression": "GROUP BY flights.flightno"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports GROUP BY flights.flightno", "supplement": ""}], "duration": 27.718918800354004, "time": "2022-09-08 19:07:39"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "flights", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "Group the records based on the destairport of flights", "subexpression": "GROUP BY flights.destairport"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports GROUP BY flights.destairport", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "order by flightno", "subexpression": "GROUP BY flights.destairport"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports GROUP BY flights.destairport", "supplement": ""}], "duration": 49.55831813812256, "time": "2022-09-08 19:08:29"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "Sort the results in ascending ORDER based on the flightno of flights", "subexpression": "ORDER BY flights.flightno ASC"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports ORDER BY flights.flightno ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "group the records based on city", "subexpression": "ORDER BY flights.flightno ASC"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports ORDER BY flights.flightno ASC", "supplement": ""}], "duration": 60.52699899673462, "time": "2022-09-08 19:09:30"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "Group the records based on the city of airports", "subexpression": "GROUP BY airports.city"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports GROUP BY airports.city", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the city and airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "Group the records based on the city of airports", "subexpression": "GROUP BY airports.city"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports GROUP BY airports.city", "supplement": ""}], "duration": 21.14380121231079, "time": "2022-09-08 19:09:51"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "flights", "original explanations": [{"explanation": [{"explanation": "Get the city and the airportname FROM TABLE airports", "subexpression": "SELECT city , airportname FROM airports"}, {"explanation": "Group the records based on the city of airports", "subexpression": "GROUP BY airports.city"}], "number": "Start first query,", "subquery": "SELECT city, airportname FROM airports GROUP BY airports.city", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the source airport FROM TABLE flights", "subexpression": "SELECT city , airportname FROM airports"}, {"explanation": "order the records based on flightno", "subexpression": "GROUP BY airports.city"}], "number": "Start first query,", "subquery": "SELECT city, airportname FROM airports GROUP BY airports.city", "supplement": ""}], "duration": 105.45871877670288, "time": "2022-09-08 19:11:37"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "flights", "original explanations": [{"explanation": [{"explanation": "Get the sourceairport FROM TABLE flights", "subexpression": "SELECT sourceairport FROM flights"}, {"explanation": "Sort the results in ascending ORDER based on the flightno of flights", "subexpression": "ORDER BY flights.flightno ASC"}], "number": "Start first query,", "subquery": "SELECT sourceairport FROM flights ORDER BY flights.flightno ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the sourceairport FROM TABLE flights", "subexpression": "SELECT sourceairport FROM flights"}, {"explanation": "Sort the results in descending ORDER based on the flightno of flights", "subexpression": "ORDER BY flights.flightno ASC"}], "number": "Start first query,", "subquery": "SELECT sourceairport FROM flights ORDER BY flights.flightno ASC", "supplement": ""}], "duration": 23.024062395095825, "time": "2022-09-08 19:12:00"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "flights", "original explanations": [{"explanation": [{"explanation": "Get the sourceairport FROM TABLE flights", "subexpression": "SELECT sourceairport FROM flights"}, {"explanation": "Sort the results in ascending ORDER based on the flightno of flights", "subexpression": "ORDER BY flights.flightno ASC"}], "number": "Start first query,", "subquery": "SELECT sourceairport FROM flights ORDER BY flights.flightno ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the sourceairport FROM TABLE flights", "subexpression": "SELECT sourceairport FROM flights"}, {"explanation": "Sort the results in decreasing ORDER based on the flightno of flights", "subexpression": "ORDER BY flights.flightno ASC"}], "number": "Start first query,", "subquery": "SELECT sourceairport FROM flights ORDER BY flights.flightno ASC", "supplement": ""}], "duration": 9.446655511856079, "time": "2022-09-08 19:12:10"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "duration": 9.459554433822632, "time": "2022-09-08 20:12:07"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportcode = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports WHERE airports.airportcode = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportcode = \"AKO\""}, {"explanation": "group by city", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports WHERE airports.airportcode = \"AKO\"", "supplement": ""}], "duration": 34.79879832267761, "time": "2022-09-08 20:12:42"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportcode = \"AKO\""}, {"explanation": "Group the records based on the city of airports", "subexpression": "GROUP BY airports.city"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports WHERE airports.airportcode = \"AKO\" GROUP BY airports.city", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "Group the records based on the city of airports", "subexpression": "GROUP BY airports.city"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports WHERE airports.airportcode = \"AKO\" GROUP BY airports.city", "supplement": ""}], "duration": 8.411873817443848, "time": "2022-09-08 20:12:51"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "Group the records based on the city of airports", "subexpression": "GROUP BY airports.city"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports GROUP BY airports.city", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the city and airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "Group the records based on the city of airports", "subexpression": "GROUP BY airports.city"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports GROUP BY airports.city", "supplement": ""}], "duration": 8.817997455596924, "time": "2022-09-08 20:13:00"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the city and the airportname FROM TABLE airports", "subexpression": "SELECT city , airportname FROM airports"}, {"explanation": "Group the records based on the city of airports", "subexpression": "GROUP BY airports.city"}], "number": "Start first query,", "subquery": "SELECT city, airportname FROM airports GROUP BY airports.city", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the city and the airportname FROM TABLE airports", "subexpression": "SELECT city , airportname FROM airports"}, {"explanation": "keep the records where the city is Albany", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT city, airportname FROM airports GROUP BY airports.city", "supplement": ""}], "duration": 79.07500696182251, "time": "2022-09-08 20:14:20"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the city and the airportname FROM TABLE airports", "subexpression": "SELECT city , airportname FROM airports"}, {"explanation": "Keep the records WHERE the city of airports is \"Albany\"", "subexpression": "WHERE airports.city = \"Albany\""}], "number": "Start first query,", "subquery": "SELECT city, airportname FROM airports WHERE airports.city = \"Albany\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT city , airportname FROM airports"}, {"explanation": "Keep the records WHERE the city of airports is \"Albany\"", "subexpression": "WHERE airports.city = \"Albany\""}], "number": "Start first query,", "subquery": "SELECT city, airportname FROM airports WHERE airports.city = \"Albany\"", "supplement": ""}], "duration": 23.54659938812256, "time": "2022-09-08 20:14:43"}
{"question": "show me the airportname whose city is Albany", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the city of airports is \"Albany\"", "subexpression": "WHERE airports.city = \"Albany\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.city = \"Albany\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the city FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the city of airports is \"Albany\"", "subexpression": "WHERE airports.city = \"Albany\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.city = \"Albany\"", "supplement": ""}], "duration": 13.490974426269531, "time": "2022-09-08 20:15:35"}
{"question": "show me the airportname whose city is Albany", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the city FROM TABLE airports", "subexpression": "SELECT city FROM airports"}, {"explanation": "Keep the records WHERE the city of airports is \"Albany\"", "subexpression": "WHERE airports.city = \"Albany\""}], "number": "Start first query,", "subquery": "SELECT city FROM airports WHERE airports.city = \"Albany\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the city FROM TABLE airports", "subexpression": "SELECT city FROM airports"}, {"explanation": "Keep the records WHERE the aircode is AIB", "subexpression": "WHERE airports.city = \"Albany\""}], "number": "Start first query,", "subquery": "SELECT city FROM airports WHERE airports.city = \"Albany\"", "supplement": ""}], "duration": 58.776021003723145, "time": "2022-09-08 20:16:34"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airport code of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "duration": 18.25801658630371, "time": "2022-09-08 20:18:02"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportcode = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports WHERE airports.airportcode = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportcode = \"AKO\""}, {"explanation": "Get the city", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports WHERE airports.airportcode = \"AKO\"", "supplement": ""}], "duration": 28.889325618743896, "time": "2022-09-08 20:18:31"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the airportcode, the airportname, and the city FROM TABLE airports", "subexpression": "SELECT airportcode , airportname , city FROM airports"}, {"explanation": "Keep the records WHERE the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportcode = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airportcode, airportname, city FROM airports WHERE airports.airportcode = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportcode, the airportname, and the city FROM TABLE airports", "subexpression": "SELECT airportcode , airportname , city FROM airports"}], "number": "Start first query,", "subquery": "SELECT airportcode, airportname, city FROM airports WHERE airports.airportcode = \"AKO\"", "supplement": ""}], "duration": 20.246304988861084, "time": "2022-09-08 20:18:52"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "duration": 8.6357421875, "time": "2022-09-08 20:19:17"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportcode = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports WHERE airports.airportcode = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports WHERE airports.airportcode = \"AKO\"", "supplement": ""}], "duration": 8.469282150268555, "time": "2022-09-08 20:19:26"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "sort the records by the city", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports", "supplement": ""}], "duration": 30.032997369766235, "time": "2022-09-08 20:19:56"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "Group the records based on the city of airports", "subexpression": "GROUP BY airports.city"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports GROUP BY airports.city", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "order by the city", "subexpression": "GROUP BY airports.city"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports GROUP BY airports.city", "supplement": ""}], "duration": 8.506383180618286, "time": "2022-09-08 20:20:05"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "Group the records based on the city of airports", "subexpression": "GROUP BY airports.city"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports GROUP BY airports.city", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "order the records based on city", "subexpression": "GROUP BY airports.city"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports GROUP BY airports.city", "supplement": ""}], "duration": 13.825023651123047, "time": "2022-09-08 20:20:19"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "flights", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "Group the records based on the city of airports", "subexpression": "GROUP BY airports.city"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports GROUP BY airports.city", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "order by flightno", "subexpression": "GROUP BY airports.city"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports GROUP BY airports.city", "supplement": ""}], "duration": 39.69368529319763, "time": "2022-09-08 20:20:59"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "flights", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "Sort the results in ascending ORDER based on the flightno of flights", "subexpression": "ORDER BY flights.flightno ASC"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports ORDER BY flights.flightno ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the sourceaiport FROM TABLE flights", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "Sort the results in ascending ORDER based on the flightno of flights", "subexpression": "ORDER BY flights.flightno ASC"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports ORDER BY flights.flightno ASC", "supplement": ""}], "duration": 45.341845750808716, "time": "2022-09-08 20:21:45"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "duration": 164.98269724845886, "time": "2022-09-08 20:25:41"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "flights", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports", "supplement": ""}], "edited explanations": [{"explanation": [], "number": "Start first query,", "subquery": "SELECT airportname FROM airports", "supplement": ""}], "duration": 102.38593196868896, "time": "2022-09-08 20:27:23"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the number of airport name ", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "group the records based on city", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "duration": 60.66083478927612, "time": "2022-09-08 20:32:00"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get number of airportname FROM TABLE airports", "subexpression": "SELECT DISTINCT COUNT ( airportname ) FROM airports"}, {"explanation": "Group the records based on the city of airports", "subexpression": "GROUP BY airports.city"}], "number": "Start first query,", "subquery": "SELECT DISTINCT COUNT ( airportname ) FROM airports GROUP BY airports.city", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get number of airportname FROM TABLE airports", "subexpression": "SELECT DISTINCT COUNT ( airportname ) FROM airports"}], "number": "Start first query,", "subquery": "SELECT DISTINCT COUNT ( airportname ) FROM airports GROUP BY airports.city", "supplement": ""}], "duration": 24.828898429870605, "time": "2022-09-08 20:32:25"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the nubmer and airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "duration": 499.8978097438812, "time": "2022-09-08 20:41:28"}
{"question": "show me all the flight number", "dbid": "flight_2", "TBid": "flights", "original explanations": [{"explanation": [{"explanation": "Get the flightno FROM TABLE flights", "subexpression": "SELECT flights.flightno FROM flights"}], "number": "Start first query,", "subquery": "SELECT flights.flightno FROM flights", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the flightno FROM TABLE flights", "subexpression": "SELECT flights.flightno FROM flights"}, {"explanation": "Get the destination airport", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT flights.flightno FROM flights", "supplement": ""}], "duration": 85.91352343559265, "time": "2022-09-08 20:45:18"}
{"question": "show me all the flight number", "dbid": "flight_2", "TBid": "flights", "original explanations": [{"explanation": [{"explanation": "Get the flightno and the destairport FROM TABLE flights", "subexpression": "SELECT flightno , destairport FROM flights"}], "number": "Start first query,", "subquery": "SELECT flightno, destairport FROM flights", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the flightno and the destairport FROM TABLE flights", "subexpression": "SELECT flightno , destairport FROM flights"}, {"explanation": "sort the results based on flight number", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT flightno, destairport FROM flights", "supplement": ""}], "duration": 257.89386916160583, "time": "2022-09-08 20:49:37"}
{"question": "show me all the flight number", "dbid": "flight_2", "TBid": "flights", "original explanations": [{"explanation": [{"explanation": "Get the flightno and the destairport FROM TABLE flights", "subexpression": "SELECT flightno , destairport FROM flights"}, {"explanation": "Group the records based on the flightno of flights", "subexpression": "GROUP BY flights.flightno"}], "number": "Start first query,", "subquery": "SELECT flightno, destairport FROM flights GROUP BY flights.flightno", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the flightno and the destairport FROM TABLE flights", "subexpression": "SELECT flightno , destairport FROM flights"}, {"explanation": "order by flight number", "subexpression": "GROUP BY flights.flightno"}], "number": "Start first query,", "subquery": "SELECT flightno, destairport FROM flights GROUP BY flights.flightno", "supplement": ""}], "duration": 7.471644163131714, "time": "2022-09-08 20:49:45"}
{"question": "show me all the flight number", "dbid": "flight_2", "TBid": "flights", "original explanations": [{"explanation": [{"explanation": "Get the flightno and the destairport FROM TABLE flights", "subexpression": "SELECT flightno , destairport FROM flights"}, {"explanation": "Sort the results in ascending ORDER based on the flightno of flights", "subexpression": "ORDER BY flights.flightno ASC"}], "number": "Start first query,", "subquery": "SELECT flightno, destairport FROM flights ORDER BY flights.flightno ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the flightno and the destairport FROM TABLE flights", "subexpression": "SELECT flightno , destairport FROM flights"}, {"explanation": "order the results by flight number", "subexpression": "ORDER BY flights.flightno ASC"}], "number": "Start first query,", "subquery": "SELECT flightno, destairport FROM flights ORDER BY flights.flightno ASC", "supplement": ""}], "duration": 37.17847967147827, "time": "2022-09-08 20:50:22"}
{"question": "show me all the flight number", "dbid": "flight_2", "TBid": "flights", "original explanations": [{"explanation": [{"explanation": "Get the flightno and the destairport FROM TABLE flights", "subexpression": "SELECT flightno , destairport FROM flights"}, {"explanation": "Sort the results in ascending ORDER based on the flightno of flights", "subexpression": "ORDER BY flights.flightno ASC"}], "number": "Start first query,", "subquery": "SELECT flightno, destairport FROM flights ORDER BY flights.flightno ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the flightno and the destairport FROM TABLE flights", "subexpression": "SELECT flightno , destairport FROM flights"}, {"explanation": "sort the results by flight number", "subexpression": "ORDER BY flights.flightno ASC"}], "number": "Start first query,", "subquery": "SELECT flightno, destairport FROM flights ORDER BY flights.flightno ASC", "supplement": ""}], "duration": 22.112746715545654, "time": "2022-09-08 20:50:44"}
{"question": "Which city has the highest number of departing flights?", "dbid": "flight_4", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the city FROM TABLE airports", "subexpression": "SELECT airports.city FROM airports"}, {"explanation": "Group the records based on the city of airports", "subexpression": "GROUP BY airports.city"}, {"explanation": "Sort the results in descending ORDER based on the number of records, and return the first record", "subexpression": "ORDER BY COUNT ( * ) DESC LIMIT 1"}], "number": "Start first query,", "subquery": "SELECT airports.city FROM airports GROUP BY airports.city ORDER BY COUNT ( * ) DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the city FROM TABLE airports", "subexpression": "SELECT airports.city FROM airports"}, {"explanation": "Sort the results in descending ORDER based on the number of records, and return the first record", "subexpression": "ORDER BY COUNT ( * ) DESC LIMIT 1"}], "number": "Start first query,", "subquery": "SELECT airports.city FROM airports GROUP BY airports.city ORDER BY COUNT ( * ) DESC LIMIT 1", "supplement": ""}], "duration": 41.15036702156067, "time": "2022-09-10 21:54:56"}
{"question": "Which city has the highest number of departing flights?", "dbid": "flight_4", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the city FROM TABLE airports", "subexpression": "SELECT city FROM airports"}, {"explanation": "Sort the results in descending ORDER based on the number of records, and return the first record", "subexpression": "ORDER BY COUNT ( * ) DESC LIMIT 1"}], "number": "Start first query,", "subquery": "SELECT city FROM airports ORDER BY COUNT ( * ) DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the city FROM TABLE airports", "subexpression": "SELECT city FROM airports"}], "number": "Start first query,", "subquery": "SELECT city FROM airports ORDER BY COUNT ( * ) DESC LIMIT 1", "supplement": ""}], "duration": 7.117954969406128, "time": "2022-09-10 21:55:05"}
{"question": "Which city has the highest number of departing flights?", "dbid": "flight_1", "TBid": "flight", "original explanations": [{"explanation": [{"explanation": "Get the origin FROM TABLE flight", "subexpression": "SELECT flight.origin FROM flight"}, {"explanation": "Group the records based on the origin of flight", "subexpression": "GROUP BY flight.origin"}, {"explanation": "Sort the results in descending ORDER based on the number of records, and return the first record", "subexpression": "ORDER BY COUNT ( * ) DESC LIMIT 1"}], "number": "Start first query,", "subquery": "SELECT flight.origin FROM flight GROUP BY flight.origin ORDER BY COUNT ( * ) DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the origin FROM TABLE flight", "subexpression": "SELECT flight.origin FROM flight"}, {"explanation": "Group the records based on the origin of flight", "subexpression": "GROUP BY flight.origin"}], "number": "Start first query,", "subquery": "SELECT flight.origin FROM flight GROUP BY flight.origin ORDER BY COUNT ( * ) DESC LIMIT 1", "supplement": ""}], "duration": 36.223684787750244, "time": "2022-09-10 21:56:21"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "flights", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "duration": 7.312391519546509, "time": "2022-09-28 16:56:40"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportcode = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports WHERE airports.airportcode = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports WHERE airports.airportcode = \"AKO\"", "supplement": ""}], "duration": 509.3633303642273, "time": "2022-09-28 17:05:10"}
{"question": "Show me the names of pilots who are over 25 years old", "dbid": "aircraft", "TBid": "aircraft", "original explanations": [{"explanation": [{"explanation": "Get the name FROM TABLE pilot", "subexpression": "SELECT pilot.name FROM pilot"}, {"explanation": "Keep the records WHERE the age of pilot is greater than 25", "subexpression": "WHERE pilot.age > 25"}], "number": "Start first query,", "subquery": "SELECT pilot.name FROM pilot WHERE pilot.age > 25", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the name FROM TABLE pilot", "subexpression": "SELECT pilot.name FROM pilot"}, {"explanation": "Keep the records WHERE the age of pilot is less than 25", "subexpression": "WHERE pilot.age > 25"}], "number": "Start first query,", "subquery": "SELECT pilot.name FROM pilot WHERE pilot.age > 25", "supplement": ""}], "duration": 20.39022946357727, "time": "2022-10-02 19:10:32"}
{"question": "Show me the names of pilots who are over 25 years old", "dbid": "aircraft", "TBid": "aircraft", "original explanations": [{"explanation": [{"explanation": "Get the age, the 25, and the name FROM TABLE pilot", "subexpression": "SELECT age < 25 , name FROM pilot"}, {"explanation": "Keep the records WHERE the age of pilot is less than 25", "subexpression": "WHERE pilot.age < 25"}], "number": "Start first query,", "subquery": "SELECT age < 25, name FROM pilot WHERE pilot.age < 25", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the age, the 25, and the name FROM TABLE pilot", "subexpression": "SELECT age < 25 , name FROM pilot"}, {"explanation": "Keep the records WHERE the age of pilot is greater than 25", "subexpression": "WHERE pilot.age < 25"}], "number": "Start first query,", "subquery": "SELECT age < 25, name FROM pilot WHERE pilot.age < 25", "supplement": ""}], "duration": 64.88277506828308, "time": "2022-10-02 19:11:38"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "duration": 262.51052713394165, "time": "2022-10-02 19:21:52"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportcode = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports WHERE airports.airportcode = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports WHERE airports.airportcode = \"AKO\"", "supplement": ""}], "duration": 145.61549520492554, "time": "2022-10-02 19:24:18"}
{"question": "Show me all the flight numbers", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the flightno FROM TABLE flights", "subexpression": "SELECT flights.flightno FROM flights"}], "number": "Start first query,", "subquery": "SELECT flights.flightno FROM flights", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the flightno FROM TABLE flights", "subexpression": "SELECT flights.flightno FROM flights"}, {"explanation": "Get destination airport", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT flights.flightno FROM flights", "supplement": ""}], "duration": 42.314213514328, "time": "2022-10-02 19:25:41"}
{"question": "Show me all the flight numbers", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the flightno and the destairport FROM TABLE flights", "subexpression": "SELECT flightno , destairport FROM flights"}], "number": "Start first query,", "subquery": "SELECT flightno, destairport FROM flights", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the flightno and the destairport FROM TABLE flights", "subexpression": "SELECT flightno , destairport FROM flights"}, {"explanation": "Order the results by flight number", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT flightno, destairport FROM flights", "supplement": ""}], "duration": 44.557159423828125, "time": "2022-10-02 19:26:26"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "duration": 60.86063623428345, "time": "2022-10-03 00:06:00"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportcode = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports WHERE airports.airportcode = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports WHERE airports.airportcode = \"AKO\"", "supplement": ""}], "duration": 118.24897861480713, "time": "2022-10-03 00:07:58"}
{"question": "Show me all the flight numbers", "dbid": "flight_2", "TBid": "flights", "original explanations": [{"explanation": [{"explanation": "Get the flightno FROM TABLE flights", "subexpression": "SELECT flights.flightno FROM flights"}], "number": "Start first query,", "subquery": "SELECT flights.flightno FROM flights", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the flightno FROM TABLE flights", "subexpression": "SELECT flights.flightno FROM flights"}, {"explanation": "Get destination airport", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT flights.flightno FROM flights", "supplement": ""}], "duration": 39.00184679031372, "time": "2022-10-03 00:09:43"}
{"question": "Show me all the flight numbers", "dbid": "flight_2", "TBid": "flights", "original explanations": [{"explanation": [{"explanation": "Get the flightno and the destairport FROM TABLE flights", "subexpression": "SELECT flightno , destairport FROM flights"}], "number": "Start first query,", "subquery": "SELECT flightno, destairport FROM flights", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the flightno and the destairport FROM TABLE flights", "subexpression": "SELECT flightno , destairport FROM flights"}, {"explanation": "Order the results by flight number", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT flightno, destairport FROM flights", "supplement": ""}], "duration": 61.03615069389343, "time": "2022-10-03 00:10:45"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airports.airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "duration": 57.0389678478241, "time": "2022-10-03 00:23:02"}
{"question": "What is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "original explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}, {"explanation": "Keep the records WHERE the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportcode = \"AKO\""}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports WHERE airports.airportcode = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the airportname FROM TABLE airports", "subexpression": "SELECT airportname FROM airports"}], "number": "Start first query,", "subquery": "SELECT airportname FROM airports WHERE airports.airportcode = \"AKO\"", "supplement": ""}], "duration": 98.25063967704773, "time": "2022-10-03 00:24:41"}
{"question": "Show me all the flight numbers", "dbid": "flight_2", "TBid": "flights", "original explanations": [{"explanation": [{"explanation": "Get the flightno FROM TABLE flights", "subexpression": "SELECT flights.flightno FROM flights"}], "number": "Start first query,", "subquery": "SELECT flights.flightno FROM flights", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the flightno FROM TABLE flights", "subexpression": "SELECT flights.flightno FROM flights"}, {"explanation": "Get destination airport", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT flights.flightno FROM flights", "supplement": ""}], "duration": 74.22579145431519, "time": "2022-10-03 00:26:43"}
{"question": "Show me all the flight numbers", "dbid": "flight_2", "TBid": "flights", "original explanations": [{"explanation": [{"explanation": "Get the flightno and the destairport FROM TABLE flights", "subexpression": "SELECT flightno , destairport FROM flights"}], "number": "Start first query,", "subquery": "SELECT flightno, destairport FROM flights", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the flightno and the destairport FROM TABLE flights", "subexpression": "SELECT flightno , destairport FROM flights"}, {"explanation": "Order the results by flight number", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT flightno, destairport FROM flights", "supplement": ""}], "duration": 46.48885464668274, "time": "2022-10-03 00:27:30"}
{"question": "Show me the number of ships that are captured", "dbid": "battle_death", "TBid": "ship", "original explanations": [{"explanation": [{"explanation": "Get number of distinct lost in battle FROM TABLE ship", "subexpression": "SELECT COUNT ( DISTINCT ship.lost_in_battle ) FROM ship"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT ship.lost_in_battle ) FROM ship", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get number of distinct lost in battle FROM TABLE ship", "subexpression": "SELECT COUNT ( DISTINCT ship.lost_in_battle ) FROM ship"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT ship.lost_in_battle ) FROM ship", "supplement": ""}], "duration": 32.489747524261475, "time": "2022-10-06 15:23:42"}
{"question": "Show me the number of ships that are captured", "dbid": "battle_death", "TBid": "ship", "original explanations": [{"explanation": [{"explanation": "Get number of lost in battle FROM TABLE ship", "subexpression": "SELECT DISTINCT COUNT ( lost_in_battle ) FROM ship"}], "number": "Start first query,", "subquery": "SELECT DISTINCT COUNT ( lost_in_battle ) FROM ship", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get number of lost in battle FROM TABLE ship", "subexpression": "SELECT DISTINCT COUNT ( lost_in_battle ) FROM ship"}], "number": "Start first query,", "subquery": "SELECT DISTINCT COUNT ( lost_in_battle ) FROM ship", "supplement": ""}], "duration": 3.266784429550171, "time": "2022-10-06 15:23:46"}
{"question": "Show me the number of ships that are captured", "dbid": "battle_death", "TBid": "ship", "original explanations": [{"explanation": [{"explanation": "Get the lost in battle FROM TABLE ship", "subexpression": "SELECT lost_in_battle FROM ship"}], "number": "Start first query,", "subquery": "SELECT lost_in_battle FROM ship", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the lost in battle FROM TABLE ship", "subexpression": "SELECT lost_in_battle FROM ship"}], "number": "Start first query,", "subquery": "SELECT lost_in_battle FROM ship", "supplement": ""}], "duration": 0.9964313507080078, "time": "2022-10-06 15:23:47"}
{"question": "Show me the number of ships that are captured", "dbid": "battle_death", "TBid": "ship", "original explanations": [{"explanation": [{"explanation": "Get the lost in battle FROM TABLE ship", "subexpression": "SELECT lost_in_battle FROM ship"}], "number": "Start first query,", "subquery": "SELECT lost_in_battle FROM ship", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the lost in battle FROM TABLE ship", "subexpression": "SELECT lost_in_battle FROM ship"}], "number": "Start first query,", "subquery": "SELECT lost_in_battle FROM ship", "supplement": ""}], "duration": 0.7891659736633301, "time": "2022-10-06 15:23:48"}
{"question": "Show me the number of ships whose disposition_of_ship is captured", "dbid": "battle_death", "TBid": "ship", "original explanations": [{"explanation": [{"explanation": "Get the number of records FROM TABLE ship", "subexpression": "SELECT COUNT ( * ) FROM ship"}, {"explanation": "Keep the records WHERE the disposition of ship of ship is \"captured\"", "subexpression": "WHERE ship.disposition_of_ship = \"captured\""}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM ship WHERE ship.disposition_of_ship = \"captured\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the number of records FROM TABLE ship", "subexpression": "SELECT COUNT ( * ) FROM ship"}, {"explanation": "Keep the records WHERE the disposition of ship of ship is \"Captured\"", "subexpression": "WHERE ship.disposition_of_ship = \"captured\""}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM ship WHERE ship.disposition_of_ship = \"captured\"", "supplement": ""}], "duration": 23.227264165878296, "time": "2022-10-06 15:24:44"}
{"question": "Show me the number of ships whose disposition_of_ship is captured", "dbid": "battle_death", "TBid": "ship", "original explanations": [{"explanation": [{"explanation": "Get the number of records FROM TABLE ship", "subexpression": "SELECT COUNT ( * ) FROM ship"}, {"explanation": "Keep the records WHERE the disposition of ship of ship is \"captured\"", "subexpression": "WHERE ship.disposition_of_ship = \"captured\""}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM ship WHERE ship.disposition_of_ship = \"captured\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the number of records FROM TABLE ship", "subexpression": "SELECT COUNT ( * ) FROM ship"}, {"explanation": "Keep the records WHERE the disposition of ship of ship is \"Captured\"", "subexpression": "WHERE ship.disposition_of_ship = \"captured\""}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM ship WHERE ship.disposition_of_ship = \"captured\"", "supplement": ""}], "duration": 29.90293788909912, "time": "2022-10-06 15:25:33"}
{"question": "Show me the number of ships whose disposition_of_ship is captured", "dbid": "battle_death", "TBid": "ship", "original explanations": [{"explanation": [{"explanation": "Get the disposition of ship FROM TABLE ship", "subexpression": "SELECT disposition_of_ship FROM ship"}, {"explanation": "Keep the records WHERE the disposition of ship of ship is \"Captured\"", "subexpression": "WHERE ship.disposition_of_ship = \"Captured\""}], "number": "Start first query,", "subquery": "SELECT disposition_of_ship FROM ship WHERE ship.disposition_of_ship = \"Captured\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the number of ships FROM TABLE ship", "subexpression": "SELECT disposition_of_ship FROM ship"}, {"explanation": "Keep the records WHERE the disposition of ship of ship is \"Captured\"", "subexpression": "WHERE ship.disposition_of_ship = \"Captured\""}], "number": "Start first query,", "subquery": "SELECT disposition_of_ship FROM ship WHERE ship.disposition_of_ship = \"Captured\"", "supplement": ""}], "duration": 13.628843069076538, "time": "2022-10-06 15:25:47"}
{"question": "Show me the name of the different car makers who produced a car in 1970", "dbid": "car_1", "TBid": "cars_data", "original explanations": [{"explanation": [{"explanation": "Get distinct maker FROM TABLE car makers and TABLE model list", "subexpression": "SELECT DISTINCT car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker"}, {"explanation": "Keep the records WHERE the year of cars data is 1970", "subexpression": "WHERE cars_data.year = 1970"}], "number": "Start first query,", "subquery": "SELECT DISTINCT car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE cars_data.year = 1970", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get distinct maker FROM TABLE car makers and TABLE model list", "subexpression": "SELECT DISTINCT car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker"}, {"explanation": "Keep the records WHERE the year of cars data is 1970", "subexpression": "WHERE cars_data.year = 1970"}], "number": "Start first query,", "subquery": "SELECT DISTINCT car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE cars_data.year = 1970", "supplement": ""}], "duration": 70.64015746116638, "time": "2022-10-06 15:29:52"}
{"question": "Show me the name of the different car makers who produced a car in 1970", "dbid": "car_1", "TBid": "cars_data", "original explanations": [{"explanation": [{"explanation": "Get distinct maker FROM TABLE car makers and TABLE model list", "subexpression": "SELECT DISTINCT maker FROM car_makers JOIN model_list ON car_makers.id = \"model_list.maker\""}, {"explanation": "Keep the records WHERE the year of cars data is 1970", "subexpression": "WHERE cars_data.year = 1970"}], "number": "Start first query,", "subquery": "SELECT DISTINCT maker FROM car_makers JOIN model_list ON car_makers.id = \"model_list.maker\" WHERE cars_data.year = 1970", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get distinct maker FROM TABLE car makers and TABLE model list", "subexpression": "SELECT DISTINCT maker FROM car_makers JOIN model_list ON car_makers.id = \"model_list.maker\""}, {"explanation": "Keep the records WHERE the year of cars data is 1970", "subexpression": "WHERE cars_data.year = 1970"}], "number": "Start first query,", "subquery": "SELECT DISTINCT maker FROM car_makers JOIN model_list ON car_makers.id = \"model_list.maker\" WHERE cars_data.year = 1970", "supplement": ""}], "duration": 0.9425063133239746, "time": "2022-10-06 15:29:53"}
{"question": "Show me the name of the different car makers who produced a car in 1970", "dbid": "car_1", "TBid": "cars_data", "original explanations": [{"explanation": [{"explanation": "Get distinct maker FROM TABLE car makers and TABLE model list", "subexpression": "SELECT DISTINCT maker FROM car_makers JOIN model_list ON car_makers.id = \"model_list.maker\""}, {"explanation": "Keep the records WHERE the year of cars data is 1970", "subexpression": "WHERE cars_data.year = 1970"}], "number": "Start first query,", "subquery": "SELECT DISTINCT maker FROM car_makers JOIN model_list ON car_makers.id = \"model_list.maker\" WHERE cars_data.year = 1970", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get distinct maker FROM TABLE car makers and TABLE model list", "subexpression": "SELECT DISTINCT maker FROM car_makers JOIN model_list ON car_makers.id = \"model_list.maker\""}, {"explanation": "Keep the records WHERE the year of cars data is 1970", "subexpression": "WHERE cars_data.year = 1970"}], "number": "Start first query,", "subquery": "SELECT DISTINCT maker FROM car_makers JOIN model_list ON car_makers.id = \"model_list.maker\" WHERE cars_data.year = 1970", "supplement": ""}], "duration": 0.45648193359375, "time": "2022-10-06 15:29:54"}
{"question": "List the section_name in reversed lexicographical order.", "dbid": "student_transcripts_tracking", "TBid": "", "original explanations": [{"explanation": [{"explanation": "Get the section name FROM TABLE sections", "subexpression": "SELECT sections.section_name FROM sections"}, {"explanation": "Sort the results in ascending ORDER based on the section name of sections", "subexpression": "ORDER BY sections.section_name ASC"}], "number": "Start first query,", "subquery": "SELECT sections.section_name FROM sections ORDER BY sections.section_name ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the section name FROM TABLE sections", "subexpression": "SELECT sections.section_name FROM sections"}, {"explanation": "Sort the results in descending ORDER based on the section name of sections", "subexpression": "ORDER BY sections.section_name ASC"}], "number": "Start first query,", "subquery": "SELECT sections.section_name FROM sections ORDER BY sections.section_name ASC", "supplement": ""}], "duration": 21.220576763153076, "time": "2022-10-06 15:32:43"}
{"question": "The maximum capacity and the average of all stadiums", "dbid": "concert_singer", "TBid": "stadium", "original explanations": [{"explanation": [{"explanation": "Get the maximum value of capacity and the average value of average FROM TABLE stadium", "subexpression": "SELECT MAX ( stadium.capacity ) , AVG ( stadium.average ) FROM stadium"}], "number": "Start first query,", "subquery": "SELECT MAX ( stadium.capacity ) , AVG ( stadium.average ) FROM stadium", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the maximum value of capacity and the average value of average FROM TABLE stadium", "subexpression": "SELECT MAX ( stadium.capacity ) , AVG ( stadium.average ) FROM stadium"}], "number": "Start first query,", "subquery": "SELECT MAX ( stadium.capacity ) , AVG ( stadium.average ) FROM stadium", "supplement": ""}], "duration": 64.67237877845764, "time": "2022-10-06 15:34:30"}
{"question": "The maximum capacity and the average of all stadiums", "dbid": "concert_singer", "TBid": "stadium", "original explanations": [{"explanation": [{"explanation": "Get the maximum value of capacity and the average value of average FROM TABLE stadium", "subexpression": "SELECT MAX ( capacity ) , AVG ( average ) FROM stadium"}], "number": "Start first query,", "subquery": "SELECT MAX ( capacity ) , AVG ( average ) FROM stadium", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the maximum value of capacity and the average value of average FROM TABLE stadium", "subexpression": "SELECT MAX ( capacity ) , AVG ( average ) FROM stadium"}], "number": "Start first query,", "subquery": "SELECT MAX ( capacity ) , AVG ( average ) FROM stadium", "supplement": ""}], "duration": 1.1656441688537598, "time": "2022-10-06 15:34:32"}
{"question": "What is the number of cars with a greater accelerate than the one with the most horsepower?", "dbid": "car_1", "TBid": "cars_data", "original explanations": [{"explanation": [{"explanation": "Get the maximum value of horsepower FROM TABLE cars data", "subexpression": "SELECT MAX ( cars_data.horsepower ) FROM cars_data"}], "number": "Start first query,", "subquery": "SELECT MAX ( cars_data.horsepower ) FROM cars_data", "supplement": ""}, {"explanation": [{"explanation": "Get the number of records FROM TABLE cars data", "subexpression": "SELECT COUNT ( * ) FROM cars_data"}, {"explanation": "Keep the records WHERE the accelerate of cars data is greater than the first query result", "subexpression": "WHERE cars_data.accelerate > (1)"}], "number": "Start second query,", "subquery": "SELECT COUNT ( * )  FROM cars_data WHERE cars_data.accelerate > ( first123query123result )  ", "supplement": "second query result uses first query result"}], "edited explanations": [{"explanation": [{"explanation": "Get the accelerate FROM TABLE cars data", "subexpression": "SELECT MAX ( cars_data.horsepower ) FROM cars_data"}, {"explanation": "rank the records by horse power, and return the top 1", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT MAX ( cars_data.horsepower ) FROM cars_data", "supplement": ""}, {"explanation": [{"explanation": "Get the number of records FROM TABLE cars data", "subexpression": "SELECT COUNT ( * ) FROM cars_data"}, {"explanation": "Keep the records WHERE the accelerate of cars data is greater than the first query result", "subexpression": "WHERE cars_data.accelerate > (1)"}], "number": "Start second query,", "subquery": "SELECT COUNT ( * )  FROM cars_data WHERE cars_data.accelerate > ( first123query123result )  ", "supplement": "second query result uses first query result"}], "duration": 701.6217606067657, "time": "2022-10-06 21:27:23"}
{"question": "What is the number of cars with a greater accelerate than the one with the most horsepower?", "dbid": "car_1", "TBid": "cars_data", "original explanations": [{"explanation": [{"explanation": "Get the accelerate FROM TABLE cars data", "subexpression": "SELECT accelerate FROM cars_data"}, {"explanation": "Sort the results in descending ORDER based on the horsepower of cars data, and return the first record", "subexpression": "ORDER BY cars_data.horsepower DESC LIMIT 1"}], "number": "Start first query,", "subquery": "SELECT accelerate FROM cars_data ORDER BY cars_data.horsepower DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the accelerate FROM TABLE cars data", "subexpression": "SELECT accelerate FROM cars_data"}, {"explanation": "Sort the results in descending ORDER based on the horsepower of cars data, and return the first record", "subexpression": "ORDER BY cars_data.horsepower DESC LIMIT 1"}, {"explanation": "keep the results that are not in the first query", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT accelerate FROM cars_data ORDER BY cars_data.horsepower DESC LIMIT 1", "supplement": ""}], "duration": 621.513504743576, "time": "2022-10-06 21:37:46"}
{"question": "What is the number of cars with a greater accelerate than the one with the most horsepower?", "dbid": "car_1", "TBid": "cars_data", "original explanations": [{"explanation": [{"explanation": "Get the horsepower and the accelerate FROM TABLE cars data", "subexpression": "SELECT horsepower , accelerate FROM cars_data"}, {"explanation": "Sort the results in descending ORDER based on the horsepower of cars data, and return the first record", "subexpression": "ORDER BY cars_data.horsepower DESC LIMIT 1"}], "number": "Start first query,", "subquery": "SELECT horsepower, accelerate FROM cars_data ORDER BY cars_data.horsepower DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the everything and the accelerate FROM TABLE cars data", "subexpression": "SELECT horsepower , accelerate FROM cars_data"}, {"explanation": "Sort the results in descending ORDER based on the horsepower of cars data, and return the first record", "subexpression": "ORDER BY cars_data.horsepower DESC LIMIT 1"}], "number": "Start first query,", "subquery": "SELECT horsepower, accelerate FROM cars_data ORDER BY cars_data.horsepower DESC LIMIT 1", "supplement": ""}], "duration": 426.50203108787537, "time": "2022-10-06 21:44:53"}
{"question": "What is the number of cars with a greater accelerate than the one with the most horsepower?", "dbid": "car_1", "TBid": "cars_data", "original explanations": [{"explanation": [{"explanation": "Get the horsepower and the accelerate FROM TABLE cars data", "subexpression": "SELECT horsepower , accelerate FROM cars_data"}, {"explanation": "Sort the results in descending ORDER based on the horsepower of cars data, and return the first record", "subexpression": "ORDER BY cars_data.horsepower DESC LIMIT 1"}], "number": "Start first query,", "subquery": "SELECT horsepower, accelerate FROM cars_data ORDER BY cars_data.horsepower DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the cylinders and the accelerate FROM TABLE cars data", "subexpression": "SELECT horsepower , accelerate FROM cars_data"}, {"explanation": "Sort the results in descending ORDER based on the horsepower of cars data, and return the first record", "subexpression": "ORDER BY cars_data.horsepower DESC LIMIT 1"}], "number": "Start first query,", "subquery": "SELECT horsepower, accelerate FROM cars_data ORDER BY cars_data.horsepower DESC LIMIT 1", "supplement": ""}], "duration": 55.67708468437195, "time": "2022-10-06 21:45:49"}
{"question": "asdfsad", "dbid": "apartment_rentals", "TBid": "guests", "original explanations": [{"explanation": [{"explanation": "Get the booking status code FROM TABLE apartments", "subexpression": "SELECT apartment_bookings.booking_status_code FROM apartments"}], "number": "Start first query,", "subquery": "SELECT apartment_bookings.booking_status_code FROM apartments", "supplement": ""}, {"explanation": [{"explanation": "Get the booking status code FROM TABLE apartment bookings", "subexpression": "SELECT apartment_bookings.booking_status_code FROM apartment_bookings"}], "number": "Start second query,", "subquery": "SELECT apartment_bookings.booking_status_code FROM apartment_bookings", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the booking status code FROM TABLE apartments", "subexpression": "SELECT apartment_bookings.booking_status_code FROM apartments"}], "number": "Start first query,", "subquery": "SELECT apartment_bookings.booking_status_code FROM apartments", "supplement": ""}, {"explanation": [{"explanation": "Get the booking status code FROM TABLE apartment bookings", "subexpression": "SELECT apartment_bookings.booking_status_code FROM apartment_bookings"}], "number": "Start second query,", "subquery": "SELECT apartment_bookings.booking_status_code FROM apartment_bookings", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "duration": 7.104519605636597, "time": "2022-10-18 16:43:41"}
{"question": "asdasd", "dbid": "apartment_rentals", "TBid": "guests", "original explanations": [{"explanation": [{"explanation": "Get the building short name FROM TABLE apartment buildings", "subexpression": "SELECT apartment_buildings.building_short_name FROM apartment_buildings"}], "number": "Start first query,", "subquery": "SELECT apartment_buildings.building_short_name FROM apartment_buildings", "supplement": ""}, {"explanation": [{"explanation": "Get the booking status code FROM TABLE apartment bookings", "subexpression": "SELECT apartment_bookings.booking_status_code FROM apartment_bookings"}], "number": "Start second query,", "subquery": "SELECT apartment_bookings.booking_status_code FROM apartment_bookings", "supplement": ""}, {"explanation": [{"explanation": "Keep the union of first query result and second query result.", "subexpression": "first query result union second query result"}], "number": "Start third query,", "subquery": "first query result union second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the building short name FROM TABLE apartment buildings", "subexpression": "SELECT apartment_buildings.building_short_name FROM apartment_buildings"}], "number": "Start first query,", "subquery": "SELECT apartment_buildings.building_short_name FROM apartment_buildings", "supplement": ""}, {"explanation": [{"explanation": "Get the booking status code FROM TABLE apartment bookings", "subexpression": "SELECT apartment_bookings.booking_status_code FROM apartment_bookings"}], "number": "Start second query,", "subquery": "SELECT apartment_bookings.booking_status_code FROM apartment_bookings", "supplement": ""}, {"explanation": [{"explanation": "Keep the union of first query result and second query result.ff", "subexpression": "first query result union second query result"}], "number": "Start third query,", "subquery": "first query result union second query result", "supplement": ""}], "duration": 3.9564177989959717, "time": "2022-10-18 16:44:49"}
{"question": "zzza", "dbid": "coffee_shop", "TBid": "", "original explanations": [{"explanation": [{"explanation": "Get the score FROM TABLE member", "subexpression": "SELECT shop.score FROM member"}], "number": "Start first query,", "subquery": "SELECT shop.score FROM member", "supplement": ""}, {"explanation": [{"explanation": "Get the score FROM TABLE member", "subexpression": "SELECT shop.score FROM member"}], "number": "Start second query,", "subquery": "SELECT shop.score FROM member", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the score FROM TABLE member", "subexpression": "SELECT shop.score FROM member"}], "number": "Start first query,", "subquery": "SELECT shop.score FROM member", "supplement": ""}, {"explanation": [{"explanation": "Get the score FROM TABLE member", "subexpression": "SELECT shop.score FROM member"}], "number": "Start second query,", "subquery": "SELECT shop.score FROM member", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}, {"explanation": "", "subexpression": "..."}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "duration": 12.620103597640991, "time": "2022-10-18 17:14:48"}
{"question": "zzza", "dbid": "coffee_shop", "TBid": "", "original explanations": [{"explanation": [{"explanation": "Get the score FROM TABLE member", "subexpression": "SELECT shop.score FROM member"}], "number": "Start first query,", "subquery": "SELECT shop.score FROM member", "supplement": ""}, {"explanation": [{"explanation": "Get the score FROM TABLE member", "subexpression": "SELECT shop.score FROM member"}], "number": "Start second query,", "subquery": "SELECT shop.score FROM member", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get thaaa", "subexpression": "SELECT shop.score FROM member"}], "number": "Start first query,", "subquery": "SELECT shop.score FROM member", "supplement": ""}, {"explanation": [{"explanation": "Get the score FROM TABLE member", "subexpression": "SELECT shop.score FROM member"}, {"explanation": "sssssad", "subexpression": "..."}], "number": "Start second query,", "subquery": "SELECT shop.score FROM member", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "duration": 12.355701923370361, "time": "2022-10-18 17:16:09"}
{"question": "asdfasdfasd", "dbid": "cinema", "TBid": "", "original explanations": [{"explanation": [{"explanation": "Get the name FROM TABLE cinema", "subexpression": "SELECT cinema.name FROM cinema"}], "number": "Start first query,", "subquery": "SELECT cinema.name FROM cinema", "supplement": ""}, {"explanation": [{"explanation": "Get the openning year FROM TABLE cinema", "subexpression": "SELECT cinema.openning_year FROM cinema"}], "number": "Start second query,", "subquery": "SELECT cinema.openning_year FROM cinema", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "what is it", "subexpression": "SELECT cinema.name FROM cinema"}, {"explanation": "aaaaa", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT cinema.name FROM cinema", "supplement": ""}, {"explanation": [{"explanation": "Fuck you ayou a", "subexpression": "SELECT cinema.openning_year FROM cinema"}], "number": "Start second query,", "subquery": "SELECT cinema.openning_year FROM cinema", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "duration": 22.964772939682007, "time": "2022-10-18 17:18:20"}
{"question": "asdf", "dbid": "baseball_1", "TBid": "player", "previous_generated_explanation": [{"explanation": [{"explanation": "afasf", "subexpression": "SELECT player.bats FROM player"}, {"explanation": "wwwww", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT player.bats FROM player", "supplement": ""}, {"explanation": [{"explanation": "goodf the bats FROM TABLE player", "subexpression": "SELECT player.bats FROM player"}], "number": "Start second query,", "subquery": "SELECT player.bats FROM player", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "original explanations": [{"explanation": [{"explanation": "Get the bats FROM TABLE player", "subexpression": "SELECT player.bats FROM player"}], "number": "Start first query,", "subquery": "SELECT player.bats FROM player", "supplement": ""}, {"explanation": [{"explanation": "Get the bats FROM TABLE player", "subexpression": "SELECT player.bats FROM player"}], "number": "Start second query,", "subquery": "SELECT player.bats FROM player", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "afasf", "subexpression": "SELECT player.bats FROM player"}, {"explanation": "wwwww", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT player.bats FROM player", "supplement": ""}, {"explanation": [{"explanation": "goodf the bats FROM TABLE player", "subexpression": "SELECT player.bats FROM player"}], "number": "Start second query,", "subquery": "SELECT player.bats FROM player", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "duration": 13.311426639556885, "time": "2022-10-18 22:09:28"}
{"question": "sadaasd", "dbid": "bike_1", "TBid": "", "previous_generated_explanation": [{"explanation": [{"explanation": "aaaaaaaaaaaddstafff", "subexpression": "SELECT station.name FROM station"}], "number": "Start first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}, {"explanation": [{"explanation": "Get the city FROM TABLE station", "subexpression": "SELECT station.city FROM station"}, {"explanation": "dddddddddd", "subexpression": "..."}], "number": "Start second query,", "subquery": "SELECT station.city FROM station", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "original explanations": [{"explanation": [{"explanation": "Get the name FROM TABLE station", "subexpression": "SELECT station.name FROM station"}], "number": "Start first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}, {"explanation": [{"explanation": "Get the city FROM TABLE station", "subexpression": "SELECT station.city FROM station"}], "number": "Start second query,", "subquery": "SELECT station.city FROM station", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "aaaaaaaaaaaddstafff", "subexpression": "SELECT station.name FROM station"}], "number": "Start first query,", "subquery": "SELECT station.name FROM station", "supplement": ""}, {"explanation": [{"explanation": "Get the city FROM TABLE station", "subexpression": "SELECT station.city FROM station"}, {"explanation": "dddddddddd", "subexpression": "..."}], "number": "Start second query,", "subquery": "SELECT station.city FROM station", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "duration": 11.176634788513184, "time": "2022-10-18 22:11:54"}
{"question": "aasdffadsw", "dbid": "apartment_rentals", "TBid": "apartment_bookings", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the building full name FROM TABLE apartments", "subexpression": "SELECT apartment_buildings.building_full_name FROM apartments"}], "number": "Start first query,", "subquery": "SELECT apartment_buildings.building_full_name FROM apartments", "supplement": ""}, {"explanation": [{"explanation": "Get the building full name FROM TABLE apartments", "subexpression": "SELECT apartment_buildings.building_full_name FROM apartments"}], "number": "Start second query,", "subquery": "SELECT apartment_buildings.building_full_name FROM apartments", "supplement": ""}, {"explanation": [{"explanation": "Keep the union of first query result and second query result.", "subexpression": "first query result union second query result"}], "number": "Start third query,", "subquery": "first query result union second query result", "supplement": ""}], "original explanations": [{"explanation": [{"explanation": "Get the building full name FROM TABLE apartments", "subexpression": "SELECT apartment_buildings.building_full_name FROM apartments"}], "number": "Start first query,", "subquery": "SELECT apartment_buildings.building_full_name FROM apartments", "supplement": ""}, {"explanation": [{"explanation": "Get the building full name FROM TABLE apartments", "subexpression": "SELECT apartment_buildings.building_full_name FROM apartments"}], "number": "Start second query,", "subquery": "SELECT apartment_buildings.building_full_name FROM apartments", "supplement": ""}, {"explanation": [{"explanation": "Keep the union of first query result and second query result.", "subexpression": "first query result union second query result"}], "number": "Start third query,", "subquery": "first query result union second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "dfasdfasd", "subexpression": "SELECT apartment_buildings.building_full_name FROM apartments"}, {"explanation": "ffffffffffffff", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT apartment_buildings.building_full_name FROM apartments", "supplement": ""}, {"explanation": [{"explanation": "Get the building full name FROM TABLE apartments", "subexpression": "SELECT apartment_buildings.building_full_name FROM apartments"}], "number": "Start second query,", "subquery": "SELECT apartment_buildings.building_full_name FROM apartments", "supplement": ""}, {"explanation": [{"explanation": "Keep the union of first query result and second query result.", "subexpression": "first query result union second query result"}], "number": "Start third query,", "subquery": "first query result union second query result", "supplement": ""}], "duration": 6.953363656997681, "time": "2022-10-18 22:22:02"}
{"question": "asdfds", "dbid": "body_builder", "TBid": "", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the name FROM TABLE people", "subexpression": "SELECT people.name FROM people"}], "number": "Start first query,", "subquery": "SELECT people.name FROM people", "supplement": ""}, {"explanation": [{"explanation": "Get the name FROM TABLE body builder and TABLE people", "subexpression": "SELECT people.name FROM body_builder JOIN people ON body_builder.people_id = people.people_id"}], "number": "Start second query,", "subquery": "SELECT people.name FROM body_builder JOIN people ON body_builder.people_id = people.people_id", "supplement": ""}, {"explanation": [{"explanation": "Keep the records in first query result but not in second query result.", "subexpression": "first query result except second query result"}], "number": "Start third query,", "subquery": "first query result except second query result", "supplement": ""}], "original explanations": [{"explanation": [{"explanation": "Get the name FROM TABLE people", "subexpression": "SELECT people.name FROM people"}], "number": "Start first query,", "subquery": "SELECT people.name FROM people", "supplement": ""}, {"explanation": [{"explanation": "Get the name FROM TABLE body builder and TABLE people", "subexpression": "SELECT people.name FROM body_builder JOIN people ON body_builder.people_id = people.people_id"}], "number": "Start second query,", "subquery": "SELECT people.name FROM body_builder JOIN people ON body_builder.people_id = people.people_id", "supplement": ""}, {"explanation": [{"explanation": "Keep the records in first query result but not in second query result.", "subexpression": "first query result except second query result"}], "number": "Start third query,", "subquery": "first query result except second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "DFFFFFFFFFFFF", "subexpression": "SELECT people.name FROM people"}], "number": "Start first query,", "subquery": "SELECT people.name FROM people", "supplement": ""}, {"explanation": [{"explanation": "Get the name FROM TABLE body builder and TABLE people", "subexpression": "SELECT people.name FROM body_builder JOIN people ON body_builder.people_id = people.people_id"}, {"explanation": "GGGGGGGGG", "subexpression": "..."}], "number": "Start second query,", "subquery": "SELECT people.name FROM body_builder JOIN people ON body_builder.people_id = people.people_id", "supplement": ""}, {"explanation": [{"explanation": "Keep the records in first query result but not in second query result.", "subexpression": "first query result except second query result"}], "number": "Start third query,", "subquery": "first query result except second query result", "supplement": ""}], "duration": 7.679596900939941, "time": "2022-10-18 22:24:19"}
{"question": "asdfas", "dbid": "battle_death", "TBid": "ship", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the name FROM TABLE death", "subexpression": "SELECT ship.name FROM death"}], "number": "Start first query,", "subquery": "SELECT ship.name FROM death", "supplement": ""}, {"explanation": [{"explanation": "Get the disposition of ship FROM TABLE ship", "subexpression": "SELECT ship.disposition_of_ship FROM ship"}], "number": "Start second query,", "subquery": "SELECT ship.disposition_of_ship FROM ship", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "entire_SQL": "SELECT ship.name FROM death INTERSECT SELECT ship.disposition_of_ship FROM ship", "original explanations": [{"explanation": [{"explanation": "Get the name FROM TABLE death", "subexpression": "SELECT ship.name FROM death"}], "number": "Start first query,", "subquery": "SELECT ship.name FROM death", "supplement": ""}, {"explanation": [{"explanation": "Get the disposition of ship FROM TABLE ship", "subexpression": "SELECT ship.disposition_of_ship FROM ship"}], "number": "Start second query,", "subquery": "SELECT ship.disposition_of_ship FROM ship", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the name FROM TABLE death", "subexpression": "SELECT ship.name FROM death"}, {"explanation": "dfddddddddd", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT ship.name FROM death", "supplement": ""}, {"explanation": [{"explanation": "ffffffffffffffffffff", "subexpression": "SELECT ship.disposition_of_ship FROM ship"}], "number": "Start second query,", "subquery": "SELECT ship.disposition_of_ship FROM ship", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "duration": 8.623960018157959, "time": "2022-10-18 23:15:55"}
{"question": "asdfas", "dbid": "battle_death", "TBid": "ship", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the name FROM TABLE death", "subexpression": "SELECT ship.name FROM death"}], "number": "Start first query,", "subquery": "SELECT ship.name FROM death", "supplement": ""}, {"explanation": [{"explanation": "Get the disposition of ship FROM TABLE ship", "subexpression": "SELECT ship.disposition_of_ship FROM ship"}], "number": "Start second query,", "subquery": "SELECT ship.disposition_of_ship FROM ship", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "entire_SQL": "SELECT COUNT(*) FROM ship ORDER BY COUNT(*) DESC LIMIT battle.name", "original explanations": [{"explanation": [{"explanation": "Get the name FROM TABLE death", "subexpression": "ORDER BY COUNT( * ) DESC LIMIT battle.name"}, {"explanation": "dfddddddddd", "subexpression": "SELECT COUNT( * ) FROM ship"}], "number": "Start first query,", "subquery": "SELECT ship.name FROM death", "supplement": ""}, {"explanation": [{"explanation": "ffffffffffffffffffff", "subexpression": "SELECT COUNT( * ) FROM ship"}], "number": "Start second query,", "subquery": "SELECT ship.disposition_of_ship FROM ship", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "WHERE battle.result = 2"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the name FROM TABLE death", "subexpression": "ORDER BY COUNT( * ) DESC LIMIT battle.name"}, {"explanation": "dfddddddddd", "subexpression": "SELECT COUNT( * ) FROM ship"}], "number": "Start first query,", "subquery": "SELECT ship.name FROM death", "supplement": ""}, {"explanation": [{"explanation": "ffffffffffffffffffff", "subexpression": "SELECT COUNT( * ) FROM ship"}], "number": "Start second query,", "subquery": "SELECT ship.disposition_of_ship FROM ship", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "WHERE battle.result = 2"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "duration": 164.49105381965637, "time": "2022-10-18 23:48:20"}
{"question": "asd", "dbid": "candidate_poll", "TBid": "", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the name FROM TABLE people", "subexpression": "SELECT people.name FROM people"}], "number": "Start first query,", "subquery": "SELECT people.name FROM people", "supplement": ""}, {"explanation": [{"explanation": "Get the name FROM TABLE people and TABLE candidate", "subexpression": "SELECT people.name FROM people JOIN candidate ON people.people_id = candidate.people_id"}], "number": "Start second query,", "subquery": "SELECT people.name FROM people JOIN candidate ON people.people_id = candidate.people_id", "supplement": ""}, {"explanation": [{"explanation": "Keep the records in first query result but not in second query result.", "subexpression": "first query result except second query result"}], "number": "Start third query,", "subquery": "first query result except second query result", "supplement": ""}], "entire_SQL": "SELECT people.name FROM people EXCEPT SELECT people.name FROM people JOIN candidate ON people.people_id = candidate.people_id", "original explanations": [{"explanation": [{"explanation": "Get the name FROM TABLE people", "subexpression": "SELECT people.name FROM people"}], "number": "Start first query,", "subquery": "SELECT people.name FROM people", "supplement": ""}, {"explanation": [{"explanation": "Get the name FROM TABLE people and TABLE candidate", "subexpression": "SELECT people.name FROM people JOIN candidate ON people.people_id = candidate.people_id"}], "number": "Start second query,", "subquery": "SELECT people.name FROM people JOIN candidate ON people.people_id = candidate.people_id", "supplement": ""}, {"explanation": [{"explanation": "Keep the records in first query result but not in second query result.", "subexpression": "first query result except second query result"}], "number": "Start third query,", "subquery": "first query result except second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "dfasdfasf", "subexpression": "SELECT people.name FROM people"}], "number": "Start first query,", "subquery": "SELECT people.name FROM people", "supplement": ""}, {"explanation": [{"explanation": "fffffffffff", "subexpression": "SELECT people.name FROM people JOIN candidate ON people.people_id = candidate.people_id"}, {"explanation": "ssss", "subexpression": "..."}], "number": "Start second query,", "subquery": "SELECT people.name FROM people JOIN candidate ON people.people_id = candidate.people_id", "supplement": ""}, {"explanation": [{"explanation": "Keep the records in first query result but not in second query result.", "subexpression": "first query result except second query result"}], "number": "Start third query,", "subquery": "first query result except second query result", "supplement": ""}], "duration": 20.864726305007935, "time": "2022-10-19 00:35:55"}
{"question": "asdfasd", "dbid": "bike_1", "TBid": "status", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the city FROM TABLE station", "subexpression": "SELECT station.city FROM station"}], "number": "Start first query,", "subquery": "SELECT station.city FROM station", "supplement": ""}, {"explanation": [{"explanation": "Get the city FROM TABLE station", "subexpression": "SELECT station.city FROM station"}], "number": "Start second query,", "subquery": "SELECT station.city FROM station", "supplement": ""}, {"explanation": [{"explanation": "Keep the union of first query result and second query result.", "subexpression": "first query result union second query result"}], "number": "Start third query,", "subquery": "first query result union second query result", "supplement": ""}], "entire_SQL": "SELECT station.city FROM station UNION SELECT station.city FROM station", "original explanations": [{"explanation": [{"explanation": "Get the city FROM TABLE station", "subexpression": "SELECT station.city FROM station"}], "number": "Start first query,", "subquery": "SELECT station.city FROM station", "supplement": ""}, {"explanation": [{"explanation": "Get the city FROM TABLE station", "subexpression": "SELECT station.city FROM station"}], "number": "Start second query,", "subquery": "SELECT station.city FROM station", "supplement": ""}, {"explanation": [{"explanation": "Keep the union of first query result and second query result.", "subexpression": "first query result union second query result"}], "number": "Start third query,", "subquery": "first query result union second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the city FROM TABLE station", "subexpression": "SELECT station.city FROM station"}, {"explanation": "show me the time", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT station.city FROM station", "supplement": ""}, {"explanation": [{"explanation": "Get the city FROM TABLE station", "subexpression": "SELECT station.city FROM station"}], "number": "Start second query,", "subquery": "SELECT station.city FROM station", "supplement": ""}, {"explanation": [{"explanation": "Keep the union of first query result and second query result.", "subexpression": "first query result union second query result"}], "number": "Start third query,", "subquery": "first query result union second query result", "supplement": ""}], "duration": 14.639329671859741, "time": "2022-10-19 00:42:38"}
{"question": "asdf", "dbid": "architecture", "TBid": "mill", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the name FROM TABLE architect", "subexpression": "SELECT architect.name FROM architect"}], "number": "Start first query,", "subquery": "SELECT architect.name FROM architect", "supplement": ""}, {"explanation": [{"explanation": "Get the gender FROM TABLE bridge", "subexpression": "SELECT architect.gender FROM bridge"}], "number": "Start second query,", "subquery": "SELECT architect.gender FROM bridge", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "entire_SQL": "SELECT architect.name FROM architect INTERSECT SELECT architect.gender FROM bridge", "original explanations": [{"explanation": [{"explanation": "Get the name FROM TABLE architect", "subexpression": "SELECT architect.name FROM architect"}], "number": "Start first query,", "subquery": "SELECT architect.name FROM architect", "supplement": ""}, {"explanation": [{"explanation": "Get the gender FROM TABLE bridge", "subexpression": "SELECT architect.gender FROM bridge"}], "number": "Start second query,", "subquery": "SELECT architect.gender FROM bridge", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the name FROM TABLE architect", "subexpression": "SELECT architect.name FROM architect"}], "number": "Start first query,", "subquery": "SELECT architect.name FROM architect", "supplement": ""}, {"explanation": [{"explanation": "Get the gender FROM TABLE bridge", "subexpression": "SELECT architect.gender FROM bridge"}, {"explanation": "keep the records greater than 3", "subexpression": "..."}], "number": "Start second query,", "subquery": "SELECT architect.gender FROM bridge", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "duration": 20.282390832901, "time": "2022-10-19 00:44:44"}
{"question": "show me the name", "dbid": "architecture", "TBid": "bridge", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the name FROM TABLE mill and TABLE architect", "subexpression": "SELECT mill.name FROM mill JOIN architect ON mill.architect_id = architect.id"}], "number": "Start first query,", "subquery": "SELECT mill.name FROM mill JOIN architect ON mill.architect_id = architect.id", "supplement": ""}], "entire_SQL": "SELECT mill.name FROM mill JOIN architect ON mill.architect_id = architect.id", "original explanations": [{"explanation": [{"explanation": "Get the name FROM TABLE mill and TABLE architect", "subexpression": "SELECT mill.name FROM mill JOIN architect ON mill.architect_id = architect.id"}], "number": "Start first query,", "subquery": "SELECT mill.name FROM mill JOIN architect ON mill.architect_id = architect.id", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the id FROM TABLE mill and TABLE architect", "subexpression": "SELECT mill.name FROM mill JOIN architect ON mill.architect_id = architect.id"}], "number": "Start first query,", "subquery": "SELECT mill.name FROM mill JOIN architect ON mill.architect_id = architect.id", "supplement": ""}], "duration": 4.948490619659424, "time": "2022-10-19 00:48:30"}
{"question": "asdfads", "dbid": "architecture", "TBid": "bridge", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the name FROM TABLE architect", "subexpression": "SELECT architect.name FROM architect"}], "number": "Start first query,", "subquery": "SELECT architect.name FROM architect", "supplement": ""}, {"explanation": [{"explanation": "Get the gender FROM TABLE bridge", "subexpression": "SELECT architect.gender FROM bridge"}], "number": "Start second query,", "subquery": "SELECT architect.gender FROM bridge", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "entire_SQL": "SELECT architect.name FROM architect INTERSECT SELECT architect.gender FROM bridge", "original explanations": [{"explanation": [{"explanation": "Get the name FROM TABLE architect", "subexpression": "SELECT architect.name FROM architect"}], "number": "Start first query,", "subquery": "SELECT architect.name FROM architect", "supplement": ""}, {"explanation": [{"explanation": "Get the gender FROM TABLE bridge", "subexpression": "SELECT architect.gender FROM bridge"}], "number": "Start second query,", "subquery": "SELECT architect.gender FROM bridge", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the id FROM TABLE architect", "subexpression": "SELECT architect.name FROM architect"}, {"explanation": "fffffffff", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT architect.name FROM architect", "supplement": ""}, {"explanation": [{"explanation": "Get the asdf FROM TABLE bridge", "subexpression": "SELECT architect.gender FROM bridge"}], "number": "Start second query,", "subquery": "SELECT architect.gender FROM bridge", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "duration": 8.829127073287964, "time": "2022-10-19 00:48:54"}
{"question": "asd", "dbid": "body_builder", "TBid": "", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the name FROM TABLE people", "subexpression": "SELECT people.name FROM people"}], "number": "Start first query,", "subquery": "SELECT people.name FROM people", "supplement": ""}, {"explanation": [{"explanation": "Get the name FROM TABLE body builder and TABLE people", "subexpression": "SELECT people.name FROM body_builder JOIN people ON body_builder.people_id = people.people_id"}], "number": "Start second query,", "subquery": "SELECT people.name FROM body_builder JOIN people ON body_builder.people_id = people.people_id", "supplement": ""}, {"explanation": [{"explanation": "Keep the records in first query result but not in second query result.", "subexpression": "first query result except second query result"}], "number": "Start third query,", "subquery": "first query result except second query result", "supplement": ""}], "entire_SQL": "SELECT people.name FROM people EXCEPT SELECT people.name FROM body_builder JOIN people ON body_builder.people_id = people.people_id", "original explanations": [{"explanation": [{"explanation": "Get the name FROM TABLE people", "subexpression": "SELECT people.name FROM people"}], "number": "Start first query,", "subquery": "SELECT people.name FROM people", "supplement": ""}, {"explanation": [{"explanation": "Get the name FROM TABLE body builder and TABLE people", "subexpression": "SELECT people.name FROM body_builder JOIN people ON body_builder.people_id = people.people_id"}], "number": "Start second query,", "subquery": "SELECT people.name FROM body_builder JOIN people ON body_builder.people_id = people.people_id", "supplement": ""}, {"explanation": [{"explanation": "Keep the records in first query result but not in second query result.", "subexpression": "first query result except second query result"}], "number": "Start third query,", "subquery": "first query result except second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the name FROM TABLE people", "subexpression": "SELECT people.name FROM people"}, {"explanation": "ddasd", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT people.name FROM people", "supplement": ""}, {"explanation": [{"explanation": "Get the id FROM TABLE body builder and TABLE people", "subexpression": "SELECT people.name FROM body_builder JOIN people ON body_builder.people_id = people.people_id"}], "number": "Start second query,", "subquery": "SELECT people.name FROM body_builder JOIN people ON body_builder.people_id = people.people_id", "supplement": ""}, {"explanation": [{"explanation": "Keep the records in first query result but not in second query result.", "subexpression": "first query result except second query result"}], "number": "Start third query,", "subquery": "first query result except second query result", "supplement": ""}], "duration": 7.889781951904297, "time": "2022-10-19 00:58:18"}
{"question": ";lk;;l", "dbid": "behavior_monitoring", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the cell mobile number FROM TABLE addresses", "subexpression": "SELECT teachers.cell_mobile_number FROM addresses"}], "number": "Start first query,", "subquery": "SELECT teachers.cell_mobile_number FROM addresses", "supplement": ""}, {"explanation": [{"explanation": "Get the cell mobile number FROM TABLE addresses", "subexpression": "SELECT teachers.cell_mobile_number FROM addresses"}], "number": "Start second query,", "subquery": "SELECT teachers.cell_mobile_number FROM addresses", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "entire_SQL": "SELECT teachers.cell_mobile_number FROM addresses INTERSECT SELECT teachers.cell_mobile_number FROM addresses", "original explanations": [{"explanation": [{"explanation": "Get the cell mobile number FROM TABLE addresses", "subexpression": "SELECT teachers.cell_mobile_number FROM addresses"}], "number": "Start first query,", "subquery": "SELECT teachers.cell_mobile_number FROM addresses", "supplement": ""}, {"explanation": [{"explanation": "Get the cell mobile number FROM TABLE addresses", "subexpression": "SELECT teachers.cell_mobile_number FROM addresses"}], "number": "Start second query,", "subquery": "SELECT teachers.cell_mobile_number FROM addresses", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the ID mobile number FROM TABLE addresses", "subexpression": "SELECT teachers.cell_mobile_number FROM addresses"}, {"explanation": "DDDDD", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT teachers.cell_mobile_number FROM addresses", "supplement": ""}, {"explanation": [{"explanation": "Get the cell mobile number FROM TABLE addresses", "subexpression": "SELECT teachers.cell_mobile_number FROM addresses"}, {"explanation": "ASDQSA", "subexpression": "..."}], "number": "Start second query,", "subquery": "SELECT teachers.cell_mobile_number FROM addresses", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "duration": 8.9363853931427, "time": "2022-10-19 01:00:15"}
{"question": "asdf", "dbid": "club_1", "TBid": "", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the clubname FROM TABLE club", "subexpression": "SELECT club.clubname FROM club"}], "number": "Start first query,", "subquery": "SELECT club.clubname FROM club", "supplement": ""}, {"explanation": [{"explanation": "Get the stuid FROM TABLE club", "subexpression": "SELECT student.stuid FROM club"}], "number": "Start second query,", "subquery": "SELECT student.stuid FROM club", "supplement": ""}, {"explanation": [{"explanation": "Keep the union of first query result and second query result.", "subexpression": "first query result union second query result"}], "number": "Start third query,", "subquery": "first query result union second query result", "supplement": ""}], "entire_SQL": "SELECT club.clubname FROM club UNION SELECT student.stuid FROM club", "original explanations": [{"explanation": [{"explanation": "Get the clubname FROM TABLE club", "subexpression": "SELECT club.clubname FROM club"}], "number": "Start first query,", "subquery": "SELECT club.clubname FROM club", "supplement": ""}, {"explanation": [{"explanation": "Get the stuid FROM TABLE club", "subexpression": "SELECT student.stuid FROM club"}], "number": "Start second query,", "subquery": "SELECT student.stuid FROM club", "supplement": ""}, {"explanation": [{"explanation": "Keep the union of first query result and second query result.", "subexpression": "first query result union second query result"}], "number": "Start third query,", "subquery": "first query result union second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the id FROM TABLE club", "subexpression": "SELECT club.clubname FROM club"}, {"explanation": "dfdssdafa", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT club.clubname FROM club", "supplement": ""}, {"explanation": [{"explanation": "Get the name FROM TABLE club", "subexpression": "SELECT student.stuid FROM club"}], "number": "Start second query,", "subquery": "SELECT student.stuid FROM club", "supplement": ""}, {"explanation": [{"explanation": "Keep the union of first query result and second query result.", "subexpression": "first query result union second query result"}], "number": "Start third query,", "subquery": "first query result union second query result", "supplement": ""}], "duration": 9.804930448532104, "time": "2022-10-19 01:09:55"}
{"question": "asdf", "dbid": "club_1", "TBid": "", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the clubid and the clubname FROM TABLE Club", "subexpression": "SELECT clubid , clubname FROM Club"}], "number": "Start first query,", "subquery": "SELECT clubid , clubname FROM Club", "supplement": ""}, {"explanation": [{"explanation": "Get the clubname FROM TABLE club", "subexpression": "SELECT club.clubname FROM club"}], "number": "Start second query,", "subquery": "SELECT club.clubname FROM club", "supplement": ""}, {"explanation": [{"explanation": "Keep the union of first query result and second query result.", "subexpression": "first query result union second query result"}], "number": "Start third query,", "subquery": "first query result union second query result", "supplement": ""}], "entire_SQL": "SELECT clubid, clubname FROM Club UNION SELECT club.clubname FROM club", "original explanations": [{"explanation": [{"explanation": "Get the clubid and the clubname FROM TABLE Club", "subexpression": "SELECT clubid , clubname FROM Club"}], "number": "Start first query,", "subquery": "SELECT clubid , clubname FROM Club", "supplement": ""}, {"explanation": [{"explanation": "Get the clubname FROM TABLE club", "subexpression": "SELECT club.clubname FROM club"}], "number": "Start second query,", "subquery": "SELECT club.clubname FROM club", "supplement": ""}, {"explanation": [{"explanation": "Keep the union of first query result and second query result.", "subexpression": "first query result union second query result"}], "number": "Start third query,", "subquery": "first query result union second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the clubid and the clubname FROM TABLE Club", "subexpression": "SELECT clubid , clubname FROM Club"}, {"explanation": "asdfsa", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT clubid , clubname FROM Club", "supplement": ""}, {"explanation": [{"explanation": "Get the clubname FROM TABLE club", "subexpression": "SELECT club.clubname FROM club"}], "number": "Start second query,", "subquery": "SELECT club.clubname FROM club", "supplement": ""}, {"explanation": [{"explanation": "Keep the union of first query result and second query result.", "subexpression": "first query result union second query result"}], "number": "Start third query,", "subquery": "first query result union second query result", "supplement": ""}], "duration": 15.919121742248535, "time": "2022-10-19 01:10:15"}
{"question": "asdf", "dbid": "club_1", "TBid": "", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the clubid and the clubname FROM TABLE Club", "subexpression": "SELECT clubid , clubname FROM Club"}], "number": "Start first query,", "subquery": "SELECT clubid , clubname FROM Club", "supplement": ""}, {"explanation": [{"explanation": "Get the clubname FROM TABLE club", "subexpression": "SELECT club.clubname FROM club"}], "number": "Start second query,", "subquery": "SELECT club.clubname FROM club", "supplement": ""}, {"explanation": [{"explanation": "Keep the union of first query result and second query result.", "subexpression": "first query result union second query result"}], "number": "Start third query,", "subquery": "first query result union second query result", "supplement": ""}], "entire_SQL": "SELECT clubid, clubname FROM Club UNION SELECT club.clubname FROM club", "original explanations": [{"explanation": [{"explanation": "Get the clubid and the clubname FROM TABLE Club", "subexpression": "SELECT clubid , clubname FROM Club"}], "number": "Start first query,", "subquery": "SELECT clubid , clubname FROM Club", "supplement": ""}, {"explanation": [{"explanation": "Get the clubname FROM TABLE club", "subexpression": "SELECT club.clubname FROM club"}], "number": "Start second query,", "subquery": "SELECT club.clubname FROM club", "supplement": ""}, {"explanation": [{"explanation": "Keep the union of first query result and second query result.", "subexpression": "first query result union second query result"}], "number": "Start third query,", "subquery": "first query result union second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the clubid and the clubname FROM TABLE Club", "subexpression": "SELECT clubid , clubname FROM Club"}], "number": "Start first query,", "subquery": "SELECT clubid , clubname FROM Club", "supplement": ""}, {"explanation": [], "number": "Start second query,", "subquery": "SELECT club.clubname FROM club", "supplement": ""}, {"explanation": [{"explanation": "Keep the union of first query result and second query result.", "subexpression": "first query result union second query result"}, {"explanation": "asdf", "subexpression": "..."}], "number": "Start third query,", "subquery": "first query result union second query result", "supplement": ""}], "duration": 7.159363746643066, "time": "2022-10-19 01:10:29"}
{"question": "asdfa", "dbid": "city_record", "TBid": "", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the mar FROM TABLE city", "subexpression": "SELECT temperature.mar FROM city"}], "number": "Start first query,", "subquery": "SELECT temperature.mar FROM city", "supplement": ""}, {"explanation": [{"explanation": "Get the city FROM TABLE city", "subexpression": "SELECT city.city FROM city"}], "number": "Start second query,", "subquery": "SELECT city.city FROM city", "supplement": ""}, {"explanation": [{"explanation": "Keep the union of first query result and second query result.", "subexpression": "first query result union second query result"}], "number": "Start third query,", "subquery": "first query result union second query result", "supplement": ""}], "entire_SQL": "SELECT temperature.mar FROM city UNION SELECT city.city FROM city", "original explanations": [{"explanation": [{"explanation": "Get the mar FROM TABLE city", "subexpression": "SELECT temperature.mar FROM city"}], "number": "Start first query,", "subquery": "SELECT temperature.mar FROM city", "supplement": ""}, {"explanation": [{"explanation": "Get the city FROM TABLE city", "subexpression": "SELECT city.city FROM city"}], "number": "Start second query,", "subquery": "SELECT city.city FROM city", "supplement": ""}, {"explanation": [{"explanation": "Keep the union of first query result and second query result.", "subexpression": "first query result union second query result"}], "number": "Start third query,", "subquery": "first query result union second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the mar FROM TABLE city", "subexpression": "SELECT temperature.mar FROM city"}], "number": "Start first query,", "subquery": "SELECT temperature.mar FROM city", "supplement": ""}, {"explanation": [{"explanation": "Get the city FROM TABLE city", "subexpression": "SELECT city.city FROM city"}, {"explanation": "asdf", "subexpression": "..."}], "number": "Start second query,", "subquery": "SELECT city.city FROM city", "supplement": ""}, {"explanation": [{"explanation": "Keep the union of first query result and second query result.", "subexpression": "first query result union second query result"}], "number": "Start third query,", "subquery": "first query result union second query result", "supplement": ""}], "duration": 3.8513476848602295, "time": "2022-10-19 01:13:35"}
{"question": "asdfa", "dbid": "city_record", "TBid": "", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the mar FROM TABLE city", "subexpression": "SELECT temperature.mar FROM city"}], "number": "Start first query,", "subquery": "SELECT temperature.mar FROM city", "supplement": ""}, {"explanation": [{"explanation": "Get the city FROM TABLE city", "subexpression": "SELECT city FROM city"}, {"explanation": "Keep the records WHERE the city of city is \"asdf\"", "subexpression": "WHERE city.city = \"asdf\""}], "number": "Start second query,", "subquery": "SELECT city FROM city WHERE city.city = \"asdf\"", "supplement": ""}, {"explanation": [{"explanation": "Keep the union of first query result and second query result.", "subexpression": "first query result union second query result"}], "number": "Start third query,", "subquery": "first query result union second query result", "supplement": ""}], "entire_SQL": "SELECT temperature.mar FROM city UNION SELECT city FROM city WHERE city.city = \"asdf\"", "original explanations": [{"explanation": [{"explanation": "Get the mar FROM TABLE city", "subexpression": "SELECT temperature.mar FROM city"}], "number": "Start first query,", "subquery": "SELECT temperature.mar FROM city", "supplement": ""}, {"explanation": [{"explanation": "Get the city FROM TABLE city", "subexpression": "SELECT city FROM city"}, {"explanation": "Keep the records WHERE the city of city is \"asdf\"", "subexpression": "WHERE city.city = \"asdf\""}], "number": "Start second query,", "subquery": "SELECT city FROM city WHERE city.city = \"asdf\"", "supplement": ""}, {"explanation": [{"explanation": "Keep the union of first query result and second query result.", "subexpression": "first query result union second query result"}], "number": "Start third query,", "subquery": "first query result union second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the mar FROM TABLE city", "subexpression": "SELECT temperature.mar FROM city"}], "number": "Start first query,", "subquery": "SELECT temperature.mar FROM city", "supplement": ""}, {"explanation": [{"explanation": "Get the city FROM TABLE city", "subexpression": "SELECT city FROM city"}, {"explanation": "Keep the records WHERE the city of city is \"asdf\"", "subexpression": "WHERE city.city = \"asdf\""}, {"explanation": "asdf", "subexpression": "..."}], "number": "Start second query,", "subquery": "SELECT city FROM city WHERE city.city = \"asdf\"", "supplement": ""}, {"explanation": [{"explanation": "Keep the union of first query result and second query result.", "subexpression": "first query result union second query result"}], "number": "Start third query,", "subquery": "first query result union second query result", "supplement": ""}], "duration": 10.091589450836182, "time": "2022-10-19 01:13:45"}
{"question": "asdfa", "dbid": "city_record", "TBid": "", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the mar FROM TABLE city", "subexpression": "SELECT temperature.mar FROM city"}], "number": "Start first query,", "subquery": "SELECT temperature.mar FROM city", "supplement": ""}, {"explanation": [{"explanation": "Get the city FROM TABLE city", "subexpression": "SELECT city FROM city"}, {"explanation": "Keep the records WHERE the city of city is \"asdf\" AND the city of city is \"asdf\"", "subexpression": "WHERE city.city = \"asdf\" AND city.city = \"asdf\""}], "number": "Start second query,", "subquery": "SELECT city FROM city WHERE city.city = \"asdf\" AND city.city = \"asdf\"", "supplement": ""}, {"explanation": [{"explanation": "Keep the union of first query result and second query result.", "subexpression": "first query result union second query result"}], "number": "Start third query,", "subquery": "first query result union second query result", "supplement": ""}], "entire_SQL": "SELECT temperature.mar FROM city UNION SELECT city FROM city WHERE city.city = \"asdf\" AND city.city = \"asdf\"", "original explanations": [{"explanation": [{"explanation": "Get the mar FROM TABLE city", "subexpression": "SELECT temperature.mar FROM city"}], "number": "Start first query,", "subquery": "SELECT temperature.mar FROM city", "supplement": ""}, {"explanation": [{"explanation": "Get the city FROM TABLE city", "subexpression": "SELECT city FROM city"}, {"explanation": "Keep the records WHERE the city of city is \"asdf\" AND the city of city is \"asdf\"", "subexpression": "WHERE city.city = \"asdf\" AND city.city = \"asdf\""}], "number": "Start second query,", "subquery": "SELECT city FROM city WHERE city.city = \"asdf\" AND city.city = \"asdf\"", "supplement": ""}, {"explanation": [{"explanation": "Keep the union of first query result and second query result.", "subexpression": "first query result union second query result"}], "number": "Start third query,", "subquery": "first query result union second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the mar FROM TABLE city", "subexpression": "SELECT temperature.mar FROM city"}], "number": "Start first query,", "subquery": "SELECT temperature.mar FROM city", "supplement": ""}, {"explanation": [], "number": "Start second query,", "subquery": "SELECT city FROM city WHERE city.city = \"asdf\" AND city.city = \"asdf\"", "supplement": ""}, {"explanation": [{"explanation": "Keep the union of first query result and second query result.", "subexpression": "first query result union second query result"}], "number": "Start third query,", "subquery": "first query result union second query result", "supplement": ""}], "duration": 10.7884840965271, "time": "2022-10-19 01:13:57"}
{"question": "asdfa", "dbid": "city_record", "TBid": "", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the mar FROM TABLE city", "subexpression": "SELECT temperature.mar FROM city"}], "number": "Start first query,", "subquery": "SELECT temperature.mar FROM city", "supplement": ""}, {"explanation": [{"explanation": "Get the city FROM TABLE city", "subexpression": "SELECT city FROM city"}, {"explanation": "Keep the records WHERE the city of city is \"asdf\" AND the city of city is \"asdf\"", "subexpression": "WHERE city.city = \"asdf\" AND city.city = \"asdf\""}], "number": "Start second query,", "subquery": "SELECT city FROM city WHERE city.city = \"asdf\" AND city.city = \"asdf\"", "supplement": ""}, {"explanation": [{"explanation": "Keep the union of first query result and second query result.", "subexpression": "first query result union second query result"}], "number": "Start third query,", "subquery": "first query result union second query result", "supplement": ""}], "entire_SQL": "SELECT temperature.mar FROM city UNION ", "original explanations": [{"explanation": [{"explanation": "Get the mar FROM TABLE city", "subexpression": "SELECT temperature.mar FROM city"}], "number": "Start first query,", "subquery": "SELECT temperature.mar FROM city", "supplement": ""}, {"explanation": [], "number": "Start second query,", "subquery": "SELECT city FROM city WHERE city.city = \"asdf\" AND city.city = \"asdf\"", "supplement": ""}, {"explanation": [{"explanation": "Keep the union of first query result and second query result.", "subexpression": "first query result union second query result"}], "number": "Start third query,", "subquery": "first query result union second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the mar FROM TABLE city", "subexpression": "SELECT temperature.mar FROM city"}], "number": "Start first query,", "subquery": "SELECT temperature.mar FROM city", "supplement": ""}, {"explanation": [], "number": "Start second query,", "subquery": "SELECT city FROM city WHERE city.city = \"asdf\" AND city.city = \"asdf\"", "supplement": ""}, {"explanation": [{"explanation": "Keep the union of first query result and second query result.", "subexpression": "first query result union second query result"}], "number": "Start third query,", "subquery": "first query result union second query result", "supplement": ""}], "duration": 29.68563675880432, "time": "2022-10-19 01:14:26"}
{"question": "asdf", "dbid": "city_record", "TBid": "", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the nov FROM TABLE city", "subexpression": "SELECT temperature.nov FROM city"}], "number": "Start first query,", "subquery": "SELECT temperature.nov FROM city", "supplement": ""}, {"explanation": [{"explanation": "Get the host city FROM TABLE hosting city", "subexpression": "SELECT hosting_city.host_city FROM hosting_city"}], "number": "Start second query,", "subquery": "SELECT hosting_city.host_city FROM hosting_city", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "entire_SQL": "SELECT temperature.nov FROM city INTERSECT SELECT hosting_city.host_city FROM hosting_city", "original explanations": [{"explanation": [{"explanation": "Get the nov FROM TABLE city", "subexpression": "SELECT temperature.nov FROM city"}], "number": "Start first query,", "subquery": "SELECT temperature.nov FROM city", "supplement": ""}, {"explanation": [{"explanation": "Get the host city FROM TABLE hosting city", "subexpression": "SELECT hosting_city.host_city FROM hosting_city"}], "number": "Start second query,", "subquery": "SELECT hosting_city.host_city FROM hosting_city", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the notes FROM TABLE city", "subexpression": "SELECT temperature.nov FROM city"}], "number": "Start first query,", "subquery": "SELECT temperature.nov FROM city", "supplement": ""}, {"explanation": [{"explanation": "Get the host city FROM TABLE hosting city", "subexpression": "SELECT hosting_city.host_city FROM hosting_city"}], "number": "Start second query,", "subquery": "SELECT hosting_city.host_city FROM hosting_city", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}, {"explanation": "", "subexpression": "..."}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "duration": 10.424386262893677, "time": "2022-10-19 01:14:44"}
{"question": "asdf", "dbid": "city_record", "TBid": "hosting_city", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the nov FROM TABLE city", "subexpression": "SELECT temperature.nov FROM city"}], "number": "Start first query,", "subquery": "SELECT temperature.nov FROM city", "supplement": ""}, {"explanation": [{"explanation": "Get the host city FROM TABLE hosting city", "subexpression": "SELECT hosting_city.host_city FROM hosting_city"}], "number": "Start second query,", "subquery": "SELECT hosting_city.host_city FROM hosting_city", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "entire_SQL": "ORDER BY COUNT( * ) DESC LIMIT 1 INTERSECT SELECT hosting_city.host_city FROM hosting_city", "original explanations": [{"explanation": [{"explanation": "Get the notes FROM TABLE city", "subexpression": "ORDER BY COUNT( * ) DESC LIMIT 1"}], "number": "Start first query,", "subquery": "SELECT temperature.nov FROM city", "supplement": ""}, {"explanation": [{"explanation": "Get the host city FROM TABLE hosting city", "subexpression": "SELECT hosting_city.host_city FROM hosting_city"}], "number": "Start second query,", "subquery": "SELECT hosting_city.host_city FROM hosting_city", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}, {"explanation": "", "subexpression": ""}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the year FROM TABLE city", "subexpression": "ORDER BY COUNT( * ) DESC LIMIT 1"}], "number": "Start first query,", "subquery": "SELECT temperature.nov FROM city", "supplement": ""}, {"explanation": [{"explanation": "Get the host city FROM TABLE hosting city", "subexpression": "SELECT hosting_city.host_city FROM hosting_city"}], "number": "Start second query,", "subquery": "SELECT hosting_city.host_city FROM hosting_city", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}, {"explanation": "", "subexpression": ""}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "duration": 10.693972110748291, "time": "2022-10-19 01:14:55"}
{"question": "show me the year", "dbid": "city_record", "TBid": "hosting_city", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the year FROM TABLE hosting city", "subexpression": "SELECT hosting_city.year FROM hosting_city"}], "number": "Start first query,", "subquery": "SELECT hosting_city.year FROM hosting_city", "supplement": ""}], "entire_SQL": "SELECT hosting_city.year FROM hosting_city", "original explanations": [{"explanation": [{"explanation": "Get the year FROM TABLE hosting city", "subexpression": "SELECT hosting_city.year FROM hosting_city"}], "number": "Start first query,", "subquery": "SELECT hosting_city.year FROM hosting_city", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the id FROM TABLE hosting city", "subexpression": "SELECT hosting_city.year FROM hosting_city"}], "number": "Start first query,", "subquery": "SELECT hosting_city.year FROM hosting_city", "supplement": ""}], "duration": 4.966752290725708, "time": "2022-10-19 01:15:25"}
{"question": "asdf", "dbid": "city_record", "TBid": "hosting_city", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the nov FROM TABLE city", "subexpression": "SELECT temperature.nov FROM city"}], "number": "Start first query,", "subquery": "SELECT temperature.nov FROM city", "supplement": ""}, {"explanation": [{"explanation": "Get the host city FROM TABLE hosting city", "subexpression": "SELECT hosting_city.host_city FROM hosting_city"}], "number": "Start second query,", "subquery": "SELECT hosting_city.host_city FROM hosting_city", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "entire_SQL": "SELECT temperature.nov FROM city INTERSECT SELECT hosting_city.host_city FROM hosting_city", "original explanations": [{"explanation": [{"explanation": "Get the nov FROM TABLE city", "subexpression": "SELECT temperature.nov FROM city"}], "number": "Start first query,", "subquery": "SELECT temperature.nov FROM city", "supplement": ""}, {"explanation": [{"explanation": "Get the host city FROM TABLE hosting city", "subexpression": "SELECT hosting_city.host_city FROM hosting_city"}], "number": "Start second query,", "subquery": "SELECT hosting_city.host_city FROM hosting_city", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the asdf FROM TABLE city", "subexpression": "SELECT temperature.nov FROM city"}], "number": "Start first query,", "subquery": "SELECT temperature.nov FROM city", "supplement": ""}, {"explanation": [{"explanation": "Get the host city FROM TABLE hosting city", "subexpression": "SELECT hosting_city.host_city FROM hosting_city"}], "number": "Start second query,", "subquery": "SELECT hosting_city.host_city FROM hosting_city", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "duration": 6.011998653411865, "time": "2022-10-19 01:15:38"}
{"question": "asdf", "dbid": "city_record", "TBid": "hosting_city", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the nov FROM TABLE city", "subexpression": "SELECT temperature.nov FROM city"}], "number": "Start first query,", "subquery": "SELECT temperature.nov FROM city", "supplement": ""}, {"explanation": [{"explanation": "Get the host city FROM TABLE hosting city", "subexpression": "SELECT hosting_city.host_city FROM hosting_city"}], "number": "Start second query,", "subquery": "SELECT hosting_city.host_city FROM hosting_city", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "entire_SQL": "ORDER BY COUNT( * ) DESC LIMIT 1 INTERSECT SELECT hosting_city.host_city FROM hosting_city", "original explanations": [{"explanation": [{"explanation": "Get the asdf FROM TABLE city", "subexpression": "ORDER BY COUNT( * ) DESC LIMIT 1"}], "number": "Start first query,", "subquery": "SELECT temperature.nov FROM city", "supplement": ""}, {"explanation": [{"explanation": "Get the host city FROM TABLE hosting city", "subexpression": "SELECT hosting_city.host_city FROM hosting_city"}], "number": "Start second query,", "subquery": "SELECT hosting_city.host_city FROM hosting_city", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the asdf FROM TABLE city", "subexpression": "ORDER BY COUNT( * ) DESC LIMIT 1"}], "number": "Start first query,", "subquery": "SELECT temperature.nov FROM city", "supplement": ""}, {"explanation": [{"explanation": "Get the host city FROM TABLE hosting city", "subexpression": "SELECT hosting_city.host_city FROM hosting_city"}], "number": "Start second query,", "subquery": "SELECT hosting_city.host_city FROM hosting_city", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "duration": 121.73794460296631, "time": "2022-10-19 01:17:40"}
{"question": "asdf", "dbid": "city_record", "TBid": "hosting_city", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the nov FROM TABLE city", "subexpression": "SELECT temperature.nov FROM city"}], "number": "Start first query,", "subquery": "SELECT temperature.nov FROM city", "supplement": ""}, {"explanation": [{"explanation": "Get the host city FROM TABLE hosting city", "subexpression": "SELECT hosting_city.host_city FROM hosting_city"}], "number": "Start second query,", "subquery": "SELECT hosting_city.host_city FROM hosting_city", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "entire_SQL": "ORDER BY COUNT( * ) DESC LIMIT 1 INTERSECT SELECT hosting_city.host_city FROM hosting_city", "original explanations": [{"explanation": [{"explanation": "Get the asdf FROM TABLE city", "subexpression": "ORDER BY COUNT( * ) DESC LIMIT 1"}], "number": "Start first query,", "subquery": "SELECT temperature.nov FROM city", "supplement": ""}, {"explanation": [{"explanation": "Get the host city FROM TABLE hosting city", "subexpression": "SELECT hosting_city.host_city FROM hosting_city"}], "number": "Start second query,", "subquery": "SELECT hosting_city.host_city FROM hosting_city", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the asdf FROM TABLE city", "subexpression": "ORDER BY COUNT( * ) DESC LIMIT 1"}], "number": "Start first query,", "subquery": "SELECT temperature.nov FROM city", "supplement": ""}, {"explanation": [], "number": "Start second query,", "subquery": "SELECT hosting_city.host_city FROM hosting_city", "supplement": ""}, {"explanation": [], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "duration": 14.113576412200928, "time": "2022-10-19 01:17:54"}
{"question": "asdf", "dbid": "city_record", "TBid": "hosting_city", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the nov FROM TABLE city", "subexpression": "SELECT temperature.nov FROM city"}], "number": "Start first query,", "subquery": "SELECT temperature.nov FROM city", "supplement": ""}, {"explanation": [{"explanation": "Get the host city FROM TABLE hosting city", "subexpression": "SELECT hosting_city.host_city FROM hosting_city"}], "number": "Start second query,", "subquery": "SELECT hosting_city.host_city FROM hosting_city", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "entire_SQL": "ORDER BY COUNT( * ) DESC LIMIT 1 INTERSECT ", "original explanations": [{"explanation": [{"explanation": "Get the asdf FROM TABLE city", "subexpression": "ORDER BY COUNT( * ) DESC LIMIT 1"}], "number": "Start first query,", "subquery": "SELECT temperature.nov FROM city", "supplement": ""}, {"explanation": [], "number": "Start second query,", "subquery": "SELECT hosting_city.host_city FROM hosting_city", "supplement": ""}, {"explanation": [], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the asdf FROM TABLE city", "subexpression": "ORDER BY COUNT( * ) DESC LIMIT 1"}], "number": "Start first query,", "subquery": "SELECT temperature.nov FROM city", "supplement": ""}, {"explanation": [], "number": "Start second query,", "subquery": "SELECT hosting_city.host_city FROM hosting_city", "supplement": ""}, {"explanation": [], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "duration": 1.8115429878234863, "time": "2022-10-19 01:17:56"}
{"question": "asdf", "dbid": "city_record", "TBid": "hosting_city", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the nov FROM TABLE city", "subexpression": "SELECT temperature.nov FROM city"}], "number": "Start first query,", "subquery": "SELECT temperature.nov FROM city", "supplement": ""}, {"explanation": [{"explanation": "Get the host city FROM TABLE hosting city", "subexpression": "SELECT hosting_city.host_city FROM hosting_city"}], "number": "Start second query,", "subquery": "SELECT hosting_city.host_city FROM hosting_city", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "first query result intersect second query result"}], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "entire_SQL": "ORDER BY COUNT( * ) DESC LIMIT 1 INTERSECT ", "original explanations": [{"explanation": [{"explanation": "Get the asdf FROM TABLE city", "subexpression": "ORDER BY COUNT( * ) DESC LIMIT 1"}], "number": "Start first query,", "subquery": "SELECT temperature.nov FROM city", "supplement": ""}, {"explanation": [], "number": "Start second query,", "subquery": "SELECT hosting_city.host_city FROM hosting_city", "supplement": ""}, {"explanation": [], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the asdf FROM TABLE city", "subexpression": "ORDER BY COUNT( * ) DESC LIMIT 1"}], "number": "Start first query,", "subquery": "SELECT temperature.nov FROM city", "supplement": ""}, {"explanation": [], "number": "Start second query,", "subquery": "SELECT hosting_city.host_city FROM hosting_city", "supplement": ""}, {"explanation": [], "number": "Start third query,", "subquery": "first query result intersect second query result", "supplement": ""}], "duration": 0.6398470401763916, "time": "2022-10-19 01:17:56"}
{"question": "Find the names of stores whose number products is more than the average number of products.", "dbid": "employee_hire_evaluation", "TBid": "employee", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the average value of number products FROM TABLE shop", "subexpression": "SELECT AVG ( shop.number_products ) FROM shop"}], "number": "Start first query,", "subquery": "SELECT AVG ( shop.number_products ) FROM shop", "supplement": ""}, {"explanation": [{"explanation": "Get the name FROM TABLE shop", "subexpression": "SELECT shop.name FROM shop"}, {"explanation": "Keep the records WHERE the number products of shop is greater than the first query result", "subexpression": "WHERE shop.number_products > (1)"}], "number": "Start second query,", "subquery": "SELECT shop.name FROM shop WHERE shop.number_products > ( first123query123result )  ", "supplement": "second query result uses first query result"}], "entire_SQL": "SELECT shop.name FROM shop WHERE shop.number_products > (SELECT AVG( shop.number_products ) FROM shop)", "original explanations": [{"explanation": [{"explanation": "Get the average value of number products FROM TABLE shop", "subexpression": "SELECT AVG ( shop.number_products ) FROM shop"}], "number": "Start first query,", "subquery": "SELECT AVG ( shop.number_products ) FROM shop", "supplement": ""}, {"explanation": [{"explanation": "Get the name FROM TABLE shop", "subexpression": "SELECT shop.name FROM shop"}, {"explanation": "Keep the records WHERE the number products of shop is greater than the first query result", "subexpression": "WHERE shop.number_products > (1)"}], "number": "Start second query,", "subquery": "SELECT shop.name FROM shop WHERE shop.number_products > ( first123query123result )  ", "supplement": "second query result uses first query result"}], "edited explanations": [{"explanation": [{"explanation": "Get the max value of number products FROM TABLE shop", "subexpression": "SELECT AVG ( shop.number_products ) FROM shop"}], "number": "Start first query,", "subquery": "SELECT AVG ( shop.number_products ) FROM shop", "supplement": ""}, {"explanation": [{"explanation": "Get the name FROM TABLE shop", "subexpression": "SELECT shop.name FROM shop"}, {"explanation": "Keep the records WHERE the number products of shop is greater than the first query result", "subexpression": "WHERE shop.number_products > (1)"}], "number": "Start second query,", "subquery": "SELECT shop.name FROM shop WHERE shop.number_products > ( first123query123result )  ", "supplement": "second query result uses first query result"}], "duration": 135.1375994682312, "time": "2022-10-20 21:04:57"}
{"question": "Find the names of stores whose number products is more than the average number of products.", "dbid": "employee_hire_evaluation", "TBid": "shop", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the average value of number products FROM TABLE shop", "subexpression": "SELECT AVG ( shop.number_products ) FROM shop"}], "number": "Start first query,", "subquery": "SELECT AVG ( shop.number_products ) FROM shop", "supplement": ""}, {"explanation": [{"explanation": "Get the name FROM TABLE shop", "subexpression": "SELECT shop.name FROM shop"}, {"explanation": "Keep the records WHERE the number products of shop is greater than the first query result", "subexpression": "WHERE shop.number_products > (1)"}], "number": "Start second query,", "subquery": "SELECT shop.name FROM shop WHERE shop.number_products > ( first123query123result )  ", "supplement": "second query result uses first query result"}], "entire_SQL": "SELECT shop.name FROM shop WHERE shop.number_products > (SELECT AVG( shop.number_products ) FROM shop)", "original explanations": [{"explanation": [{"explanation": "Get the average value of number products FROM TABLE shop", "subexpression": "SELECT AVG ( shop.number_products ) FROM shop"}], "number": "Start first query,", "subquery": "SELECT AVG ( shop.number_products ) FROM shop", "supplement": ""}, {"explanation": [{"explanation": "Get the name FROM TABLE shop", "subexpression": "SELECT shop.name FROM shop"}, {"explanation": "Keep the records WHERE the number products of shop is greater than the first query result", "subexpression": "WHERE shop.number_products > (1)"}], "number": "Start second query,", "subquery": "SELECT shop.name FROM shop WHERE shop.number_products > ( first123query123result )  ", "supplement": "second query result uses first query result"}], "edited explanations": [{"explanation": [{"explanation": "Get the name FROM TABLE shop", "subexpression": "SELECT AVG ( shop.number_products ) FROM shop"}], "number": "Start first query,", "subquery": "SELECT AVG ( shop.number_products ) FROM shop", "supplement": ""}, {"explanation": [{"explanation": "Get the name FROM TABLE shop", "subexpression": "SELECT shop.name FROM shop"}, {"explanation": "Keep the records WHERE the number products of shop is greater than the first query result", "subexpression": "WHERE shop.number_products > (1)"}], "number": "Start second query,", "subquery": "SELECT shop.name FROM shop WHERE shop.number_products > ( first123query123result )  ", "supplement": "second query result uses first query result"}], "duration": 29.790120601654053, "time": "2022-10-20 21:05:27"}
{"question": "Show the stadium names without any concert.", "dbid": "concert_singer", "TBid": "stadium", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the stadium id FROM TABLE concert", "subexpression": "SELECT concert.stadium_id FROM concert"}], "number": "Start first query,", "subquery": "SELECT concert.stadium_id FROM concert", "supplement": ""}, {"explanation": [{"explanation": "Get the name FROM TABLE stadium", "subexpression": "SELECT stadium.name FROM stadium"}, {"explanation": "Keep the records WHERE the stadium id of stadium is not in the first query result", "subexpression": "WHERE stadium.stadium_id NOT IN (1)"}], "number": "Start second query,", "subquery": "SELECT stadium.name FROM stadium WHERE stadium.stadium_id NOT IN ( first123query123result )  ", "supplement": "second query result uses first query result"}], "entire_SQL": "SELECT stadium.name FROM stadium WHERE stadium.stadium_id NOT IN (SELECT concert.stadium_id FROM concert)", "original explanations": [{"explanation": [{"explanation": "Get the stadium id FROM TABLE concert", "subexpression": "SELECT concert.stadium_id FROM concert"}], "number": "Start first query,", "subquery": "SELECT concert.stadium_id FROM concert", "supplement": ""}, {"explanation": [{"explanation": "Get the name FROM TABLE stadium", "subexpression": "SELECT stadium.name FROM stadium"}, {"explanation": "Keep the records WHERE the stadium id of stadium is not in the first query result", "subexpression": "WHERE stadium.stadium_id NOT IN (1)"}], "number": "Start second query,", "subquery": "SELECT stadium.name FROM stadium WHERE stadium.stadium_id NOT IN ( first123query123result )  ", "supplement": "second query result uses first query result"}], "edited explanations": [{"explanation": [{"explanation": "Get the stadium id FROM TABLE concert", "subexpression": "SELECT concert.stadium_id FROM concert"}], "number": "Start first query,", "subquery": "SELECT concert.stadium_id FROM concert", "supplement": ""}, {"explanation": [{"explanation": "Get the stadium id FROM TABLE stadium", "subexpression": "SELECT stadium.name FROM stadium"}, {"explanation": "Keep the records WHERE the stadium id of stadium is not in the first query result", "subexpression": "WHERE stadium.stadium_id NOT IN (1)"}], "number": "Start second query,", "subquery": "SELECT stadium.name FROM stadium WHERE stadium.stadium_id NOT IN ( first123query123result )  ", "supplement": "second query result uses first query result"}], "duration": 59.49605751037598, "time": "2022-10-20 21:19:55"}
{"question": "Show the stadium names without any concert.", "dbid": "concert_singer", "TBid": "stadium", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the stadium id FROM TABLE concert", "subexpression": "SELECT concert.stadium_id FROM concert"}], "number": "Start first query,", "subquery": "SELECT concert.stadium_id FROM concert", "supplement": ""}, {"explanation": [{"explanation": "Get the name FROM TABLE stadium", "subexpression": "SELECT stadium.name FROM stadium"}, {"explanation": "Keep the records WHERE the stadium id of stadium is not in the first query result", "subexpression": "WHERE stadium.stadium_id NOT IN (1)"}], "number": "Start second query,", "subquery": "SELECT stadium.name FROM stadium WHERE stadium.stadium_id NOT IN ( first123query123result )  ", "supplement": "second query result uses first query result"}], "entire_SQL": "SELECT stadium.name FROM stadium WHERE stadium.stadium_id NOT IN (SELECT concert.stadium_id FROM concert)", "original explanations": [{"explanation": [{"explanation": "Get the stadium id FROM TABLE concert", "subexpression": "SELECT concert.stadium_id FROM concert"}], "number": "Start first query,", "subquery": "SELECT concert.stadium_id FROM concert", "supplement": ""}, {"explanation": [{"explanation": "Get the name FROM TABLE stadium", "subexpression": "SELECT stadium.name FROM stadium"}, {"explanation": "Keep the records WHERE the stadium id of stadium is not in the first query result", "subexpression": "WHERE stadium.stadium_id NOT IN (1)"}], "number": "Start second query,", "subquery": "SELECT stadium.name FROM stadium WHERE stadium.stadium_id NOT IN ( first123query123result )  ", "supplement": "second query result uses first query result"}], "edited explanations": [{"explanation": [{"explanation": "Get the stadium id FROM TABLE concert", "subexpression": "SELECT concert.stadium_id FROM concert"}], "number": "Start first query,", "subquery": "SELECT concert.stadium_id FROM concert", "supplement": ""}, {"explanation": [{"explanation": "Get the id FROM TABLE stadium", "subexpression": "SELECT stadium.name FROM stadium"}, {"explanation": "Keep the records WHERE the stadium id of stadium is not in the first query result", "subexpression": "WHERE stadium.stadium_id NOT IN (1)"}], "number": "Start second query,", "subquery": "SELECT stadium.name FROM stadium WHERE stadium.stadium_id NOT IN ( first123query123result )  ", "supplement": "second query result uses first query result"}], "duration": 50.67005515098572, "time": "2022-10-20 21:20:47"}
{"question": "Show the stadium names without any concert.", "dbid": "concert_singer", "TBid": "stadium", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the stadium id FROM TABLE concert", "subexpression": "SELECT concert.stadium_id FROM concert"}], "number": "Start first query,", "subquery": "SELECT concert.stadium_id FROM concert", "supplement": ""}, {"explanation": [{"explanation": "Get the name FROM TABLE stadium", "subexpression": "SELECT stadium.name FROM stadium"}, {"explanation": "Keep the records WHERE the stadium id of stadium is not in the first query result", "subexpression": "WHERE stadium.stadium_id NOT IN (1)"}], "number": "Start second query,", "subquery": "SELECT stadium.name FROM stadium WHERE stadium.stadium_id NOT IN ( first123query123result )  ", "supplement": "second query result uses first query result"}], "entire_SQL": "SELECT stadium.name FROM stadium WHERE stadium.stadium_id NOT IN (SELECT concert.stadium_id FROM concert)", "original explanations": [{"explanation": [{"explanation": "Get the stadium id FROM TABLE concert", "subexpression": "SELECT concert.stadium_id FROM concert"}], "number": "Start first query,", "subquery": "SELECT concert.stadium_id FROM concert", "supplement": ""}, {"explanation": [{"explanation": "Get the name FROM TABLE stadium", "subexpression": "SELECT stadium.name FROM stadium"}, {"explanation": "Keep the records WHERE the stadium id of stadium is not in the first query result", "subexpression": "WHERE stadium.stadium_id NOT IN (1)"}], "number": "Start second query,", "subquery": "SELECT stadium.name FROM stadium WHERE stadium.stadium_id NOT IN ( first123query123result )  ", "supplement": "second query result uses first query result"}], "edited explanations": [{"explanation": [{"explanation": "Get the stadium id FROM TABLE concert", "subexpression": "SELECT concert.stadium_id FROM concert"}], "number": "Start first query,", "subquery": "SELECT concert.stadium_id FROM concert", "supplement": ""}, {"explanation": [{"explanation": "Get the name FROM TABLE stadium", "subexpression": "SELECT stadium.name FROM stadium"}], "number": "Start second query,", "subquery": "SELECT stadium.name FROM stadium WHERE stadium.stadium_id NOT IN ( first123query123result )  ", "supplement": "second query result uses first query result"}], "duration": 6.580302000045776, "time": "2022-10-20 21:20:54"}
{"question": "show me the name", "dbid": "assets_maintenance", "TBid": "maintenance_engineers", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the chargeable amount FROM TABLE parts", "subexpression": "SELECT parts.chargeable_amount FROM parts"}], "number": "Start first query,", "subquery": "SELECT parts.chargeable_amount FROM parts", "supplement": ""}], "entire_SQL": "SELECT parts.chargeable_amount FROM parts", "original explanations": [{"explanation": [{"explanation": "Get the chargeable amount FROM TABLE parts", "subexpression": "SELECT parts.chargeable_amount FROM parts"}], "number": "Start first query,", "subquery": "SELECT parts.chargeable_amount FROM parts", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the chargeable amount FROM TABLE parts", "subexpression": "SELECT parts.chargeable_amount FROM parts"}, {"explanation": "", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT parts.chargeable_amount FROM parts", "supplement": ""}], "duration": 151.97935128211975, "time": "2022-11-03 03:26:51"}
{"question": "show me the name", "dbid": "assets_maintenance", "TBid": "maintenance_engineers", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the chargeable amount FROM TABLE parts", "subexpression": "SELECT parts.chargeable_amount FROM parts"}], "number": "Start first query,", "subquery": "SELECT parts.chargeable_amount FROM parts", "supplement": ""}], "entire_SQL": "SELECT parts.chargeable_amount FROM parts", "original explanations": [{"explanation": [{"explanation": "Get the chargeable amount FROM TABLE parts", "subexpression": "SELECT parts.chargeable_amount FROM parts"}], "number": "Start first query,", "subquery": "SELECT parts.chargeable_amount FROM parts", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the chargeable amount FROM TABLE parts", "subexpression": "SELECT parts.chargeable_amount FROM parts"}], "number": "Start first query,", "subquery": "SELECT parts.chargeable_amount FROM parts", "supplement": ""}], "duration": 24.36370325088501, "time": "2022-11-03 03:27:16"}
{"question": "show me the name", "dbid": "battle_death", "TBid": "battle", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the name FROM TABLE battle and TABLE ship", "subexpression": "SELECT battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}], "number": "Start first query,", "subquery": "SELECT battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle", "supplement": ""}], "entire_SQL": "SELECT battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle", "original explanations": [{"explanation": [{"explanation": "Get the name FROM TABLE battle and TABLE ship", "subexpression": "SELECT battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}], "number": "Start first query,", "subquery": "SELECT battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the name FROM TABLE battle and TABLE ship", "subexpression": "SELECT battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "show me everythign", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle", "supplement": ""}], "duration": 11.66234040260315, "time": "2022-11-03 19:12:14"}
{"question": "show me the name", "dbid": "assets_maintenance", "TBid": "engineer_skills", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the chargeable amount FROM TABLE parts", "subexpression": "SELECT parts.chargeable_amount FROM parts"}], "number": "Start first query,", "subquery": "SELECT parts.chargeable_amount FROM parts", "supplement": ""}], "entire_SQL": "SELECT parts.chargeable_amount FROM parts", "original explanations": [{"explanation": [{"explanation": "Get the chargeable amount FROM TABLE parts", "subexpression": "SELECT parts.chargeable_amount FROM parts"}], "number": "Start first query,", "subquery": "SELECT parts.chargeable_amount FROM parts", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the skill id FROM TABLE parts", "subexpression": "SELECT parts.chargeable_amount FROM parts"}], "number": "Start first query,", "subquery": "SELECT parts.chargeable_amount FROM parts", "supplement": ""}], "duration": 59.03760647773743, "time": "2022-11-03 19:34:17"}
{"question": "What are the names, countries, and ages for every singer in descending order of age?", "dbid": "concert_singer", "TBid": "singer", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the name, the country, and the age FROM TABLE singer", "subexpression": "SELECT singer.name , singer.country , singer.age FROM singer"}, {"explanation": "Sort the results in descending ORDER based on the age of singer", "subexpression": "ORDER BY singer.age DESC"}], "number": "Start first query,", "subquery": "SELECT singer.name , singer.country , singer.age FROM singer ORDER BY singer.age DESC", "supplement": ""}], "entire_SQL": "SELECT singer.name , singer.country , singer.age FROM singer ORDER BY singer.age DESC", "original explanations": [{"explanation": [{"explanation": "Get the name, the country, and the age FROM TABLE singer", "subexpression": "SELECT singer.name , singer.country , singer.age FROM singer"}, {"explanation": "Sort the results in descending ORDER based on the age of singer", "subexpression": "ORDER BY singer.age DESC"}], "number": "Start first query,", "subquery": "SELECT singer.name , singer.country , singer.age FROM singer ORDER BY singer.age DESC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the gender, name, the country, and the age FROM TABLE singer", "subexpression": "SELECT singer.name , singer.country , singer.age FROM singer"}, {"explanation": "Sort the results in descending ORDER based on the age of singer", "subexpression": "ORDER BY singer.age DESC"}], "number": "Start first query,", "subquery": "SELECT singer.name , singer.country , singer.age FROM singer ORDER BY singer.age DESC", "supplement": ""}], "duration": 66.08871674537659, "time": "2022-11-03 21:22:43"}
{"question": "asfas", "dbid": "assets_maintenance", "TBid": "fault_log_parts", "previous_generated_explanation": [{"explanation": [{"explanation": "Get the chargeable amount FROM TABLE parts", "subexpression": "SELECT parts.chargeable_amount FROM parts"}], "number": "Start first query,", "subquery": "SELECT parts.chargeable_amount FROM parts", "supplement": ""}], "entire_SQL": "SELECT parts.chargeable_amount FROM parts", "original explanations": [{"explanation": [{"explanation": "Get the chargeable amount FROM TABLE parts", "subexpression": "SELECT parts.chargeable_amount FROM parts"}], "number": "Start first query,", "subquery": "SELECT parts.chargeable_amount FROM parts", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Get the chargeable amount FROM TABLE parts", "subexpression": "SELECT parts.chargeable_amount FROM parts"}], "number": "Start first query,", "subquery": "SELECT parts.chargeable_amount FROM parts", "supplement": ""}], "duration": 34.326114892959595, "time": "2022-11-07 23:25:37"}
{"question": "Find the first name and gender of student who have more than one pet.", "dbid": "pets_1", "TBid": "has_pet", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "entire_SQL": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT( * ) > 1", "original explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 2", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "duration": 16.354912519454956, "time": "2022-12-18 01:45:00"}
{"question": "Find the first name and gender of student who have more than one pet.", "dbid": "pets_1", "TBid": "pets", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "entire_SQL": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT( * ) > 1", "original explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 2", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "duration": 12.535902976989746, "time": "2022-12-18 01:49:53"}
{"question": "Find the first name and gender of student who have more than one pet.", "dbid": "pets_1", "TBid": "pets", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "entire_SQL": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT( * ) > 1", "original explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 2", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "duration": 10.565261602401733, "time": "2022-12-18 02:07:11"}
{"question": "Find the first name and gender of student who have more than one pet.", "dbid": "pets_1", "TBid": "pets", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "entire_SQL": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT( * ) > 1", "original explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 2", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "duration": 4.639171361923218, "time": "2022-12-18 02:13:53"}
{"question": "Find the first name and gender of student who have more than one pet.", "dbid": "pets_1", "TBid": "pets", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "entire_SQL": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT( * ) > 1", "original explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 2", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "duration": 3.4495251178741455, "time": "2022-12-18 02:16:22"}
{"question": "Find the first name and gender of student who have more than one pet.", "dbid": "pets_1", "TBid": "pets", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "entire_SQL": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT( * ) > 1", "original explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 2", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "duration": 3.6487014293670654, "time": "2022-12-18 02:17:55"}
{"question": "Find the first name and gender of student who have more than one pet.", "dbid": "pets_1", "TBid": "pets", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "entire_SQL": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT( * ) > 1", "original explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 2", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "duration": 5.331299304962158, "time": "2022-12-18 02:18:01"}
{"question": "Find the first name and gender of student who have more than one pet.", "dbid": "pets_1", "TBid": "pets", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "entire_SQL": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT( * ) > 1", "original explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 2", "subexpression": "HAVING COUNT ( * ) > 2"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "duration": 183.1933479309082, "time": "2022-12-18 02:21:04"}
{"question": "Find the first name and gender of student who have more than one pet.", "dbid": "pets_1", "TBid": "pets", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "entire_SQL": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT( * ) > 1", "original explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 1"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "duration": 4.007015705108643, "time": "2022-12-18 02:21:08"}
{"question": "Find the first name and gender of student who have more than one pet.", "dbid": "pets_1", "TBid": "pets", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "entire_SQL": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT( * ) > 1", "original explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 1"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "duration": 8.004245519638062, "time": "2022-12-18 02:21:16"}
{"question": "Find the first name and gender of student who have more than one pet.", "dbid": "pets_1", "TBid": "pets", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "entire_SQL": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT( * ) > 1", "original explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "duration": 16.075153350830078, "time": "2022-12-18 02:21:32"}
{"question": "Find the first name and gender of student who have more than one pet.", "dbid": "pets_1", "TBid": "pets", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "entire_SQL": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT( * ) > 1", "original explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 2", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "duration": 8.422155857086182, "time": "2022-12-18 02:23:45"}
{"question": "Find the first name and gender of student who have more than one pet.", "dbid": "pets_1", "TBid": "pets", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "entire_SQL": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT( * ) > 1", "original explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 2", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "duration": 3.982144594192505, "time": "2022-12-18 03:08:25"}
{"question": "Find the first name and gender of student who have more than one pet.", "dbid": "pets_1", "TBid": "pets", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 2", "subexpression": "HAVING COUNT ( * ) > 2"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 2", "supplement": ""}], "entire_SQL": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 2", "original explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 2", "subexpression": "HAVING COUNT ( * ) > 2"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 2", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 2"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 2", "supplement": ""}], "duration": 4.954608201980591, "time": "2022-12-18 03:08:30"}
{"question": "Find the first name and gender of student who have more than one pet.", "dbid": "pets_1", "TBid": "pets", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "entire_SQL": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "original explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Group the records based on the stuid of has pet", "subexpression": "GROUP BY has_pet.stuid"}, {"explanation": "Keep the groups where the number of records is greater than 1", "subexpression": "HAVING COUNT ( * ) > 1"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY has_pet.stuid HAVING COUNT ( * ) > 1", "supplement": ""}], "duration": 21.259735822677612, "time": "2022-12-18 03:08:51"}
{"question": "Find the first name and gender of student who have more than one pet.", "dbid": "pets_1", "TBid": "student", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid", "supplement": ""}], "entire_SQL": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid", "original explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Return the fname of student and the sex of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "keep the record that major is less than 50", "subexpression": "..."}, {"explanation": "Return the age of student", "subexpression": "SELECT student.fname , student.sex"}], "number": "Start first query,", "subquery": "SELECT student.fname , student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid", "supplement": ""}], "duration": 61.80376839637756, "time": "2022-12-18 03:09:53"}
{"question": "Find the first name and gender of student who have more than one pet.", "dbid": "pets_1", "TBid": "student", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Keep the records WHERE the major of student is less than 50", "subexpression": "WHERE student.major < 50"}, {"explanation": "Return the age of student", "subexpression": "SELECT student.age"}], "number": "Start first query,", "subquery": "SELECT student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.major < 50", "supplement": ""}], "entire_SQL": "SELECT student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.major<50", "original explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Keep the records WHERE the major of student is less than 50", "subexpression": "WHERE student.major < 50"}, {"explanation": "Return the age of student", "subexpression": "SELECT student.age"}], "number": "Start first query,", "subquery": "SELECT student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.major < 50", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Keep the records WHERE the major of student is 50", "subexpression": "WHERE student.major < 50"}, {"explanation": "Return the age of student", "subexpression": "SELECT student.age"}], "number": "Start first query,", "subquery": "SELECT student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.major < 50", "supplement": ""}], "duration": 15.020622968673706, "time": "2022-12-18 03:10:09"}
{"question": "Find the first name and gender of student who have more than one pet.", "dbid": "pets_1", "TBid": "student", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Keep the records WHERE the major of student is 50", "subexpression": "WHERE student.major = 50"}, {"explanation": "Return the age of student", "subexpression": "SELECT student.age"}], "number": "Start first query,", "subquery": "SELECT student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.major = 50", "supplement": ""}], "entire_SQL": "SELECT student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.major = 50", "original explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Keep the records WHERE the major of student is 50", "subexpression": "WHERE student.major = 50"}, {"explanation": "Return the age of student", "subexpression": "SELECT student.age"}], "number": "Start first query,", "subquery": "SELECT student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.major = 50", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Keep the records WHERE the lname Tai", "subexpression": "WHERE student.major = 50"}, {"explanation": "Return the age of student", "subexpression": "SELECT student.age"}], "number": "Start first query,", "subquery": "SELECT student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.major = 50", "supplement": ""}], "duration": 38.75585651397705, "time": "2022-12-18 03:10:48"}
{"question": "Find the first name and gender of student who have more than one pet.", "dbid": "pets_1", "TBid": "student", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Return the lname of student", "subexpression": "SELECT student.lname"}], "number": "Start first query,", "subquery": "SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid", "supplement": ""}], "entire_SQL": "SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid", "original explanations": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Return the lname of student", "subexpression": "SELECT student.lname"}], "number": "Start first query,", "subquery": "SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE student ", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Return the age of student", "subexpression": "SELECT student.lname"}], "number": "Start first query,", "subquery": "SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid", "supplement": ""}], "duration": 31.198081254959106, "time": "2022-12-18 03:11:19"}
{"question": "Find the first name and gender of student who have more than one pet.", "dbid": "pets_1", "TBid": "student", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Return the lname of student", "subexpression": "SELECT student.lname"}], "number": "Start first query,", "subquery": "SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid", "supplement": ""}], "entire_SQL": "SELECT student.age", "original explanations": [{"explanation": [{"explanation": "In TABLE student ", "subexpression": "student"}, {"explanation": "Return the age of student", "subexpression": "SELECT student.age"}], "number": "Start first query,", "subquery": "SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE student ", "subexpression": "student"}, {"explanation": "Return the age of student", "subexpression": "SELECT student.age"}], "number": "Start first query,", "subquery": "SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid", "supplement": ""}], "duration": 6.44265604019165, "time": "2022-12-18 03:11:25"}
{"question": "Find the first name and gender of student who have more than one pet.", "dbid": "pets_1", "TBid": "student", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Return the lname of student", "subexpression": "SELECT student.lname"}], "number": "Start first query,", "subquery": "SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid", "supplement": ""}], "entire_SQL": "SELECT student.age", "original explanations": [{"explanation": [{"explanation": "In TABLE student ", "subexpression": "student"}, {"explanation": "Return the age of student", "subexpression": "SELECT student.age"}], "number": "Start first query,", "subquery": "SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE student ", "subexpression": "student"}, {"explanation": "Return the age of student", "subexpression": "SELECT student.age"}], "number": "Start first query,", "subquery": "SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid", "supplement": ""}], "duration": 0.6035065650939941, "time": "2022-12-18 03:11:26"}
{"question": "Find the first name and gender of student who have more than one pet.", "dbid": "pets_1", "TBid": "student", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Return the lname of student", "subexpression": "SELECT student.lname"}], "number": "Start first query,", "subquery": "SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid", "supplement": ""}], "entire_SQL": "SELECT student.age", "original explanations": [{"explanation": [{"explanation": "In TABLE student ", "subexpression": "student"}, {"explanation": "Return the age of student", "subexpression": "SELECT student.age"}], "number": "Start first query,", "subquery": "SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE student ", "subexpression": "student"}, {"explanation": "Return the age of student", "subexpression": "SELECT student.age"}], "number": "Start first query,", "subquery": "SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid", "supplement": ""}], "duration": 0.1620469093322754, "time": "2022-12-18 03:11:26"}
{"question": "Find the first name and gender of student who have more than one pet.", "dbid": "pets_1", "TBid": "student", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Return the lname of student", "subexpression": "SELECT student.lname"}], "number": "Start first query,", "subquery": "SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid", "supplement": ""}], "entire_SQL": "SELECT student.age", "original explanations": [{"explanation": [{"explanation": "In TABLE student ", "subexpression": "student"}, {"explanation": "Return the age of student", "subexpression": "SELECT student.age"}], "number": "Start first query,", "subquery": "SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE student ", "subexpression": "student"}, {"explanation": "Return the age of student", "subexpression": "SELECT student.age"}], "number": "Start first query,", "subquery": "SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid", "supplement": ""}], "duration": 0.11282539367675781, "time": "2022-12-18 03:11:27"}
{"question": "Find the first name and gender of student who have more than one pet.", "dbid": "pets_1", "TBid": "student", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE student and TABLE has pet", "subexpression": "FROM student JOIN has_pet ON student.stuid = has_pet.stuid"}, {"explanation": "Return the lname of student", "subexpression": "SELECT student.lname"}], "number": "Start first query,", "subquery": "SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid", "supplement": ""}], "entire_SQL": "SELECT student.age", "original explanations": [{"explanation": [{"explanation": "In TABLE student ", "subexpression": "student"}, {"explanation": "Return the age of student", "subexpression": "SELECT student.age"}], "number": "Start first query,", "subquery": "SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE student ", "subexpression": "student"}, {"explanation": "Return the age of student", "subexpression": "SELECT student.age"}], "number": "Start first query,", "subquery": "SELECT student.lname FROM student JOIN has_pet ON student.stuid = has_pet.stuid", "supplement": ""}], "duration": 0.11862492561340332, "time": "2022-12-18 03:11:27"}
{"question": "show me everything", "dbid": "battle_death", "TBid": "death", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE ship", "subexpression": "FROM ship"}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM ship", "supplement": ""}], "entire_SQL": "SELECT * FROM ship", "original explanations": [{"explanation": [{"explanation": "In TABLE ship", "subexpression": "FROM ship"}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM ship", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM ship", "supplement": ""}], "duration": 30.589090824127197, "time": "2022-12-19 02:03:02"}
{"question": "show me everything", "dbid": "battle_death", "TBid": "death", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE ship", "subexpression": "FROM ship"}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM ship", "supplement": ""}], "entire_SQL": "SELECT *", "original explanations": [{"explanation": [{"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM ship", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM ship", "supplement": ""}], "duration": 6.86134147644043, "time": "2022-12-19 02:03:09"}
{"question": "show me id", "dbid": "behavior_monitoring", "TBid": "student_addresses", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE teachers and TABLE students", "subexpression": "FROM teachers JOIN students ON teachers.address_id = students.student_id"}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM teachers JOIN students ON teachers.address_id = students.student_id", "supplement": ""}], "entire_SQL": "SELECT students.first_name FROM teachers JOIN students ON teachers.address_id = students.student_id", "original explanations": [{"explanation": [{"explanation": "In TABLE teachers and TABLE students", "subexpression": "FROM teachers JOIN students ON teachers.address_id = students.student_id"}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM teachers JOIN students ON teachers.address_id = students.student_id", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE teachers and TABLE students", "subexpression": "FROM teachers JOIN students ON teachers.address_id = students.student_id"}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM teachers JOIN students ON teachers.address_id = students.student_id", "supplement": ""}], "duration": 37.75132775306702, "time": "2022-12-19 17:12:22"}
{"question": "show me id", "dbid": "behavior_monitoring", "TBid": "student_addresses", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE teachers and TABLE students", "subexpression": "FROM teachers JOIN students ON teachers.address_id = students.student_id"}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM teachers JOIN students ON teachers.address_id = students.student_id", "supplement": ""}], "entire_SQL": "SELECT students.first_name FROM teachers JOIN students ON teachers.address_id = students.student_id", "original explanations": [{"explanation": [{"explanation": "In TABLE teachers and TABLE students", "subexpression": "FROM teachers JOIN students ON teachers.address_id = students.student_id"}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM teachers JOIN students ON teachers.address_id = students.student_id", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE teachers and TABLE students", "subexpression": "FROM teachers JOIN students ON teachers.address_id = students.student_id"}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM teachers JOIN students ON teachers.address_id = students.student_id", "supplement": ""}], "duration": 59.76517415046692, "time": "2022-12-19 17:13:22"}
{"question": "show me id", "dbid": "battle_death", "TBid": "death", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE battle", "subexpression": "FROM battle"}, {"explanation": "Return the id of battle", "subexpression": "SELECT battle.id"}], "number": "Start first query,", "subquery": "SELECT battle.id FROM battle", "supplement": ""}], "entire_SQL": "SELECT battle.id FROM battle", "original explanations": [{"explanation": [{"explanation": "In TABLE battle", "subexpression": "FROM battle"}, {"explanation": "Return the id of battle", "subexpression": "SELECT battle.id"}], "number": "Start first query,", "subquery": "SELECT battle.id FROM battle", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE battle", "subexpression": "FROM battle"}, {"explanation": "Return the id of battle", "subexpression": "SELECT battle.id"}], "number": "Start first query,", "subquery": "SELECT battle.id FROM battle", "supplement": ""}], "duration": 3.1025230884552, "time": "2022-12-19 17:14:32"}
{"question": "show me id", "dbid": "battle_death", "TBid": "death", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE battle", "subexpression": "FROM battle"}, {"explanation": "Return the id of battle", "subexpression": "SELECT battle.id"}], "number": "Start first query,", "subquery": "SELECT battle.id FROM battle", "supplement": ""}], "entire_SQL": "SELECT battle.id FROM battle", "original explanations": [{"explanation": [{"explanation": "In TABLE battle", "subexpression": "FROM battle"}, {"explanation": "Return the id of battle", "subexpression": "SELECT battle.id"}], "number": "Start first query,", "subquery": "SELECT battle.id FROM battle", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE battle", "subexpression": "FROM battle"}, {"explanation": "Return the id of battle", "subexpression": "SELECT battle.id"}], "number": "Start first query,", "subquery": "SELECT battle.id FROM battle", "supplement": ""}], "duration": 34.22126650810242, "time": "2022-12-19 17:15:07"}
{"question": "show me date", "dbid": "bike_1", "TBid": "weather", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE weather", "subexpression": "FROM weather"}, {"explanation": "Return the date of weather", "subexpression": "SELECT weather.date"}], "number": "Start first query,", "subquery": "SELECT weather.date FROM weather", "supplement": ""}], "entire_SQL": "SELECT weather.date FROM weather", "original explanations": [{"explanation": [{"explanation": "In TABLE weather", "subexpression": "FROM weather"}, {"explanation": "Return the date of weather", "subexpression": "SELECT weather.date"}], "number": "Start first query,", "subquery": "SELECT weather.date FROM weather", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE weather", "subexpression": "FROM weather"}, {"explanation": "Return the date of weather and max humidity", "subexpression": "SELECT weather.date"}], "number": "Start first query,", "subquery": "SELECT weather.date FROM weather", "supplement": ""}], "duration": 19.99275493621826, "time": "2022-12-22 03:59:04"}
{"question": "show me location", "dbid": "architecture", "TBid": "mill", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE bridge", "subexpression": "FROM bridge"}, {"explanation": "Return the location of bridge", "subexpression": "SELECT bridge.location"}], "number": "Start first query,", "subquery": "SELECT bridge.location FROM bridge", "supplement": ""}], "entire_SQL": "SELECT bridge.location FROM bridge", "original explanations": [{"explanation": [{"explanation": "In TABLE bridge", "subexpression": "FROM bridge"}, {"explanation": "Return the location of bridge", "subexpression": "SELECT bridge.location"}], "number": "Start first query,", "subquery": "SELECT bridge.location FROM bridge", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE bridge", "subexpression": "FROM bridge"}, {"explanation": "keep the id is less than 3", "subexpression": "..."}, {"explanation": "Return the location of bridge", "subexpression": "SELECT bridge.location"}], "number": "Start first query,", "subquery": "SELECT bridge.location FROM bridge", "supplement": ""}], "duration": 20.994534254074097, "time": "2022-12-22 06:11:20"}
{"question": "show me location", "dbid": "architecture", "TBid": "mill", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE bridge", "subexpression": "FROM bridge"}, {"explanation": "Keep the records WHERE the id of architect is less than 3", "subexpression": "WHERE architect.id < 3"}, {"explanation": "Return the location of bridge", "subexpression": "SELECT bridge.location"}], "number": "Start first query,", "subquery": "SELECT bridge.location FROM bridge WHERE architect.id < 3", "supplement": ""}], "entire_SQL": "SELECT bridge.location FROM bridge WHERE architect.id<3", "original explanations": [{"explanation": [{"explanation": "In TABLE bridge", "subexpression": "FROM bridge"}, {"explanation": "Keep the records WHERE the id of architect is less than 3", "subexpression": "WHERE architect.id < 3"}, {"explanation": "Return the location of bridge", "subexpression": "SELECT bridge.location"}], "number": "Start first query,", "subquery": "SELECT bridge.location FROM bridge WHERE architect.id < 3", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE bridge", "subexpression": "FROM bridge"}, {"explanation": "Keep the records WHERE the id of mill is less than 3", "subexpression": "WHERE architect.id < 3"}, {"explanation": "Return the location of bridge", "subexpression": "SELECT bridge.location"}], "number": "Start first query,", "subquery": "SELECT bridge.location FROM bridge WHERE architect.id < 3", "supplement": ""}], "duration": 40.198810338974, "time": "2022-12-22 06:12:01"}
{"question": "show me location", "dbid": "architecture", "TBid": "mill", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE bridge", "subexpression": "FROM bridge"}, {"explanation": "Keep the records WHERE the id of mill is less than 3", "subexpression": "WHERE mill.id < 3"}, {"explanation": "Return the location of bridge", "subexpression": "SELECT bridge.location"}], "number": "Start first query,", "subquery": "SELECT bridge.location FROM bridge WHERE mill.id < 3", "supplement": ""}], "entire_SQL": "SELECT bridge.location FROM bridge WHERE mill.id < 3", "original explanations": [{"explanation": [{"explanation": "In TABLE bridge", "subexpression": "FROM bridge"}, {"explanation": "Keep the records WHERE the id of mill is less than 3", "subexpression": "WHERE mill.id < 3"}, {"explanation": "Return the location of bridge", "subexpression": "SELECT bridge.location"}], "number": "Start first query,", "subquery": "SELECT bridge.location FROM bridge WHERE mill.id < 3", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE bridge", "subexpression": "FROM bridge"}, {"explanation": "Keep the records WHERE the id of mill is less t", "subexpression": "WHERE mill.id < 3"}, {"explanation": "Return the location of bridge", "subexpression": "SELECT bridge.location"}], "number": "Start first query,", "subquery": "SELECT bridge.location FROM bridge WHERE mill.id < 3", "supplement": ""}], "duration": 30.855534076690674, "time": "2022-12-22 06:12:32"}
{"question": "show me location", "dbid": "architecture", "TBid": "mill", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE bridge", "subexpression": "FROM bridge"}, {"explanation": "Sort the records in descending ORDER based on the id of architect", "subexpression": "ORDER BY architect.id DESC"}, {"explanation": "Return the location of bridge", "subexpression": "SELECT bridge.location"}], "number": "Start first query,", "subquery": "SELECT bridge.location FROM bridge ORDER BY architect.id DESC", "supplement": ""}], "entire_SQL": "SELECT bridge.location FROM bridge ORDER BY architect.id DESC", "original explanations": [{"explanation": [{"explanation": "In TABLE bridge", "subexpression": "FROM bridge"}, {"explanation": "Sort the records in descending ORDER based on the id of architect", "subexpression": "ORDER BY architect.id DESC"}, {"explanation": "Return the location of bridge", "subexpression": "SELECT bridge.location"}], "number": "Start first query,", "subquery": "SELECT bridge.location FROM bridge ORDER BY architect.id DESC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE bridge", "subexpression": "FROM bridge"}, {"explanation": "keep the records where the id of mill is 3", "subexpression": "ORDER BY architect.id DESC"}, {"explanation": "Return the location of bridge", "subexpression": "SELECT bridge.location"}], "number": "Start first query,", "subquery": "SELECT bridge.location FROM bridge ORDER BY architect.id DESC", "supplement": ""}], "duration": 12.183938026428223, "time": "2022-12-22 06:12:45"}
{"question": "show me location", "dbid": "architecture", "TBid": "bridge", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE bridge", "subexpression": "FROM bridge"}, {"explanation": "Keep the records WHERE the id of mill is 3", "subexpression": "WHERE mill.id = 3"}, {"explanation": "Return the location of bridge", "subexpression": "SELECT bridge.location"}], "number": "Start first query,", "subquery": "SELECT bridge.location FROM bridge WHERE mill.id = 3", "supplement": ""}], "entire_SQL": "SELECT bridge.location FROM bridge WHERE mill.id = 3", "original explanations": [{"explanation": [{"explanation": "In TABLE bridge", "subexpression": "FROM bridge"}, {"explanation": "Keep the records WHERE the id of mill is 3", "subexpression": "WHERE mill.id = 3"}, {"explanation": "Return the location of bridge", "subexpression": "SELECT bridge.location"}], "number": "Start first query,", "subquery": "SELECT bridge.location FROM bridge WHERE mill.id = 3", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE bridge", "subexpression": "FROM bridge"}, {"explanation": "Keep the records WHERE the id of bridge is 3", "subexpression": "WHERE mill.id = 3"}, {"explanation": "Return the location of bridge", "subexpression": "SELECT bridge.location"}], "number": "Start first query,", "subquery": "SELECT bridge.location FROM bridge WHERE mill.id = 3", "supplement": ""}], "duration": 24.25112795829773, "time": "2022-12-22 06:13:09"}
{"question": "show me the student name and id whose age is greater than 22", "dbid": "aircraft", "TBid": "pilot", "previous_generated_explanation": [{"explanation": [{"explanation": "In TABLE pilot and TABLE match", "subexpression": "FROM pilot JOIN match ON pilot.pilot_id = match.winning_pilot"}, {"explanation": "Keep the records WHERE the age of pilot is greater than 22", "subexpression": "WHERE pilot.age > 22"}, {"explanation": "Return the name of pilot and the pilot id of pilot", "subexpression": "SELECT pilot.name , pilot.pilot_id"}], "number": "Start first query,", "subquery": "SELECT pilot.name , pilot.pilot_id FROM pilot JOIN match ON pilot.pilot_id = match.winning_pilot WHERE pilot.age > 22", "supplement": ""}], "entire_SQL": "SELECT pilot.name , pilot.pilot_id FROM pilot JOIN match ON pilot.pilot_id = match.winning_pilot WHERE pilot.age > 22", "original explanations": [{"explanation": [{"explanation": "In TABLE pilot and TABLE match", "subexpression": "FROM pilot JOIN match ON pilot.pilot_id = match.winning_pilot"}, {"explanation": "Keep the records WHERE the age of pilot is greater than 22", "subexpression": "WHERE pilot.age > 22"}, {"explanation": "Return the name of pilot and the pilot id of pilot", "subexpression": "SELECT pilot.name , pilot.pilot_id"}], "number": "Start first query,", "subquery": "SELECT pilot.name , pilot.pilot_id FROM pilot JOIN match ON pilot.pilot_id = match.winning_pilot WHERE pilot.age > 22", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In TABLE pilot and TABLE match", "subexpression": "FROM pilot JOIN match ON pilot.pilot_id = match.winning_pilot"}, {"explanation": "Keep the records WHERE the age of pilot is greater than 22", "subexpression": "WHERE pilot.age > 22"}, {"explanation": "Return the name of pilot and the pilot id of pilot", "subexpression": "SELECT pilot.name , pilot.pilot_id"}], "number": "Start first query,", "subquery": "SELECT pilot.name , pilot.pilot_id FROM pilot JOIN match ON pilot.pilot_id = match.winning_pilot WHERE pilot.age > 22", "supplement": ""}], "duration": 1.0156257152557373, "time": "2022-12-22 20:59:46"}
{"question": "show me id", "dbid": "apartment_rentals", "TBid": "apartment bookings", "previous_generated_explanation": [{"explanation": [{"explanation": "In table apartment bookings", "subexpression": "FROM apartment_bookings"}, {"explanation": "Return the apt id of apartment bookings", "subexpression": "SELECT apartment_bookings.apt_id"}], "number": "Start first query,", "subquery": "SELECT apartment_bookings.apt_id FROM apartment_bookings", "supplement": ""}], "entire_SQL": "SELECT apartment_bookings.apt_id FROM apartment_bookings", "original explanations": [{"explanation": [{"explanation": "In table apartment bookings", "subexpression": "FROM apartment_bookings"}, {"explanation": "Return the apt id of apartment bookings", "subexpression": "SELECT apartment_bookings.apt_id"}], "number": "Start first query,", "subquery": "SELECT apartment_bookings.apt_id FROM apartment_bookings", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table apartment bookings", "subexpression": "FROM apartment_bookings"}, {"explanation": "keep the records where the id is greater than 5", "subexpression": "..."}, {"explanation": "Return the apt id of apartment bookings", "subexpression": "SELECT apartment_bookings.apt_id"}], "number": "Start first query,", "subquery": "SELECT apartment_bookings.apt_id FROM apartment_bookings", "supplement": ""}], "duration": 71.597825050354, "time": "2022-12-27 05:34:56"}
{"question": "show me id", "dbid": "apartment_rentals", "TBid": "apartment bookings", "previous_generated_explanation": [{"explanation": [{"explanation": "In table apartment bookings", "subexpression": "FROM apartment_bookings"}, {"explanation": "Keep the records WHERE the building id of apartment buildings is greater than 5 AND the building id of apartment buildings is less than 5", "subexpression": "WHERE apartment_buildings.building_id > 5 AND apartment_buildings.building_id < 5"}, {"explanation": "Return the apt id of apartment bookings", "subexpression": "SELECT apartment_bookings.apt_id"}], "number": "Start first query,", "subquery": "SELECT apartment_bookings.apt_id FROM apartment_bookings WHERE apartment_buildings.building_id > 5 AND apartment_buildings.building_id < 5", "supplement": ""}], "entire_SQL": "SELECT apartment_bookings.apt_id FROM apartment_bookings WHERE apartment_buildings.building_id > 5 AND apartment_buildings.building_id<5", "original explanations": [{"explanation": [{"explanation": "In table apartment bookings", "subexpression": "FROM apartment_bookings"}, {"explanation": "Keep the records WHERE the building id of apartment buildings is greater than 5 AND the building id of apartment buildings is less than 5", "subexpression": "WHERE apartment_buildings.building_id > 5 AND apartment_buildings.building_id < 5"}, {"explanation": "Return the apt id of apartment bookings", "subexpression": "SELECT apartment_bookings.apt_id"}], "number": "Start first query,", "subquery": "SELECT apartment_bookings.apt_id FROM apartment_bookings WHERE apartment_buildings.building_id > 5 AND apartment_buildings.building_id < 5", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table apartment bookings", "subexpression": "FROM apartment_bookings"}, {"explanation": "Keep the records WHERE the building id of apartment buildings is greater than 5", "subexpression": "WHERE apartment_buildings.building_id > 5 AND apartment_buildings.building_id < 5"}, {"explanation": "Return the apt id of apartment bookings", "subexpression": "SELECT apartment_bookings.apt_id"}], "number": "Start first query,", "subquery": "SELECT apartment_bookings.apt_id FROM apartment_bookings WHERE apartment_buildings.building_id > 5 AND apartment_buildings.building_id < 5", "supplement": ""}], "duration": 42.69793462753296, "time": "2022-12-27 05:35:39"}
{"question": "show me id", "dbid": "apartment_rentals", "TBid": "apartment buildings", "previous_generated_explanation": [{"explanation": [{"explanation": "In table apartment bookings", "subexpression": "FROM apartment_bookings"}, {"explanation": "Keep the records WHERE the building id of apartment buildings is greater than 5", "subexpression": "WHERE apartment_buildings.building_id > 5"}, {"explanation": "Return the apt id of apartment bookings", "subexpression": "SELECT apartment_bookings.apt_id"}], "number": "Start first query,", "subquery": "SELECT apartment_bookings.apt_id FROM apartment_bookings WHERE apartment_buildings.building_id > 5", "supplement": ""}], "entire_SQL": "SELECT apartment_bookings.apt_id FROM apartment_bookings WHERE apartment_buildings.building_id > 5", "original explanations": [{"explanation": [{"explanation": "In table apartment bookings", "subexpression": "FROM apartment_bookings"}, {"explanation": "Keep the records WHERE the building id of apartment buildings is greater than 5", "subexpression": "WHERE apartment_buildings.building_id > 5"}, {"explanation": "Return the apt id of apartment bookings", "subexpression": "SELECT apartment_bookings.apt_id"}], "number": "Start first query,", "subquery": "SELECT apartment_bookings.apt_id FROM apartment_bookings WHERE apartment_buildings.building_id > 5", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table apartment bookings", "subexpression": "FROM apartment_bookings"}, {"explanation": "Keep the records WHERE the building id of apartment buildings is 5", "subexpression": "WHERE apartment_buildings.building_id > 5"}, {"explanation": "Return the apt id of apartment bookings", "subexpression": "SELECT apartment_bookings.apt_id"}], "number": "Start first query,", "subquery": "SELECT apartment_bookings.apt_id FROM apartment_bookings WHERE apartment_buildings.building_id > 5", "supplement": ""}], "duration": 16.93965792655945, "time": "2022-12-27 05:35:57"}
{"question": "show me id", "dbid": "apartment_rentals", "TBid": "apartment buildings", "previous_generated_explanation": [{"explanation": [{"explanation": "In table apartment bookings", "subexpression": "FROM apartment_bookings"}, {"explanation": "Keep the records WHERE the building id of apartment buildings is 5", "subexpression": "WHERE apartment_buildings.building_id = 5"}, {"explanation": "Return the apt id of apartment bookings", "subexpression": "SELECT apartment_bookings.apt_id"}], "number": "Start first query,", "subquery": "SELECT apartment_bookings.apt_id FROM apartment_bookings WHERE apartment_buildings.building_id = 5", "supplement": ""}], "entire_SQL": "SELECT apartment_bookings.apt_id FROM apartment_bookings WHERE apartment_buildings.building_id = 5", "original explanations": [{"explanation": [{"explanation": "In table apartment bookings", "subexpression": "FROM apartment_bookings"}, {"explanation": "Keep the records WHERE the building id of apartment buildings is 5", "subexpression": "WHERE apartment_buildings.building_id = 5"}, {"explanation": "Return the apt id of apartment bookings", "subexpression": "SELECT apartment_bookings.apt_id"}], "number": "Start first query,", "subquery": "SELECT apartment_bookings.apt_id FROM apartment_bookings WHERE apartment_buildings.building_id = 5", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table apartment bookings", "subexpression": "FROM apartment_bookings"}, {"explanation": "Keep the records WHERE the building id of apartment buildings is \"5\"", "subexpression": "WHERE apartment_buildings.building_id = 5"}, {"explanation": "Return the apt id of apartment bookings", "subexpression": "SELECT apartment_bookings.apt_id"}], "number": "Start first query,", "subquery": "SELECT apartment_bookings.apt_id FROM apartment_bookings WHERE apartment_buildings.building_id = 5", "supplement": ""}], "duration": 7.945777416229248, "time": "2022-12-27 05:36:05"}
{"question": "show me id", "dbid": "apartment_rentals", "TBid": "apartment buildings", "previous_generated_explanation": [{"explanation": [{"explanation": "In table apartment bookings", "subexpression": "FROM apartment_bookings"}, {"explanation": "Keep the records WHERE the building id of apartment buildings is \"5\"", "subexpression": "WHERE apartment_buildings.building_id = \"5\""}, {"explanation": "Return the apt id of apartment bookings", "subexpression": "SELECT apartment_bookings.apt_id"}], "number": "Start first query,", "subquery": "SELECT apartment_bookings.apt_id FROM apartment_bookings WHERE apartment_buildings.building_id = \"5\"", "supplement": ""}], "entire_SQL": "SELECT apartment_bookings.apt_id FROM apartment_bookings WHERE apartment_buildings.building_id = \"5\"", "original explanations": [{"explanation": [{"explanation": "In table apartment bookings", "subexpression": "FROM apartment_bookings"}, {"explanation": "Keep the records WHERE the building id of apartment buildings is \"5\"", "subexpression": "WHERE apartment_buildings.building_id = \"5\""}, {"explanation": "Return the apt id of apartment bookings", "subexpression": "SELECT apartment_bookings.apt_id"}], "number": "Start first query,", "subquery": "SELECT apartment_bookings.apt_id FROM apartment_bookings WHERE apartment_buildings.building_id = \"5\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table apartment bookings", "subexpression": "FROM apartment_bookings"}, {"explanation": "Keep the records WHERE the building id of apartment buildings is \"133\"", "subexpression": "WHERE apartment_buildings.building_id = \"5\""}, {"explanation": "Return the apt id of apartment bookings", "subexpression": "SELECT apartment_bookings.apt_id"}], "number": "Start first query,", "subquery": "SELECT apartment_bookings.apt_id FROM apartment_bookings WHERE apartment_buildings.building_id = \"5\"", "supplement": ""}], "duration": 22.400611639022827, "time": "2022-12-27 05:36:28"}
{"question": "what is the id of data", "dbid": "architecture", "TBid": "bridge", "previous_generated_explanation": [{"explanation": [{"explanation": "In table bridge", "subexpression": "FROM bridge"}, {"explanation": "Keep the records where the id of bridge is \"data\"", "subexpression": "WHERE bridge.id = \"data\""}, {"explanation": "Return the id of bridge", "subexpression": "SELECT bridge.id"}], "number": "Start first query,", "subquery": "SELECT bridge.id FROM bridge WHERE bridge.id = \"data\"", "supplement": ""}], "entire_SQL": "SELECT bridge.id FROM bridge WHERE bridge.id = 'data'", "original explanations": [{"explanation": [{"explanation": "In table bridge", "subexpression": "FROM bridge"}, {"explanation": "Keep the records where the id of bridge is \"data\"", "subexpression": "WHERE bridge.id = \"data\""}, {"explanation": "Return the id of bridge", "subexpression": "SELECT bridge.id"}], "number": "Start first query,", "subquery": "SELECT bridge.id FROM bridge WHERE bridge.id = \"data\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table bridge", "subexpression": "FROM bridge"}, {"explanation": "Keep the records where the id of bridge is 2", "subexpression": "WHERE bridge.id = \"data\""}, {"explanation": "Return the id of bridge", "subexpression": "SELECT bridge.id"}], "number": "Start first query,", "subquery": "SELECT bridge.id FROM bridge WHERE bridge.id = \"data\"", "supplement": ""}], "duration": 18.81934642791748, "time": "2022-12-27 06:52:42"}
{"question": "what is the id of data", "dbid": "architecture", "TBid": "bridge", "previous_generated_explanation": [{"explanation": [{"explanation": "In table bridge", "subexpression": "FROM bridge"}, {"explanation": "Keep the records where the id of bridge is 2", "subexpression": "WHERE bridge.id = 2"}, {"explanation": "Return the id of bridge", "subexpression": "SELECT bridge.id"}], "number": "Start first query,", "subquery": "SELECT bridge.id FROM bridge WHERE bridge.id = 2", "supplement": ""}], "entire_SQL": "SELECT bridge.id FROM bridge WHERE bridge.id = 2", "original explanations": [{"explanation": [{"explanation": "In table bridge", "subexpression": "FROM bridge"}, {"explanation": "Keep the records where the id of bridge is 2", "subexpression": "WHERE bridge.id = 2"}, {"explanation": "Return the id of bridge", "subexpression": "SELECT bridge.id"}], "number": "Start first query,", "subquery": "SELECT bridge.id FROM bridge WHERE bridge.id = 2", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table bridge", "subexpression": "FROM bridge"}, {"explanation": "Keep the records where the id of bridge is 2", "subexpression": "WHERE bridge.id = 2"}, {"explanation": "Return the name of bridge", "subexpression": "SELECT bridge.id"}], "number": "Start first query,", "subquery": "SELECT bridge.id FROM bridge WHERE bridge.id = 2", "supplement": ""}], "duration": 5.913527011871338, "time": "2022-12-27 06:52:48"}
{"question": "what is the id of data", "dbid": "architecture", "TBid": "bridge", "previous_generated_explanation": [{"explanation": [{"explanation": "In table bridge", "subexpression": "FROM bridge"}, {"explanation": "Keep the records where the id of bridge is 2", "subexpression": "WHERE bridge.id = 2"}, {"explanation": "Return the name of brnamege", "subexpression": "SELECT brnamege.name"}], "number": "Start first query,", "subquery": "SELECT brnamege.name FROM bridge WHERE bridge.id = 2", "supplement": ""}], "entire_SQL": "SELECT brnamege.name FROM bridge WHERE bridge.id = 2", "original explanations": [{"explanation": [{"explanation": "In table bridge", "subexpression": "FROM bridge"}, {"explanation": "Keep the records where the id of bridge is 2", "subexpression": "WHERE bridge.id = 2"}, {"explanation": "Return the name of brnamege", "subexpression": "SELECT brnamege.name"}], "number": "Start first query,", "subquery": "SELECT brnamege.name FROM bridge WHERE bridge.id = 2", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table bridge", "subexpression": "FROM bridge"}, {"explanation": "Keep the records where the id of bridge is 2", "subexpression": "WHERE bridge.id = 2"}, {"explanation": "Return the name of bridge", "subexpression": "SELECT brnamege.name"}], "number": "Start first query,", "subquery": "SELECT brnamege.name FROM bridge WHERE bridge.id = 2", "supplement": ""}], "duration": 11.893089056015015, "time": "2022-12-27 06:53:00"}
{"question": "what is the airport id whose airport name is Manchester?", "dbid": "aircraft", "TBid": "airport", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airport", "subexpression": "FROM airport"}, {"explanation": "Keep the records where the airport name of airport is \"Manchester\"", "subexpression": "WHERE airport.airport_name = \"Manchester\""}, {"explanation": "Return the airport id of airport", "subexpression": "SELECT airport.airport_id"}], "number": "Start first query,", "subquery": "SELECT airport.airport_id FROM airport WHERE airport.airport_name = \"Manchester\"", "supplement": ""}], "entire_SQL": "SELECT airport.airport_id FROM airport WHERE airport.airport_name = 'Manchester'", "original explanations": [{"explanation": [{"explanation": "In table airport", "subexpression": "FROM airport"}, {"explanation": "Keep the records where the airport name of airport is \"Manchester\"", "subexpression": "WHERE airport.airport_name = \"Manchester\""}, {"explanation": "Return the airport id of airport", "subexpression": "SELECT airport.airport_id"}], "number": "Start first query,", "subquery": "SELECT airport.airport_id FROM airport WHERE airport.airport_name = \"Manchester\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airport", "subexpression": "FROM airport"}, {"explanation": "Return the airport id of airport", "subexpression": "SELECT airport.airport_id"}], "number": "Start first query,", "subquery": "SELECT airport.airport_id FROM airport WHERE airport.airport_name = \"Manchester\"", "supplement": ""}], "duration": 336.48393535614014, "time": "2022-12-27 22:00:19"}
{"question": "show me the name whose height is higher than 190", "dbid": "body_builder", "TBid": "people", "previous_generated_explanation": [{"explanation": [{"explanation": "In table people", "subexpression": "FROM people"}, {"explanation": "Keep the records where the height of people is greater than 190", "subexpression": "WHERE people.height > 190"}, {"explanation": "Return the name of people", "subexpression": "SELECT people.name"}], "number": "Start first query,", "subquery": "SELECT people.name FROM people WHERE people.height > 190", "supplement": ""}], "entire_SQL": "SELECT people.name FROM people WHERE people.height > 190", "original explanations": [{"explanation": [{"explanation": "In table people", "subexpression": "FROM people"}, {"explanation": "Keep the records where the height of people is greater than 190", "subexpression": "WHERE people.height > 190"}, {"explanation": "Return the name of people", "subexpression": "SELECT people.name"}], "number": "Start first query,", "subquery": "SELECT people.name FROM people WHERE people.height > 190", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table people", "subexpression": "FROM people"}, {"explanation": "Keep the records where the height of people is less than 180", "subexpression": "WHERE people.height > 190"}, {"explanation": "Return the name of people", "subexpression": "SELECT people.name"}], "number": "Start first query,", "subquery": "SELECT people.name FROM people WHERE people.height > 190", "supplement": ""}], "duration": 32.23460245132446, "time": "2022-12-29 23:19:34"}
{"question": "show me the name whose height is higher than 190", "dbid": "body_builder", "TBid": "people", "previous_generated_explanation": [{"explanation": [{"explanation": "In table people", "subexpression": "FROM people"}, {"explanation": "Keep the records where the height of people is less than 180", "subexpression": "WHERE people.height < 180"}, {"explanation": "Return the name of people", "subexpression": "SELECT people.name"}], "number": "Start first query,", "subquery": "SELECT people.name FROM people WHERE people.height < 180", "supplement": ""}], "entire_SQL": "SELECT people.name FROM people WHERE people.height<180", "original explanations": [{"explanation": [{"explanation": "In table people", "subexpression": "FROM people"}, {"explanation": "Keep the records where the height of people is less than 180", "subexpression": "WHERE people.height < 180"}, {"explanation": "Return the name of people", "subexpression": "SELECT people.name"}], "number": "Start first query,", "subquery": "SELECT people.name FROM people WHERE people.height < 180", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table people", "subexpression": "FROM people"}, {"explanation": "Keep the records where the height of people is less than 195", "subexpression": "WHERE people.height < 180"}, {"explanation": "Return the name of people", "subexpression": "SELECT people.name"}], "number": "Start first query,", "subquery": "SELECT people.name FROM people WHERE people.height < 180", "supplement": ""}], "duration": 15.697842359542847, "time": "2022-12-29 23:19:50"}
{"question": "show me the name whose height is higher than 190", "dbid": "body_builder", "TBid": "people", "previous_generated_explanation": [{"explanation": [{"explanation": "In table people", "subexpression": "FROM people"}, {"explanation": "Keep the records where the height of people is less than 195", "subexpression": "WHERE people.height < 195"}, {"explanation": "Return the name of people", "subexpression": "SELECT people.name"}], "number": "Start first query,", "subquery": "SELECT people.name FROM people WHERE people.height < 195", "supplement": ""}], "entire_SQL": "SELECT people.name FROM people WHERE people.height < 195", "original explanations": [{"explanation": [{"explanation": "In table people", "subexpression": "FROM people"}, {"explanation": "Keep the records where the height of people is less than 195", "subexpression": "WHERE people.height < 195"}, {"explanation": "Return the name of people", "subexpression": "SELECT people.name"}], "number": "Start first query,", "subquery": "SELECT people.name FROM people WHERE people.height < 195", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table people", "subexpression": "FROM people"}, {"explanation": "Keep the records where the height of people is less than or equal to 195", "subexpression": "WHERE people.height < 195"}, {"explanation": "Return the name of people", "subexpression": "SELECT people.name"}], "number": "Start first query,", "subquery": "SELECT people.name FROM people WHERE people.height < 195", "supplement": ""}], "duration": 11.458096504211426, "time": "2022-12-29 23:20:02"}
{"question": "Which abbreviation corresponds to Jetblue Airways?", "dbid": "flight_2", "TBid": "airlines", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Keep the records where the airline of airlines is \"Jetblue Airways\"", "subexpression": "WHERE airlines.airline = \"Jetblue Airways\""}, {"explanation": "Return the abbreviation of airlines", "subexpression": "SELECT airlines.abbreviation"}], "number": "Start first query,", "subquery": "SELECT airlines.abbreviation FROM airlines WHERE airlines.airline = \"Jetblue Airways\"", "supplement": ""}], "entire_SQL": "SELECT airlines.abbreviation FROM airlines WHERE airlines.airline = 'Jetblue Airways'", "original explanations": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Keep the records where the airline of airlines is \"Jetblue Airways\"", "subexpression": "WHERE airlines.airline = \"Jetblue Airways\""}, {"explanation": "Return the abbreviation of airlines", "subexpression": "SELECT airlines.abbreviation"}], "number": "Start first query,", "subquery": "SELECT airlines.abbreviation FROM airlines WHERE airlines.airline = \"Jetblue Airways\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Return the abbreviation of airlines", "subexpression": "SELECT airlines.abbreviation"}], "number": "Start first query,", "subquery": "SELECT airlines.abbreviation FROM airlines WHERE airlines.airline = \"Jetblue Airways\"", "supplement": ""}], "duration": 421.38308787345886, "time": "2022-12-29 23:33:10"}
{"question": "Which abbreviation corresponds to Jetblue Airways?", "dbid": "flight_2", "TBid": "airlines", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Return the abbreviation of airlines", "subexpression": "SELECT airlines.abbreviation"}], "number": "Start first query,", "subquery": "SELECT airlines.abbreviation FROM airlines", "supplement": ""}], "entire_SQL": "SELECT airlines.abbreviation FROM airlines", "original explanations": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Return the abbreviation of airlines", "subexpression": "SELECT airlines.abbreviation"}], "number": "Start first query,", "subquery": "SELECT airlines.abbreviation FROM airlines", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Keep the records where the airline of airlines is \"Jetblue Airways\"", "subexpression": "..."}, {"explanation": "Return the airline of airlines", "subexpression": "SELECT airlines.abbreviation"}], "number": "Start first query,", "subquery": "SELECT airlines.abbreviation FROM airlines", "supplement": ""}], "duration": 1567.2045726776123, "time": "2022-12-29 23:59:17"}
{"question": "Which abbreviation corresponds to Jetblue Airways?", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Keep the records where the airline of airlines is \"Jet\"", "subexpression": "WHERE airlines.airline = \"Jet\""}, {"explanation": "Return the airline of flights", "subexpression": "SELECT flights.airline"}], "number": "Start first query,", "subquery": "SELECT flights.airline FROM airlines WHERE airlines.airline = \"Jet\"", "supplement": ""}], "entire_SQL": "SELECT flights.airline FROM airlines WHERE airlines.airline = \"Jet\"", "original explanations": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Keep the records where the airline of airlines is \"Jet\"", "subexpression": "WHERE airlines.airline = \"Jet\""}, {"explanation": "Return the airline of flights", "subexpression": "SELECT flights.airline"}], "number": "Start first query,", "subquery": "SELECT flights.airline FROM airlines WHERE airlines.airline = \"Jet\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Return the airline of flights", "subexpression": "SELECT flights.airline"}], "number": "Start first query,", "subquery": "SELECT flights.airline FROM airlines WHERE airlines.airline = \"Jet\"", "supplement": ""}], "duration": 6.61282205581665, "time": "2022-12-29 23:59:25"}
{"question": "Which abbreviation corresponds to Jetblue Airways?", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Return the airline of flights", "subexpression": "SELECT flights.airline"}], "number": "Start first query,", "subquery": "SELECT flights.airline FROM airlines", "supplement": ""}], "entire_SQL": "SELECT flights.airline FROM airlines", "original explanations": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Return the airline of flights", "subexpression": "SELECT flights.airline"}], "number": "Start first query,", "subquery": "SELECT flights.airline FROM airlines", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Return the airline of airline", "subexpression": "SELECT flights.airline"}], "number": "Start first query,", "subquery": "SELECT flights.airline FROM airlines", "supplement": ""}], "duration": 49.31864953041077, "time": "2022-12-30 00:00:14"}
{"question": "Which abbreviation corresponds to Jetblue Airways?", "dbid": "flight_2", "TBid": "airlines", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Return the airline of airline", "subexpression": "SELECT airline.airline"}], "number": "Start first query,", "subquery": "SELECT airline.airline FROM airlines", "supplement": ""}], "entire_SQL": "SELECT airline.airline FROM airlines", "original explanations": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Return the airline of airline", "subexpression": "SELECT airline.airline"}], "number": "Start first query,", "subquery": "SELECT airline.airline FROM airlines", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Return the airline of airlines", "subexpression": "SELECT airline.airline"}], "number": "Start first query,", "subquery": "SELECT airline.airline FROM airlines", "supplement": ""}], "duration": 18.501912593841553, "time": "2022-12-30 00:00:33"}
{"question": "Which abbreviation corresponds to Jetblue Airways?", "dbid": "flight_2", "TBid": "airlines", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Return the airlines of airlines", "subexpression": "SELECT airlines.airlines"}], "number": "Start first query,", "subquery": "SELECT airlines.airlines FROM airlines", "supplement": ""}], "entire_SQL": "SELECT airlines.airlines FROM airlines", "original explanations": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Return the airlines of airlines", "subexpression": "SELECT airlines.airlines"}], "number": "Start first query,", "subquery": "SELECT airlines.airlines FROM airlines", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Return the airline of airlines", "subexpression": "SELECT airlines.airlines"}], "number": "Start first query,", "subquery": "SELECT airlines.airlines FROM airlines", "supplement": ""}], "duration": 7.543962240219116, "time": "2022-12-30 00:00:41"}
{"question": "Which abbreviation corresponds to Jetblue Airways?", "dbid": "flight_2", "TBid": "airlines", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Keep the records where the airline of airlines is \"Jetblue Airways\"", "subexpression": "WHERE airlines.airline = \"Jetblue Airways\""}, {"explanation": "Return the abbreviation of airlines", "subexpression": "SELECT airlines.abbreviation"}], "number": "Start first query,", "subquery": "SELECT airlines.abbreviation FROM airlines WHERE airlines.airline = \"Jetblue Airways\"", "supplement": ""}], "entire_SQL": "SELECT airlines.abbreviation FROM airlines WHERE airlines.airline = 'Jetblue Airways'", "original explanations": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Keep the records where the airline of airlines is \"Jetblue Airways\"", "subexpression": "WHERE airlines.airline = \"Jetblue Airways\""}, {"explanation": "Return the abbreviation of airlines", "subexpression": "SELECT airlines.abbreviation"}], "number": "Start first query,", "subquery": "SELECT airlines.abbreviation FROM airlines WHERE airlines.airline = \"Jetblue Airways\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Keep the records where the airline of airlines is \"Jetblue Airways\"", "subexpression": "WHERE airlines.airline = \"Jetblue Airways\""}, {"explanation": "Return the everything", "subexpression": "SELECT airlines.abbreviation"}], "number": "Start first query,", "subquery": "SELECT airlines.abbreviation FROM airlines WHERE airlines.airline = \"Jetblue Airways\"", "supplement": ""}], "duration": 59.27869892120361, "time": "2022-12-30 00:01:56"}
{"question": "Which abbreviation corresponds to Jetblue Airways?", "dbid": "flight_2", "TBid": "airlines", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Keep the records where the airline of airlines is \"Jetblue Airways\"", "subexpression": "WHERE airlines.airline = \"Jetblue Airways\""}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM airlines WHERE airlines.airline = \"Jetblue Airways\"", "supplement": ""}], "entire_SQL": "SELECT * FROM airlines WHERE airlines.airline = \"Jetblue Airways\"", "original explanations": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Keep the records where the airline of airlines is \"Jetblue Airways\"", "subexpression": "WHERE airlines.airline = \"Jetblue Airways\""}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM airlines WHERE airlines.airline = \"Jetblue Airways\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM airlines WHERE airlines.airline = \"Jetblue Airways\"", "supplement": ""}], "duration": 27.06389832496643, "time": "2022-12-30 00:02:23"}
{"question": "Which abbreviation corresponds to JetBlue Airways?", "dbid": "flight_2", "TBid": "airlines", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Keep the records where the airline of airlines is \"JetBlue Airways\"", "subexpression": "WHERE airlines.airline = \"JetBlue Airways\""}, {"explanation": "Return the abbreviation of airlines", "subexpression": "SELECT airlines.abbreviation"}], "number": "Start first query,", "subquery": "SELECT airlines.abbreviation FROM airlines WHERE airlines.airline = \"JetBlue Airways\"", "supplement": ""}], "entire_SQL": "SELECT airlines.abbreviation FROM airlines WHERE airlines.airline = 'JetBlue Airways'", "original explanations": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Keep the records where the airline of airlines is \"JetBlue Airways\"", "subexpression": "WHERE airlines.airline = \"JetBlue Airways\""}, {"explanation": "Return the abbreviation of airlines", "subexpression": "SELECT airlines.abbreviation"}], "number": "Start first query,", "subquery": "SELECT airlines.abbreviation FROM airlines WHERE airlines.airline = \"JetBlue Airways\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Keep the records where the airline of airlines is \"Jet Blue Airways\"", "subexpression": "WHERE airlines.airline = \"JetBlue Airways\""}, {"explanation": "Return the abbreviation of airlines", "subexpression": "SELECT airlines.abbreviation"}], "number": "Start first query,", "subquery": "SELECT airlines.abbreviation FROM airlines WHERE airlines.airline = \"JetBlue Airways\"", "supplement": ""}], "duration": 19.937888383865356, "time": "2022-12-30 00:06:02"}
{"question": "Tell me the years cars were produced weighing no less than 3000 and no more than 4000 ?", "dbid": "car_1", "TBid": "cars data", "previous_generated_explanation": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the weight of cars data is between 3000 AND 4000", "subexpression": "WHERE cars_data.weight BETWEEN 3000 AND 4000"}, {"explanation": "Return the year of cars data", "subexpression": "SELECT cars_data.year"}], "number": "Start first query,", "subquery": "SELECT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 AND 4000", "supplement": ""}], "entire_SQL": "SELECT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 and 4000", "original explanations": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the weight of cars data is between 3000 AND 4000", "subexpression": "WHERE cars_data.weight BETWEEN 3000 AND 4000"}, {"explanation": "Return the year of cars data", "subexpression": "SELECT cars_data.year"}], "number": "Start first query,", "subquery": "SELECT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 AND 4000", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the weight of cars data is between 3000 AND 4000", "subexpression": "WHERE cars_data.weight BETWEEN 3000 AND 4000"}, {"explanation": "Return the distinct year of cars data", "subexpression": "SELECT cars_data.year"}], "number": "Start first query,", "subquery": "SELECT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 AND 4000", "supplement": ""}], "duration": 19.4348783493042, "time": "2022-12-30 00:51:01"}
{"question": "Tell me the years cars were produced weighing no less than 3000 and no more than 4000 ?", "dbid": "car_1", "TBid": "cars data", "previous_generated_explanation": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the weight of cars data is between 3000 AND 4000", "subexpression": "WHERE cars_data.weight BETWEEN 3000 AND 4000"}, {"explanation": "Return distinct year of cars data", "subexpression": "SELECT DISTINCT cars_data.year"}], "number": "Start first query,", "subquery": "SELECT DISTINCT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 AND 4000", "supplement": ""}], "entire_SQL": "SELECT DISTINCT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 AND 4000", "original explanations": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the weight of cars data is between 3000 AND 4000", "subexpression": "WHERE cars_data.weight BETWEEN 3000 AND 4000"}, {"explanation": "Return distinct year of cars data", "subexpression": "SELECT DISTINCT cars_data.year"}], "number": "Start first query,", "subquery": "SELECT DISTINCT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 AND 4000", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the weight of cars data is between 3000 AND 4000", "subexpression": "WHERE cars_data.weight BETWEEN 3000 AND 4000"}, {"explanation": "Return year of cars data", "subexpression": "SELECT DISTINCT cars_data.year"}], "number": "Start first query,", "subquery": "SELECT DISTINCT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 AND 4000", "supplement": ""}], "duration": 8.66242527961731, "time": "2022-12-30 00:51:10"}
{"question": "Tell me the years cars were produced weighing no less than 3000 and no more than 4000 ?", "dbid": "car_1", "TBid": "cars data", "previous_generated_explanation": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the weight of cars data is between 3000 AND 4000", "subexpression": "WHERE cars_data.weight BETWEEN 3000 AND 4000"}, {"explanation": "Return the year of cars data", "subexpression": "SELECT cars_data.year"}], "number": "Start first query,", "subquery": "SELECT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 AND 4000", "supplement": ""}], "entire_SQL": "SELECT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 AND 4000", "original explanations": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the weight of cars data is between 3000 AND 4000", "subexpression": "WHERE cars_data.weight BETWEEN 3000 AND 4000"}, {"explanation": "Return the year of cars data", "subexpression": "SELECT cars_data.year"}], "number": "Start first query,", "subquery": "SELECT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 AND 4000", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the weight of cars data is between 3000 AND 4000", "subexpression": "WHERE cars_data.weight BETWEEN 3000 AND 4000"}, {"explanation": "Return the distinct year of cars data", "subexpression": "SELECT cars_data.year"}], "number": "Start first query,", "subquery": "SELECT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 AND 4000", "supplement": ""}], "duration": 20.16970205307007, "time": "2022-12-30 00:51:31"}
{"question": "Tell me the years cars were produced weighing no less than 3000 and no more than 4000 ?", "dbid": "car_1", "TBid": "cars data", "previous_generated_explanation": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the weight of cars data is between 3000 AND 4000", "subexpression": "WHERE cars_data.weight BETWEEN 3000 AND 4000"}, {"explanation": "Return distinct year of cars data", "subexpression": "SELECT DISTINCT cars_data.year"}], "number": "Start first query,", "subquery": "SELECT DISTINCT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 AND 4000", "supplement": ""}], "entire_SQL": "SELECT DISTINCT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 AND 4000", "original explanations": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the weight of cars data is between 3000 AND 4000", "subexpression": "WHERE cars_data.weight BETWEEN 3000 AND 4000"}, {"explanation": "Return distinct year of cars data", "subexpression": "SELECT DISTINCT cars_data.year"}], "number": "Start first query,", "subquery": "SELECT DISTINCT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 AND 4000", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the weight of cars data is between 3000 AND 4000", "subexpression": "WHERE cars_data.weight BETWEEN 3000 AND 4000"}, {"explanation": "Return year of cars data", "subexpression": "SELECT DISTINCT cars_data.year"}], "number": "Start first query,", "subquery": "SELECT DISTINCT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 AND 4000", "supplement": ""}], "duration": 25.376216650009155, "time": "2022-12-30 00:51:57"}
{"question": "Tell me the years cars were produced weighing no less than 3000 and no more than 4000 ?", "dbid": "car_1", "TBid": "cars data", "previous_generated_explanation": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the weight of cars data is between 3000 AND 4000", "subexpression": "WHERE cars_data.weight BETWEEN 3000 AND 4000"}, {"explanation": "Return the year of cars data", "subexpression": "SELECT cars_data.year"}], "number": "Start first query,", "subquery": "SELECT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 AND 4000", "supplement": ""}], "entire_SQL": "SELECT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 AND 4000", "original explanations": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the weight of cars data is between 3000 AND 4000", "subexpression": "WHERE cars_data.weight BETWEEN 3000 AND 4000"}, {"explanation": "Return the year of cars data", "subexpression": "SELECT cars_data.year"}], "number": "Start first query,", "subquery": "SELECT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 AND 4000", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Return the year of cars data", "subexpression": "SELECT cars_data.year"}], "number": "Start first query,", "subquery": "SELECT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 AND 4000", "supplement": ""}], "duration": 285.68168807029724, "time": "2022-12-30 00:56:43"}
{"question": "How many templates have template type code cv?", "dbid": "cre_Doc_Template_Mgt", "TBid": "templates", "previous_generated_explanation": [{"explanation": [{"explanation": "In table templates", "subexpression": "FROM templates"}, {"explanation": "Keep the records where the template type code of templates is \"cv\"", "subexpression": "WHERE templates.template_type_code = \"cv\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM templates WHERE templates.template_type_code = \"cv\"", "supplement": ""}], "entire_SQL": "SELECT COUNT( * ) FROM templates WHERE templates.template_type_code = 'cv'", "original explanations": [{"explanation": [{"explanation": "In table templates", "subexpression": "FROM templates"}, {"explanation": "Keep the records where the template type code of templates is \"cv\"", "subexpression": "WHERE templates.template_type_code = \"cv\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM templates WHERE templates.template_type_code = \"cv\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table templates", "subexpression": "FROM templates"}, {"explanation": "Keep the records where the template type code of templates is CV", "subexpression": "WHERE templates.template_type_code = \"cv\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM templates WHERE templates.template_type_code = \"cv\"", "supplement": ""}], "duration": 15.213216066360474, "time": "2022-12-30 01:00:48"}
{"question": "On average, when were the transcripts printed?", "dbid": "student_transcripts_tracking", "TBid": "transcripts", "previous_generated_explanation": [{"explanation": [{"explanation": "In table transcripts", "subexpression": "FROM transcripts"}, {"explanation": "Return the average value of other details of transcripts", "subexpression": "SELECT AVG ( transcripts.other_details )"}], "number": "Start first query,", "subquery": "SELECT AVG ( transcripts.other_details ) FROM transcripts", "supplement": ""}, {"explanation": [{"explanation": "In table transcripts", "subexpression": "FROM transcripts"}, {"explanation": "Keep the records where the other details of transcripts is greater than the first query result", "subexpression": "WHERE transcripts.other_details > ( SELECT AVG(transcripts.other_details) FROM transcripts)"}, {"explanation": "Return the average value of other details of transcripts", "subexpression": "SELECT AVG ( transcripts.other_details )"}], "number": "Start second query,", "subquery": "SELECT AVG ( transcripts.other_details )  FROM transcripts WHERE transcripts.other_details > ( first123query123result )  ", "supplement": "second query result uses first query result"}], "entire_SQL": "SELECT AVG( transcripts.other_details ) FROM transcripts WHERE transcripts.other_details > (SELECT AVG( transcripts.other_details ) FROM transcripts)", "original explanations": [{"explanation": [{"explanation": "In table transcripts", "subexpression": "FROM transcripts"}, {"explanation": "Return the average value of other details of transcripts", "subexpression": "SELECT AVG ( transcripts.other_details )"}], "number": "Start first query,", "subquery": "SELECT AVG ( transcripts.other_details ) FROM transcripts", "supplement": ""}, {"explanation": [{"explanation": "In table transcripts", "subexpression": "FROM transcripts"}, {"explanation": "Keep the records where the other details of transcripts is greater than the first query result", "subexpression": "WHERE transcripts.other_details > ( SELECT AVG(transcripts.other_details) FROM transcripts)"}, {"explanation": "Return the average value of other details of transcripts", "subexpression": "SELECT AVG ( transcripts.other_details )"}], "number": "Start second query,", "subquery": "SELECT AVG ( transcripts.other_details )  FROM transcripts WHERE transcripts.other_details > ( first123query123result )  ", "supplement": "second query result uses first query result"}], "edited explanations": [{"explanation": [], "number": "Start first query,", "subquery": "SELECT AVG ( transcripts.other_details ) FROM transcripts", "supplement": ""}, {"explanation": [{"explanation": "In table transcripts", "subexpression": "FROM transcripts"}, {"explanation": "Keep the records where the other details of transcripts is greater than the first query result", "subexpression": "WHERE transcripts.other_details > ( SELECT AVG(transcripts.other_details) FROM transcripts)"}, {"explanation": "Return the average value of other details of transcripts", "subexpression": "SELECT AVG ( transcripts.other_details )"}], "number": "Start second query,", "subquery": "SELECT AVG ( transcripts.other_details )  FROM transcripts WHERE transcripts.other_details > ( first123query123result )  ", "supplement": "second query result uses first query result"}], "duration": 58.9831428527832, "time": "2022-12-30 01:03:37"}
{"question": "List all the student details in reversed lexicographical order.", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending ORDER based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "entire_SQL": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending ORDER based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending ORDER based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "duration": 29.488449573516846, "time": "2022-12-30 01:04:43"}
{"question": "List all the student details in reversed lexicographical order.", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending ORDER based on the other student details of students", "subexpression": "ORDER BY students.other_student_details DESC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details DESC", "supplement": ""}], "entire_SQL": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details DESC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending ORDER based on the other student details of students", "subexpression": "ORDER BY students.other_student_details DESC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details DESC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending ORDER based on the other student details of students", "subexpression": "ORDER BY students.other_student_details DESC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details DESC", "supplement": ""}], "duration": 13.720747709274292, "time": "2022-12-30 01:04:58"}
{"question": "What are the ids of all tv channels that have more than 2 TV channels?", "dbid": "tvshow", "TBid": "tv channel", "previous_generated_explanation": [{"explanation": [{"explanation": "In table tv channel and table tv series", "subexpression": "FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.channel"}, {"explanation": "Group the records based on the id of tv channel", "subexpression": "GROUP BY tv_channel.id"}, {"explanation": "Keep the groups where the number of records is greater than 2", "subexpression": "HAVING COUNT ( * ) > 2"}, {"explanation": "Return the id of tv channel", "subexpression": "SELECT tv_channel.id"}], "number": "Start first query,", "subquery": "SELECT tv_channel.id FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.channel GROUP BY tv_channel.id HAVING COUNT ( * ) > 2", "supplement": ""}], "entire_SQL": "SELECT tv_channel.id FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.channel GROUP BY tv_channel.id HAVING COUNT( * ) > 2", "original explanations": [{"explanation": [{"explanation": "In table tv channel and table tv series", "subexpression": "FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.channel"}, {"explanation": "Group the records based on the id of tv channel", "subexpression": "GROUP BY tv_channel.id"}, {"explanation": "Keep the groups where the number of records is greater than 2", "subexpression": "HAVING COUNT ( * ) > 2"}, {"explanation": "Return the id of tv channel", "subexpression": "SELECT tv_channel.id"}], "number": "Start first query,", "subquery": "SELECT tv_channel.id FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.channel GROUP BY tv_channel.id HAVING COUNT ( * ) > 2", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table tv channel and table tv series", "subexpression": "FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.channel"}, {"explanation": "Group the records based on the country of tv channel", "subexpression": "GROUP BY tv_channel.id"}, {"explanation": "Keep the groups where the number of records is greater than 2", "subexpression": "HAVING COUNT ( * ) > 2"}, {"explanation": "Return the id of tv channel", "subexpression": "SELECT tv_channel.id"}], "number": "Start first query,", "subquery": "SELECT tv_channel.id FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.channel GROUP BY tv_channel.id HAVING COUNT ( * ) > 2", "supplement": ""}], "duration": 215.4907763004303, "time": "2022-12-30 01:29:52"}
{"question": "What are the ids of all tv channels that have more than 2 TV channels?", "dbid": "tvshow", "TBid": "tv channel", "previous_generated_explanation": [{"explanation": [{"explanation": "In table tv channel and table tv series", "subexpression": "FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.channel"}, {"explanation": "Group the records based on the country of tv channel", "subexpression": "GROUP BY tv_channel.country"}, {"explanation": "Keep the groups where the number of records is greater than 2", "subexpression": "HAVING COUNT ( * ) > 2"}, {"explanation": "Return the id of tv channel", "subexpression": "SELECT tv_channel.id"}], "number": "Start first query,", "subquery": "SELECT tv_channel.id FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.channel GROUP BY tv_channel.country HAVING COUNT ( * ) > 2", "supplement": ""}], "entire_SQL": "SELECT tv_channel.id FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.channel GROUP BY tv_channel.country HAVING COUNT ( * ) > 2", "original explanations": [{"explanation": [{"explanation": "In table tv channel and table tv series", "subexpression": "FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.channel"}, {"explanation": "Group the records based on the country of tv channel", "subexpression": "GROUP BY tv_channel.country"}, {"explanation": "Keep the groups where the number of records is greater than 2", "subexpression": "HAVING COUNT ( * ) > 2"}, {"explanation": "Return the id of tv channel", "subexpression": "SELECT tv_channel.id"}], "number": "Start first query,", "subquery": "SELECT tv_channel.id FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.channel GROUP BY tv_channel.country HAVING COUNT ( * ) > 2", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table tv channel", "subexpression": "FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.channel"}, {"explanation": "Group the records based on the country of tv channel", "subexpression": "GROUP BY tv_channel.country"}, {"explanation": "Keep the groups where the number of records is greater than 2", "subexpression": "HAVING COUNT ( * ) > 2"}, {"explanation": "Return the id of tv channel", "subexpression": "SELECT tv_channel.id"}], "number": "Start first query,", "subquery": "SELECT tv_channel.id FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.channel GROUP BY tv_channel.country HAVING COUNT ( * ) > 2", "supplement": ""}], "duration": 35.7495493888855, "time": "2022-12-30 01:30:29"}
{"question": "show me the guest's first name and last name who is a female and has the largest id", "dbid": "apartment_rentals", "TBid": "guests", "previous_generated_explanation": [{"explanation": [{"explanation": "In table guests", "subexpression": "FROM guests"}, {"explanation": "Keep the records where the gender code of guests is \"female\"", "subexpression": "WHERE guests.gender_code = \"female\""}, {"explanation": "Sort the records in descending order based on the guest id of guests, and return the first record", "subexpression": "ORDER BY guests.guest_id DESC LIMIT 1"}, {"explanation": "Return the guest first name of guests and the guest last name of guests", "subexpression": "SELECT guests.guest_first_name , guests.guest_last_name"}], "number": "Start first query,", "subquery": "SELECT guests.guest_first_name , guests.guest_last_name FROM guests WHERE guests.gender_code = \"female\" ORDER BY guests.guest_id DESC LIMIT 1", "supplement": ""}], "entire_SQL": "SELECT guests.guest_first_name , guests.guest_last_name FROM guests WHERE guests.gender_code = 'female' ORDER BY guests.guest_id DESC LIMIT 1", "original explanations": [{"explanation": [{"explanation": "In table guests", "subexpression": "FROM guests"}, {"explanation": "Keep the records where the gender code of guests is \"female\"", "subexpression": "WHERE guests.gender_code = \"female\""}, {"explanation": "Sort the records in descending order based on the guest id of guests, and return the first record", "subexpression": "ORDER BY guests.guest_id DESC LIMIT 1"}, {"explanation": "Return the guest first name of guests and the guest last name of guests", "subexpression": "SELECT guests.guest_first_name , guests.guest_last_name"}], "number": "Start first query,", "subquery": "SELECT guests.guest_first_name , guests.guest_last_name FROM guests WHERE guests.gender_code = \"female\" ORDER BY guests.guest_id DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table guests", "subexpression": "FROM guests"}, {"explanation": "Keep the records where the gender code of guests is \"Female\"", "subexpression": "WHERE guests.gender_code = \"female\""}, {"explanation": "Sort the records in descending order based on the guest id of guests, and return the first record", "subexpression": "ORDER BY guests.guest_id DESC LIMIT 1"}, {"explanation": "Return the guest first name of guests and the guest last name of guests", "subexpression": "SELECT guests.guest_first_name , guests.guest_last_name"}], "number": "Start first query,", "subquery": "SELECT guests.guest_first_name , guests.guest_last_name FROM guests WHERE guests.gender_code = \"female\" ORDER BY guests.guest_id DESC LIMIT 1", "supplement": ""}], "duration": 31.77195692062378, "time": "2022-12-30 02:27:05"}
{"question": "ell me the guest\u2019s full name who is a female and has the largest ID", "dbid": "apartment_rentals", "TBid": "guests", "previous_generated_explanation": [{"explanation": [{"explanation": "In table guests", "subexpression": "FROM guests"}, {"explanation": "Keep the records where the gender code of guests is \"female\"", "subexpression": "WHERE guests.gender_code = \"female\""}, {"explanation": "Sort the records in descending order based on the guest id of guests, and return the first record", "subexpression": "ORDER BY guests.guest_id DESC LIMIT 1"}, {"explanation": "Return the guest first name of guests and the guest last name of guests", "subexpression": "SELECT guests.guest_first_name , guests.guest_last_name"}], "number": "Start first query,", "subquery": "SELECT guests.guest_first_name , guests.guest_last_name FROM guests WHERE guests.gender_code = \"female\" ORDER BY guests.guest_id DESC LIMIT 1", "supplement": ""}], "entire_SQL": "SELECT guests.guest_first_name , guests.guest_last_name FROM guests WHERE guests.gender_code = 'female' ORDER BY guests.guest_id DESC LIMIT 1", "original explanations": [{"explanation": [{"explanation": "In table guests", "subexpression": "FROM guests"}, {"explanation": "Keep the records where the gender code of guests is \"female\"", "subexpression": "WHERE guests.gender_code = \"female\""}, {"explanation": "Sort the records in descending order based on the guest id of guests, and return the first record", "subexpression": "ORDER BY guests.guest_id DESC LIMIT 1"}, {"explanation": "Return the guest first name of guests and the guest last name of guests", "subexpression": "SELECT guests.guest_first_name , guests.guest_last_name"}], "number": "Start first query,", "subquery": "SELECT guests.guest_first_name , guests.guest_last_name FROM guests WHERE guests.gender_code = \"female\" ORDER BY guests.guest_id DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table guests", "subexpression": "FROM guests"}, {"explanation": "Keep the records where the gender code of guests is \"female\"", "subexpression": "WHERE guests.gender_code = \"female\""}, {"explanation": "Return the guest first name of guests and the guest last name of guests", "subexpression": "SELECT guests.guest_first_name , guests.guest_last_name"}], "number": "Start first query,", "subquery": "SELECT guests.guest_first_name , guests.guest_last_name FROM guests WHERE guests.gender_code = \"female\" ORDER BY guests.guest_id DESC LIMIT 1", "supplement": ""}], "duration": 23.669708013534546, "time": "2022-12-30 02:43:36"}
{"question": "ell me the guest\u2019s full name who is a female and has the largest ID", "dbid": "apartment_rentals", "TBid": "guests", "previous_generated_explanation": [{"explanation": [{"explanation": "In table guests", "subexpression": "FROM guests"}, {"explanation": "Keep the records where the gender code of guests is \"female\"", "subexpression": "WHERE guests.gender_code = \"female\""}, {"explanation": "Return the guest first name of guests and the guest last name of guests", "subexpression": "SELECT guests.guest_first_name , guests.guest_last_name"}], "number": "Start first query,", "subquery": "SELECT guests.guest_first_name , guests.guest_last_name FROM guests WHERE guests.gender_code = \"female\"", "supplement": ""}], "entire_SQL": "SELECT guests.guest_first_name , guests.guest_last_name FROM guests WHERE guests.gender_code = \"female\"", "original explanations": [{"explanation": [{"explanation": "In table guests", "subexpression": "FROM guests"}, {"explanation": "Keep the records where the gender code of guests is \"female\"", "subexpression": "WHERE guests.gender_code = \"female\""}, {"explanation": "Return the guest first name of guests and the guest last name of guests", "subexpression": "SELECT guests.guest_first_name , guests.guest_last_name"}], "number": "Start first query,", "subquery": "SELECT guests.guest_first_name , guests.guest_last_name FROM guests WHERE guests.gender_code = \"female\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table guests", "subexpression": "FROM guests"}, {"explanation": "Keep the records where the guest id is 1", "subexpression": "WHERE guests.gender_code = \"female\""}, {"explanation": "Return the guest first name of guests and the guest last name of guests", "subexpression": "SELECT guests.guest_first_name , guests.guest_last_name"}], "number": "Start first query,", "subquery": "SELECT guests.guest_first_name , guests.guest_last_name FROM guests WHERE guests.gender_code = \"female\"", "supplement": ""}], "duration": 32.21812415122986, "time": "2022-12-30 02:44:09"}
{"question": "ell me the guest\u2019s full name who is a female and has the largest ID", "dbid": "apartment_rentals", "TBid": "apartment bookings", "previous_generated_explanation": [{"explanation": [{"explanation": "In table guests", "subexpression": "FROM guests"}, {"explanation": "Keep the records where the guest id of apartment bookings is 1", "subexpression": "WHERE apartment_bookings.guest_id = 1"}, {"explanation": "Return the guest first name of guests and the guest last name of guests", "subexpression": "SELECT guests.guest_first_name , guests.guest_last_name"}], "number": "Start first query,", "subquery": "SELECT guests.guest_first_name , guests.guest_last_name FROM guests WHERE apartment_bookings.guest_id = 1", "supplement": ""}], "entire_SQL": "SELECT guests.guest_first_name , guests.guest_last_name FROM guests WHERE apartment_bookings.guest_id = 1", "original explanations": [{"explanation": [{"explanation": "In table guests", "subexpression": "FROM guests"}, {"explanation": "Keep the records where the guest id of apartment bookings is 1", "subexpression": "WHERE apartment_bookings.guest_id = 1"}, {"explanation": "Return the guest first name of guests and the guest last name of guests", "subexpression": "SELECT guests.guest_first_name , guests.guest_last_name"}], "number": "Start first query,", "subquery": "SELECT guests.guest_first_name , guests.guest_last_name FROM guests WHERE apartment_bookings.guest_id = 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table guests", "subexpression": "FROM guests"}, {"explanation": "Keep the records where the guest id of apartment bookings is greater than 1", "subexpression": "WHERE apartment_bookings.guest_id = 1"}, {"explanation": "Return the guest first name of guests and the guest last name of guests", "subexpression": "SELECT guests.guest_first_name , guests.guest_last_name"}], "number": "Start first query,", "subquery": "SELECT guests.guest_first_name , guests.guest_last_name FROM guests WHERE apartment_bookings.guest_id = 1", "supplement": ""}], "duration": 20.92447853088379, "time": "2022-12-30 02:44:30"}
{"question": "ell me the guest\u2019s full name who is a female and has the largest ID", "dbid": "apartment_rentals", "TBid": "guests", "previous_generated_explanation": [{"explanation": [{"explanation": "In table guests", "subexpression": "FROM guests"}, {"explanation": "Keep the records where the guest id of apartment bookings is greater than 1", "subexpression": "WHERE apartment_bookings.guest_id > 1"}, {"explanation": "Return the guest first name of guests and the guest last name of guests", "subexpression": "SELECT guests.guest_first_name , guests.guest_last_name"}], "number": "Start first query,", "subquery": "SELECT guests.guest_first_name , guests.guest_last_name FROM guests WHERE apartment_bookings.guest_id > 1", "supplement": ""}], "entire_SQL": "SELECT guests.guest_first_name , guests.guest_last_name FROM guests WHERE apartment_bookings.guest_id > 1", "original explanations": [{"explanation": [{"explanation": "In table guests", "subexpression": "FROM guests"}, {"explanation": "Keep the records where the guest id of apartment bookings is greater than 1", "subexpression": "WHERE apartment_bookings.guest_id > 1"}, {"explanation": "Return the guest first name of guests and the guest last name of guests", "subexpression": "SELECT guests.guest_first_name , guests.guest_last_name"}], "number": "Start first query,", "subquery": "SELECT guests.guest_first_name , guests.guest_last_name FROM guests WHERE apartment_bookings.guest_id > 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table guests", "subexpression": "FROM guests"}, {"explanation": "Keep the records where the guest id of guest is greater than 1", "subexpression": "WHERE apartment_bookings.guest_id > 1"}, {"explanation": "Return the guest first name of guests and the guest last name of guests", "subexpression": "SELECT guests.guest_first_name , guests.guest_last_name"}], "number": "Start first query,", "subquery": "SELECT guests.guest_first_name , guests.guest_last_name FROM guests WHERE apartment_bookings.guest_id > 1", "supplement": ""}], "duration": 22.595075845718384, "time": "2022-12-30 02:44:53"}
{"question": "ell me the guest\u2019s full name who is a female and has the largest ID", "dbid": "apartment_rentals", "TBid": "guests", "previous_generated_explanation": [{"explanation": [{"explanation": "In table guests", "subexpression": "FROM guests"}, {"explanation": "Keep the records where the guest id of   is greater than 1", "subexpression": "WHERE _.guest_id > 1"}, {"explanation": "Return the guest first name of guests and the guest last name of guests", "subexpression": "SELECT guests.guest_first_name , guests.guest_last_name"}], "number": "Start first query,", "subquery": "SELECT guests.guest_first_name , guests.guest_last_name FROM guests WHERE _.guest_id > 1", "supplement": ""}], "entire_SQL": "SELECT guests.guest_first_name , guests.guest_last_name FROM guests WHERE _.guest_id > 1", "original explanations": [{"explanation": [{"explanation": "In table guests", "subexpression": "FROM guests"}, {"explanation": "Keep the records where the guest id of   is greater than 1", "subexpression": "WHERE _.guest_id > 1"}, {"explanation": "Return the guest first name of guests and the guest last name of guests", "subexpression": "SELECT guests.guest_first_name , guests.guest_last_name"}], "number": "Start first query,", "subquery": "SELECT guests.guest_first_name , guests.guest_last_name FROM guests WHERE _.guest_id > 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table guests", "subexpression": "FROM guests"}, {"explanation": "Keep the records where the guest id of guests is greater than 1", "subexpression": "WHERE _.guest_id > 1"}, {"explanation": "Return the guest first name of guests and the guest last name of guests", "subexpression": "SELECT guests.guest_first_name , guests.guest_last_name"}], "number": "Start first query,", "subquery": "SELECT guests.guest_first_name , guests.guest_last_name FROM guests WHERE _.guest_id > 1", "supplement": ""}], "duration": 16.987043142318726, "time": "2022-12-30 02:45:11"}
{"question": "tell me the guest\u2019s full name who is a female and has the largest ID", "dbid": "apartment_rentals", "TBid": "guests", "previous_generated_explanation": [{"explanation": [{"explanation": "In table guests", "subexpression": "FROM guests"}, {"explanation": "Keep the records where the gender code of guests is \"female\"", "subexpression": "WHERE guests.gender_code = \"female\""}, {"explanation": "Sort the records in descending order based on the guest id of guests, and return the first record", "subexpression": "ORDER BY guests.guest_id DESC LIMIT 1"}, {"explanation": "Return the guest first name of guests and the guest last name of guests", "subexpression": "SELECT guests.guest_first_name , guests.guest_last_name"}], "number": "Start first query,", "subquery": "SELECT guests.guest_first_name , guests.guest_last_name FROM guests WHERE guests.gender_code = \"female\" ORDER BY guests.guest_id DESC LIMIT 1", "supplement": ""}], "entire_SQL": "SELECT guests.guest_first_name , guests.guest_last_name FROM guests WHERE guests.gender_code = 'female' ORDER BY guests.guest_id DESC LIMIT 1", "original explanations": [{"explanation": [{"explanation": "In table guests", "subexpression": "FROM guests"}, {"explanation": "Keep the records where the gender code of guests is \"female\"", "subexpression": "WHERE guests.gender_code = \"female\""}, {"explanation": "Sort the records in descending order based on the guest id of guests, and return the first record", "subexpression": "ORDER BY guests.guest_id DESC LIMIT 1"}, {"explanation": "Return the guest first name of guests and the guest last name of guests", "subexpression": "SELECT guests.guest_first_name , guests.guest_last_name"}], "number": "Start first query,", "subquery": "SELECT guests.guest_first_name , guests.guest_last_name FROM guests WHERE guests.gender_code = \"female\" ORDER BY guests.guest_id DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table guests", "subexpression": "FROM guests"}, {"explanation": "Sort the records in descending order based on the guest id of guests, and return the first record", "subexpression": "ORDER BY guests.guest_id DESC LIMIT 1"}, {"explanation": "Return the guest first name of guests and the guest last name of guests", "subexpression": "SELECT guests.guest_first_name , guests.guest_last_name"}], "number": "Start first query,", "subquery": "SELECT guests.guest_first_name , guests.guest_last_name FROM guests WHERE guests.gender_code = \"female\" ORDER BY guests.guest_id DESC LIMIT 1", "supplement": ""}], "duration": 28.209230661392212, "time": "2022-12-30 02:45:56"}
{"question": "Find the average and maximum age for each type of pet.", "dbid": "pets_1", "TBid": "pets", "previous_generated_explanation": [{"explanation": [{"explanation": "In table pets", "subexpression": "FROM pets"}, {"explanation": "Group the records based on the pettype of pets", "subexpression": "GROUP BY pets.pettype"}, {"explanation": "Return the average value of age, of student the maximum value of age, of student and the pettype of pets", "subexpression": "SELECT pets.pettype , AVG ( student.age ) , MAX ( student.age )"}], "number": "Start first query,", "subquery": "SELECT pets.pettype , AVG ( student.age ) , MAX ( student.age ) FROM pets GROUP BY pets.pettype", "supplement": ""}], "entire_SQL": "SELECT pets.pettype , AVG( student.age ) , MAX( student.age ) FROM pets GROUP BY pets.pettype", "original explanations": [{"explanation": [{"explanation": "In table pets", "subexpression": "FROM pets"}, {"explanation": "Group the records based on the pettype of pets", "subexpression": "GROUP BY pets.pettype"}, {"explanation": "Return the average value of age, of student the maximum value of age, of student and the pettype of pets", "subexpression": "SELECT pets.pettype , AVG ( student.age ) , MAX ( student.age )"}], "number": "Start first query,", "subquery": "SELECT pets.pettype , AVG ( student.age ) , MAX ( student.age ) FROM pets GROUP BY pets.pettype", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table pets", "subexpression": "FROM pets"}, {"explanation": "keep the records where the pettype is cat", "subexpression": "GROUP BY pets.pettype"}, {"explanation": "Return the average value of age", "subexpression": "SELECT pets.pettype , AVG ( student.age ) , MAX ( student.age )"}], "number": "Start first query,", "subquery": "SELECT pets.pettype , AVG ( student.age ) , MAX ( student.age ) FROM pets GROUP BY pets.pettype", "supplement": ""}], "duration": 124.93108892440796, "time": "2022-12-30 03:44:20"}
{"question": "Find the average and maximum age for each type of pet.", "dbid": "pets_1", "TBid": "student", "previous_generated_explanation": [{"explanation": [{"explanation": "In table pets", "subexpression": "FROM pets"}, {"explanation": "Keep the records where the pettype of pets is \"cat\"", "subexpression": "WHERE pets.pettype = \"cat\""}, {"explanation": "Return the average value of age of student", "subexpression": "SELECT AVG ( student.age )"}], "number": "Start first query,", "subquery": "SELECT AVG ( student.age ) FROM pets WHERE pets.pettype = \"cat\"", "supplement": ""}], "entire_SQL": "SELECT AVG( student.age ) FROM pets WHERE pets.pettype = \"cat\"", "original explanations": [{"explanation": [{"explanation": "In table pets", "subexpression": "FROM pets"}, {"explanation": "Keep the records where the pettype of pets is \"cat\"", "subexpression": "WHERE pets.pettype = \"cat\""}, {"explanation": "Return the average value of age of student", "subexpression": "SELECT AVG ( student.age )"}], "number": "Start first query,", "subquery": "SELECT AVG ( student.age ) FROM pets WHERE pets.pettype = \"cat\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table pets", "subexpression": "FROM pets"}, {"explanation": "Keep the records where the pettype of pets is \"cat\"", "subexpression": "WHERE pets.pettype = \"cat\""}, {"explanation": "Return the average value of age of pets", "subexpression": "SELECT AVG ( student.age )"}], "number": "Start first query,", "subquery": "SELECT AVG ( student.age ) FROM pets WHERE pets.pettype = \"cat\"", "supplement": ""}], "duration": 10.493981838226318, "time": "2022-12-30 03:44:31"}
{"question": "Find the average and maximum age for each type of pet.", "dbid": "pets_1", "TBid": "pets", "previous_generated_explanation": [{"explanation": [{"explanation": "In table pets", "subexpression": "FROM pets"}, {"explanation": "Keep the records where the pettype of pets is \"cat\"", "subexpression": "WHERE pets.pettype = \"cat\""}, {"explanation": "Return the average value of age of pets", "subexpression": "SELECT AVG ( pets.age )"}], "number": "Start first query,", "subquery": "SELECT AVG ( pets.age ) FROM pets WHERE pets.pettype = \"cat\"", "supplement": ""}], "entire_SQL": "SELECT AVG ( pets.age ) FROM pets WHERE pets.pettype = \"cat\"", "original explanations": [{"explanation": [{"explanation": "In table pets", "subexpression": "FROM pets"}, {"explanation": "Keep the records where the pettype of pets is \"cat\"", "subexpression": "WHERE pets.pettype = \"cat\""}, {"explanation": "Return the average value of age of pets", "subexpression": "SELECT AVG ( pets.age )"}], "number": "Start first query,", "subquery": "SELECT AVG ( pets.age ) FROM pets WHERE pets.pettype = \"cat\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table pets", "subexpression": "FROM pets"}, {"explanation": "Keep the records where the pettype of pets is \"cat\"", "subexpression": "WHERE pets.pettype = \"cat\""}, {"explanation": "Return the average value of pet age of pets", "subexpression": "SELECT AVG ( pets.age )"}], "number": "Start first query,", "subquery": "SELECT AVG ( pets.age ) FROM pets WHERE pets.pettype = \"cat\"", "supplement": ""}], "duration": 23.100438356399536, "time": "2022-12-30 03:44:55"}
{"question": "How many students are female, have a pet, is greater than 18?", "dbid": "pets_1", "TBid": "student", "previous_generated_explanation": [{"explanation": [{"explanation": "In table has pet AND table student", "subexpression": "FROM has_pet JOIN student ON has_pet.stuid = student.stuid"}, {"explanation": "Keep the records where the sex of student is \"f\" AND the age of student is greater than 18", "subexpression": "WHERE student.sex = \"f\" AND student.age > 18"}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.sex = \"f\" AND student.age > 18", "supplement": ""}], "entire_SQL": "SELECT COUNT( * ) FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.sex = 'f' AND student.age > 18", "original explanations": [{"explanation": [{"explanation": "In table has pet AND table student", "subexpression": "FROM has_pet JOIN student ON has_pet.stuid = student.stuid"}, {"explanation": "Keep the records where the sex of student is \"f\" AND the age of student is greater than 18", "subexpression": "WHERE student.sex = \"f\" AND student.age > 18"}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.sex = \"f\" AND student.age > 18", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table has pet AND table student", "subexpression": "FROM has_pet JOIN student ON has_pet.stuid = student.stuid"}, {"explanation": "Keep the records where the sex of student is \"f\"", "subexpression": "WHERE student.sex = \"f\" AND student.age > 18"}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.sex = \"f\" AND student.age > 18", "supplement": ""}], "duration": 24.73744797706604, "time": "2022-12-30 03:48:05"}
{"question": "What is the name of the different car makers who produced a car in 1970?", "dbid": "car_1", "TBid": "car makers", "previous_generated_explanation": [{"explanation": [{"explanation": "In table car makers and table model list", "subexpression": "FROM car_makers JOIN model_list ON car_makers.id = model_list.maker"}, {"explanation": "Keep the records where the year of cars data is 1970", "subexpression": "WHERE cars_data.year = 1970"}, {"explanation": "Return distinct maker of car makers", "subexpression": "SELECT DISTINCT car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT DISTINCT car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE cars_data.year = 1970", "supplement": ""}], "entire_SQL": "SELECT DISTINCT car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE cars_data.year = 1970", "original explanations": [{"explanation": [{"explanation": "In table car makers and table model list", "subexpression": "FROM car_makers JOIN model_list ON car_makers.id = model_list.maker"}, {"explanation": "Keep the records where the year of cars data is 1970", "subexpression": "WHERE cars_data.year = 1970"}, {"explanation": "Return distinct maker of car makers", "subexpression": "SELECT DISTINCT car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT DISTINCT car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE cars_data.year = 1970", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table car makers and table model list", "subexpression": "FROM car_makers JOIN model_list ON car_makers.id = model_list.maker"}, {"explanation": "Return distinct maker of car makers", "subexpression": "SELECT DISTINCT car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT DISTINCT car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE cars_data.year = 1970", "supplement": ""}], "duration": 61.91492962837219, "time": "2022-12-30 03:51:05"}
{"question": "What is the name of the different car makers who produced a car in 1970?", "dbid": "car_1", "TBid": "cars_data", "previous_generated_explanation": [{"explanation": [{"explanation": "In table car makers and table model list", "subexpression": "FROM car_makers JOIN model_list ON car_makers.id = model_list.maker"}, {"explanation": "Return distinct maker of car makers", "subexpression": "SELECT DISTINCT car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT DISTINCT car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker", "supplement": ""}], "entire_SQL": "SELECT DISTINCT car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker", "original explanations": [{"explanation": [{"explanation": "In table car makers and table model list", "subexpression": "FROM car_makers JOIN model_list ON car_makers.id = model_list.maker"}, {"explanation": "Return distinct maker of car makers", "subexpression": "SELECT DISTINCT car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT DISTINCT car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table car makers and table model list", "subexpression": "FROM car_makers JOIN model_list ON car_makers.id = model_list.maker"}, {"explanation": "Keep the records where the year of cars data is 1970", "subexpression": "..."}, {"explanation": "Return distinct maker of car makers", "subexpression": "SELECT DISTINCT car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT DISTINCT car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker", "supplement": ""}], "duration": 7.827292442321777, "time": "2022-12-30 03:51:13"}
{"question": "What is the name of the different car makers who produced a car in 1970?", "dbid": "car_1", "TBid": "cars data", "previous_generated_explanation": [{"explanation": [{"explanation": "In table car makers and table model list", "subexpression": "FROM car_makers JOIN model_list ON car_makers.id = model_list.maker"}, {"explanation": "Keep the records where the year of cars data is 1970", "subexpression": "WHERE cars_data.year = 1970"}, {"explanation": "Return distinct maker of car makers", "subexpression": "SELECT DISTINCT car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT DISTINCT car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE cars_data.year = 1970", "supplement": ""}], "entire_SQL": "SELECT DISTINCT car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE cars_data.year = 1970", "original explanations": [{"explanation": [{"explanation": "In table car makers and table model list", "subexpression": "FROM car_makers JOIN model_list ON car_makers.id = model_list.maker"}, {"explanation": "Keep the records where the year of cars data is 1970", "subexpression": "WHERE cars_data.year = 1970"}, {"explanation": "Return distinct maker of car makers", "subexpression": "SELECT DISTINCT car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT DISTINCT car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE cars_data.year = 1970", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table car makers and table cars data", "subexpression": "FROM car_makers JOIN model_list ON car_makers.id = model_list.maker"}, {"explanation": "Keep the records where the year of cars data is 1970", "subexpression": "WHERE cars_data.year = 1970"}, {"explanation": "Return distinct maker of car makers", "subexpression": "SELECT DISTINCT car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT DISTINCT car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE cars_data.year = 1970", "supplement": ""}], "duration": 51.45012903213501, "time": "2022-12-30 03:52:05"}
{"question": "What is the name of the different car makers who produced a car in 1970?", "dbid": "car_1", "TBid": "car_makers", "previous_generated_explanation": [{"explanation": [{"explanation": "In table car makers and table model list", "subexpression": "FROM car_makers JOIN model_list ON car_makers.id = model_list.maker"}, {"explanation": "Keep the records where the year of cars data is 1970", "subexpression": "WHERE cars_data.year = 1970"}, {"explanation": "Return distinct maker of car makers", "subexpression": "SELECT DISTINCT car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT DISTINCT car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE cars_data.year = 1970", "supplement": ""}], "entire_SQL": "SELECT DISTINCT car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE cars_data.year = 1970", "original explanations": [{"explanation": [{"explanation": "In table car makers and table model list", "subexpression": "FROM car_makers JOIN model_list ON car_makers.id = model_list.maker"}, {"explanation": "Keep the records where the year of cars data is 1970", "subexpression": "WHERE cars_data.year = 1970"}, {"explanation": "Return distinct maker of car makers", "subexpression": "SELECT DISTINCT car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT DISTINCT car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE cars_data.year = 1970", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table car makers and table model list", "subexpression": "FROM car_makers JOIN model_list ON car_makers.id = model_list.maker"}, {"explanation": "Keep the records where the year of cars data is 1970", "subexpression": "WHERE cars_data.year = 1970"}, {"explanation": "Return  maker of car makers", "subexpression": "SELECT DISTINCT car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT DISTINCT car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE cars_data.year = 1970", "supplement": ""}], "duration": 71.21373772621155, "time": "2022-12-30 03:53:35"}
{"question": "What is the name of the different car makers who produced a car in 1970?", "dbid": "car_1", "TBid": "car_makers", "previous_generated_explanation": [{"explanation": [{"explanation": "In table car makers and table model list", "subexpression": "FROM car_makers JOIN model_list ON car_makers.id = model_list.maker"}, {"explanation": "Keep the records where the year of cars data is 1970", "subexpression": "WHERE cars_data.year = 1970"}, {"explanation": "Return the maker of car makers", "subexpression": "SELECT car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE cars_data.year = 1970", "supplement": ""}], "entire_SQL": "SELECT car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE cars_data.year = 1970", "original explanations": [{"explanation": [{"explanation": "In table car makers and table model list", "subexpression": "FROM car_makers JOIN model_list ON car_makers.id = model_list.maker"}, {"explanation": "Keep the records where the year of cars data is 1970", "subexpression": "WHERE cars_data.year = 1970"}, {"explanation": "Return the maker of car makers", "subexpression": "SELECT car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE cars_data.year = 1970", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table car makers and table model list", "subexpression": "FROM car_makers JOIN model_list ON car_makers.id = model_list.maker"}, {"explanation": "Keep the records where the year of cars data is 1970", "subexpression": "WHERE cars_data.year = 1970"}, {"explanation": "Return the maker of car makers", "subexpression": "SELECT car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE cars_data.year = 1970", "supplement": ""}], "duration": 3.701082706451416, "time": "2022-12-30 03:53:39"}
{"question": "What is the name of the different car makers who produced a car in 1970?", "dbid": "car_1", "TBid": "model list", "previous_generated_explanation": [{"explanation": [{"explanation": "In table car makers and table model list", "subexpression": "FROM car_makers JOIN model_list ON car_makers.id = model_list.maker"}, {"explanation": "Keep the records where the year of cars data is 1970", "subexpression": "WHERE cars_data.year = 1970"}, {"explanation": "Return the maker of car makers", "subexpression": "SELECT car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE cars_data.year = 1970", "supplement": ""}], "entire_SQL": "SELECT car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE cars_data.year = 1970", "original explanations": [{"explanation": [{"explanation": "In table car makers and table model list", "subexpression": "FROM car_makers JOIN model_list ON car_makers.id = model_list.maker"}, {"explanation": "Keep the records where the year of cars data is 1970", "subexpression": "WHERE cars_data.year = 1970"}, {"explanation": "Return the maker of car makers", "subexpression": "SELECT car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE cars_data.year = 1970", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table car makers", "subexpression": "FROM car_makers JOIN model_list ON car_makers.id = model_list.maker"}, {"explanation": "Keep the records where the year of cars data is 1970", "subexpression": "WHERE cars_data.year = 1970"}, {"explanation": "Return the maker of car makers", "subexpression": "SELECT car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker WHERE cars_data.year = 1970", "supplement": ""}], "duration": 10.350441455841064, "time": "2022-12-30 03:53:50"}
{"question": "What is the name of the different car makers who produced a car in 1970?", "dbid": "car_1", "TBid": "cars data", "previous_generated_explanation": [{"explanation": [{"explanation": "In table car makers", "subexpression": "FROM car_makers"}, {"explanation": "Keep the records where the year of cars data is 1970", "subexpression": "WHERE cars_data.year = 1970"}, {"explanation": "Return the maker of car makers", "subexpression": "SELECT car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT car_makers.maker FROM car_makers WHERE cars_data.year = 1970", "supplement": ""}], "entire_SQL": "SELECT car_makers.maker FROM car_makers WHERE cars_data.year = 1970", "original explanations": [{"explanation": [{"explanation": "In table car makers", "subexpression": "FROM car_makers"}, {"explanation": "Keep the records where the year of cars data is 1970", "subexpression": "WHERE cars_data.year = 1970"}, {"explanation": "Return the maker of car makers", "subexpression": "SELECT car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT car_makers.maker FROM car_makers WHERE cars_data.year = 1970", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table car makers and cars data", "subexpression": "FROM car_makers"}, {"explanation": "Keep the records where the year of cars data is 1970", "subexpression": "WHERE cars_data.year = 1970"}, {"explanation": "Return the maker of car makers", "subexpression": "SELECT car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT car_makers.maker FROM car_makers WHERE cars_data.year = 1970", "supplement": ""}], "duration": 13.484336853027344, "time": "2022-12-30 03:54:04"}
{"question": "What is the name of the different car makers who produced a car in 1970?", "dbid": "car_1", "TBid": "car makers", "previous_generated_explanation": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the year of cars data is 1970", "subexpression": "WHERE cars_data.year = 1970"}, {"explanation": "Return the maker of car makers", "subexpression": "SELECT car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT car_makers.maker FROM cars_data WHERE cars_data.year = 1970", "supplement": ""}], "entire_SQL": "SELECT car_makers.maker FROM cars_data WHERE cars_data.year = 1970", "original explanations": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the year of cars data is 1970", "subexpression": "WHERE cars_data.year = 1970"}, {"explanation": "Return the maker of car makers", "subexpression": "SELECT car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT car_makers.maker FROM cars_data WHERE cars_data.year = 1970", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table cars data and cars makers", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the year of cars data is 1970", "subexpression": "WHERE cars_data.year = 1970"}, {"explanation": "Return the maker of car makers", "subexpression": "SELECT car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT car_makers.maker FROM cars_data WHERE cars_data.year = 1970", "supplement": ""}], "duration": 12.391084671020508, "time": "2022-12-30 03:54:17"}
{"question": "What is the airport name for airport 'AKO'", "dbid": "flight_2", "TBid": "airports", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "entire_SQL": "SELECT airports.airportname FROM airports WHERE airports.airportname = 'AKO'", "original explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "duration": 37.7504518032074, "time": "2022-12-30 04:07:18"}
{"question": "What is the airport name of the airport 'KKI\u2019?", "dbid": "flight_2", "TBid": "airports", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airports is \"KKI\"", "subexpression": "WHERE airports.airportname = \"KKI\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"KKI\"", "supplement": ""}], "entire_SQL": "SELECT airports.airportname FROM airports WHERE airports.airportname = 'KKI'", "original explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airports is \"KKI\"", "subexpression": "WHERE airports.airportname = \"KKI\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"KKI\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportcode of airports is \"KKI\"", "subexpression": "WHERE airports.airportname = \"KKI\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"KKI\"", "supplement": ""}], "duration": 319.7253086566925, "time": "2022-12-30 04:53:25"}
{"question": "show me all the flight numbers", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Return the flightno of flights", "subexpression": "SELECT flights.flightno"}], "number": "Start first query,", "subquery": "SELECT flights.flightno FROM flights", "supplement": ""}], "entire_SQL": "SELECT flights.flightno FROM flights", "original explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Return the flightno of flights", "subexpression": "SELECT flights.flightno"}], "number": "Start first query,", "subquery": "SELECT flights.flightno FROM flights", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Return the flightno of flights", "subexpression": "SELECT flights.flightno"}, {"explanation": "return destination airport", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT flights.flightno FROM flights", "supplement": ""}], "duration": 21.206112384796143, "time": "2022-12-30 05:05:49"}
{"question": "show me all the flight numbers", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Return the flightno of flights", "subexpression": "SELECT flights.flightno"}], "number": "Start first query,", "subquery": "SELECT flights.flightno FROM flights", "supplement": ""}], "entire_SQL": "SELECT flights.flightno FROM flights", "original explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Return the flightno of flights", "subexpression": "SELECT flights.flightno"}], "number": "Start first query,", "subquery": "SELECT flights.flightno FROM flights", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Return the flightno and destairport of flights", "subexpression": "SELECT flights.flightno"}], "number": "Start first query,", "subquery": "SELECT flights.flightno FROM flights", "supplement": ""}], "duration": 24.393962621688843, "time": "2022-12-30 05:06:13"}
{"question": "show me all the flight numbers", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Return the flightno of flights and the destairport of flights", "subexpression": "SELECT flights.flightno , flights.destairport"}], "number": "Start first query,", "subquery": "SELECT flights.flightno , flights.destairport FROM flights", "supplement": ""}], "entire_SQL": "SELECT flights.flightno , flights.destairport FROM flights", "original explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Return the flightno of flights and the destairport of flights", "subexpression": "SELECT flights.flightno , flights.destairport"}], "number": "Start first query,", "subquery": "SELECT flights.flightno , flights.destairport FROM flights", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records hwere the flightno is greater than 40\n", "subexpression": "..."}, {"explanation": "Return the flightno of flights and the destairport of flights", "subexpression": "SELECT flights.flightno , flights.destairport"}], "number": "Start first query,", "subquery": "SELECT flights.flightno , flights.destairport FROM flights", "supplement": ""}], "duration": 42.9307541847229, "time": "2022-12-30 05:06:57"}
{"question": "show me all the flight numbers", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is 40 AND the flightno of flights is less than 40", "subexpression": "WHERE flights.flightno = 40 AND flights.flightno < 40"}, {"explanation": "Return the flightno of flights AND the destairport of flights", "subexpression": "SELECT flights.flightno , flights.destairport"}], "number": "Start first query,", "subquery": "SELECT flights.flightno , flights.destairport FROM flights WHERE flights.flightno = 40 AND flights.flightno < 40", "supplement": ""}], "entire_SQL": "SELECT flights.flightno , flights.destairport FROM flights WHERE flights.flightno = 40 AND flights.flightno<40", "original explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is 40 AND the flightno of flights is less than 40", "subexpression": "WHERE flights.flightno = 40 AND flights.flightno < 40"}, {"explanation": "Return the flightno of flights AND the destairport of flights", "subexpression": "SELECT flights.flightno , flights.destairport"}], "number": "Start first query,", "subquery": "SELECT flights.flightno , flights.destairport FROM flights WHERE flights.flightno = 40 AND flights.flightno < 40", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is greater than 40", "subexpression": "WHERE flights.flightno = 40 AND flights.flightno < 40"}, {"explanation": "Return the flightno of flights AND the destairport of flights", "subexpression": "SELECT flights.flightno , flights.destairport"}], "number": "Start first query,", "subquery": "SELECT flights.flightno , flights.destairport FROM flights WHERE flights.flightno = 40 AND flights.flightno < 40", "supplement": ""}], "duration": 13.89514422416687, "time": "2022-12-30 05:07:11"}
{"question": "show me all the flight numbers", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is 40 AND the flightno of flights is less than 40", "subexpression": "WHERE flights.flightno = 40 AND flights.flightno < 40"}, {"explanation": "Return the flightno of flights AND the destairport of flights", "subexpression": "SELECT flights.flightno , flights.destairport"}], "number": "Start first query,", "subquery": "SELECT flights.flightno , flights.destairport FROM flights WHERE flights.flightno = 40 AND flights.flightno < 40", "supplement": ""}], "entire_SQL": "SELECT flights.flightno , flights.destairport FROM flights WHERE flights.flightno = 40 AND flights.flightno<40", "original explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is 40 AND the flightno of flights is less than 40", "subexpression": "WHERE flights.flightno = 40 AND flights.flightno < 40"}, {"explanation": "Return the flightno of flights AND the destairport of flights", "subexpression": "SELECT flights.flightno , flights.destairport"}], "number": "Start first query,", "subquery": "SELECT flights.flightno , flights.destairport FROM flights WHERE flights.flightno = 40 AND flights.flightno < 40", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is 40 ", "subexpression": "WHERE flights.flightno = 40 AND flights.flightno < 40"}, {"explanation": "Return the flightno of flights AND the destairport of flights", "subexpression": "SELECT flights.flightno , flights.destairport"}], "number": "Start first query,", "subquery": "SELECT flights.flightno , flights.destairport FROM flights WHERE flights.flightno = 40 AND flights.flightno < 40", "supplement": ""}], "duration": 7.146184682846069, "time": "2022-12-30 05:07:19"}
{"question": "show me all the flight numbers", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is 40", "subexpression": "WHERE flights.flightno = 40"}, {"explanation": "Return the flightno of flights and the destairport of flights", "subexpression": "SELECT flights.flightno , flights.destairport"}], "number": "Start first query,", "subquery": "SELECT flights.flightno , flights.destairport FROM flights WHERE flights.flightno = 40", "supplement": ""}], "entire_SQL": "SELECT flights.flightno , flights.destairport FROM flights WHERE flights.flightno = 40", "original explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is 40", "subexpression": "WHERE flights.flightno = 40"}, {"explanation": "Return the flightno of flights and the destairport of flights", "subexpression": "SELECT flights.flightno , flights.destairport"}], "number": "Start first query,", "subquery": "SELECT flights.flightno , flights.destairport FROM flights WHERE flights.flightno = 40", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Return the flightno of flights and the destairport of flights", "subexpression": "SELECT flights.flightno , flights.destairport"}], "number": "Start first query,", "subquery": "SELECT flights.flightno , flights.destairport FROM flights WHERE flights.flightno = 40", "supplement": ""}], "duration": 5.337847948074341, "time": "2022-12-30 05:07:25"}
{"question": "show me all the flight numbers", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Return the flightno of flights and the destairport of flights", "subexpression": "SELECT flights.flightno , flights.destairport"}], "number": "Start first query,", "subquery": "SELECT flights.flightno , flights.destairport FROM flights", "supplement": ""}], "entire_SQL": "SELECT flights.flightno , flights.destairport FROM flights", "original explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Return the flightno of flights and the destairport of flights", "subexpression": "SELECT flights.flightno , flights.destairport"}], "number": "Start first query,", "subquery": "SELECT flights.flightno , flights.destairport FROM flights", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "AND the flightno of flights is 44", "subexpression": "..."}, {"explanation": "Return the flightno of flights and the destairport of flights", "subexpression": "SELECT flights.flightno , flights.destairport"}], "number": "Start first query,", "subquery": "SELECT flights.flightno , flights.destairport FROM flights", "supplement": ""}], "duration": 10.845113277435303, "time": "2022-12-30 05:07:36"}
{"question": "hat is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "entire_SQL": "SELECT airports.airportname FROM airports WHERE airports.airportname = 'AKO'", "original explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Group the records based on city", "subexpression": "..."}, {"explanation": "Return the number of records", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "duration": 61.72521090507507, "time": "2022-12-30 05:12:17"}
{"question": "hat is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Group the records based on the city of airports", "subexpression": "GROUP BY airports.city"}, {"explanation": "Return the number of records", "subexpression": "SELECT records.number"}], "number": "Start first query,", "subquery": "SELECT records.number FROM airports GROUP BY airports.city", "supplement": ""}], "entire_SQL": "SELECT records.number FROM airports GROUP BY airports.city", "original explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Group the records based on the city of airports", "subexpression": "GROUP BY airports.city"}, {"explanation": "Return the number of records", "subexpression": "SELECT records.number"}], "number": "Start first query,", "subquery": "SELECT records.number FROM airports GROUP BY airports.city", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Group the records based on the city of airports", "subexpression": "GROUP BY airports.city"}, {"explanation": "Return the number ", "subexpression": "SELECT records.number"}], "number": "Start first query,", "subquery": "SELECT records.number FROM airports GROUP BY airports.city", "supplement": ""}], "duration": 15.357785701751709, "time": "2022-12-30 05:12:33"}
{"question": "hat is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Group the records based on the city of airports", "subexpression": "GROUP BY airports.city"}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM airports GROUP BY airports.city", "supplement": ""}], "entire_SQL": "SELECT * FROM airports GROUP BY airports.city", "original explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Group the records based on the city of airports", "subexpression": "GROUP BY airports.city"}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM airports GROUP BY airports.city", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Group the records based on the city of airports", "subexpression": "GROUP BY airports.city"}, {"explanation": "Return the number of records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM airports GROUP BY airports.city", "supplement": ""}], "duration": 11.821796894073486, "time": "2022-12-30 05:12:45"}
{"question": "hat is the airport name for airport 'AKO'?", "dbid": "flight_2", "TBid": "airports", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Group the records based on the city of airports", "subexpression": "GROUP BY airports.city"}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM airports GROUP BY airports.city", "supplement": ""}], "entire_SQL": "SELECT COUNT( * ) FROM airports GROUP BY airports.city", "original explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Group the records based on the city of airports", "subexpression": "GROUP BY airports.city"}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM airports GROUP BY airports.city", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Group the records based on the country", "subexpression": "GROUP BY airports.city"}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM airports GROUP BY airports.city", "supplement": ""}], "duration": 11.828785181045532, "time": "2022-12-30 05:12:57"}
{"question": "Show me all the flight numbers", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Return the flightno of flights", "subexpression": "SELECT flights.flightno"}], "number": "Start first query,", "subquery": "SELECT flights.flightno FROM flights", "supplement": ""}], "entire_SQL": "SELECT flights.flightno FROM flights", "original explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Return the flightno of flights", "subexpression": "SELECT flights.flightno"}], "number": "Start first query,", "subquery": "SELECT flights.flightno FROM flights", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "keep the records where the flight number is greater than 400", "subexpression": "..."}, {"explanation": "Return the flightno of flights", "subexpression": "SELECT flights.flightno"}], "number": "Start first query,", "subquery": "SELECT flights.flightno FROM flights", "supplement": ""}], "duration": 40.089091300964355, "time": "2022-12-30 05:14:30"}
{"question": "Show me all the flight numbers", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is greater than 400", "subexpression": "WHERE flights.flightno > 400"}, {"explanation": "Return the flightno of flights", "subexpression": "SELECT flights.flightno"}], "number": "Start first query,", "subquery": "SELECT flights.flightno FROM flights WHERE flights.flightno > 400", "supplement": ""}], "entire_SQL": "SELECT flights.flightno FROM flights WHERE flights.flightno > 400", "original explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is greater than 400", "subexpression": "WHERE flights.flightno > 400"}, {"explanation": "Return the flightno of flights", "subexpression": "SELECT flights.flightno"}], "number": "Start first query,", "subquery": "SELECT flights.flightno FROM flights WHERE flights.flightno > 400", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is greater than 400", "subexpression": "WHERE flights.flightno > 400"}, {"explanation": "Return the flightno and destination airport of flights", "subexpression": "SELECT flights.flightno"}], "number": "Start first query,", "subquery": "SELECT flights.flightno FROM flights WHERE flights.flightno > 400", "supplement": ""}], "duration": 34.68437671661377, "time": "2022-12-30 05:15:05"}
{"question": "Show me all the flight numbers", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is greater than 400", "subexpression": "WHERE flights.flightno > 400"}, {"explanation": "Return the flightno of flights and the destairport of flights", "subexpression": "SELECT flights.flightno , flights.destairport"}], "number": "Start first query,", "subquery": "SELECT flights.flightno , flights.destairport FROM flights WHERE flights.flightno > 400", "supplement": ""}], "entire_SQL": "SELECT flights.flightno , flights.destairport FROM flights WHERE flights.flightno > 400", "original explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is greater than 400", "subexpression": "WHERE flights.flightno > 400"}, {"explanation": "Return the flightno of flights and the destairport of flights", "subexpression": "SELECT flights.flightno , flights.destairport"}], "number": "Start first query,", "subquery": "SELECT flights.flightno , flights.destairport FROM flights WHERE flights.flightno > 400", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is greater than 400", "subexpression": "WHERE flights.flightno > 400"}, {"explanation": "Sort the results by flight number", "subexpression": "..."}, {"explanation": "Return the flightno of flights and the destination airport of flights", "subexpression": "SELECT flights.flightno , flights.destairport"}], "number": "Start first query,", "subquery": "SELECT flights.flightno , flights.destairport FROM flights WHERE flights.flightno > 400", "supplement": ""}], "duration": 387.1615571975708, "time": "2022-12-30 05:21:32"}
{"question": "Show me all the flight numbers", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is greater than 400", "subexpression": "WHERE flights.flightno > 400"}, {"explanation": "Group the records based on the flightno of flights", "subexpression": "GROUP BY flights.flightno"}, {"explanation": "Return the flightno of flights and the destairport of flights", "subexpression": "SELECT flights.flightno , flights.destairport"}], "number": "Start first query,", "subquery": "SELECT flights.flightno , flights.destairport FROM flights WHERE flights.flightno > 400 GROUP BY flights.flightno", "supplement": ""}], "entire_SQL": "SELECT flights.flightno , flights.destairport FROM flights WHERE flights.flightno > 400 GROUP BY flights.flightno", "original explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is greater than 400", "subexpression": "WHERE flights.flightno > 400"}, {"explanation": "Group the records based on the flightno of flights", "subexpression": "GROUP BY flights.flightno"}, {"explanation": "Return the flightno of flights and the destairport of flights", "subexpression": "SELECT flights.flightno , flights.destairport"}], "number": "Start first query,", "subquery": "SELECT flights.flightno , flights.destairport FROM flights WHERE flights.flightno > 400 GROUP BY flights.flightno", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is greater than 400", "subexpression": "WHERE flights.flightno > 400"}, {"explanation": "Order the results by flight number", "subexpression": "GROUP BY flights.flightno"}, {"explanation": "Return the flightno of flights and the destairport of flights", "subexpression": "SELECT flights.flightno , flights.destairport"}], "number": "Start first query,", "subquery": "SELECT flights.flightno , flights.destairport FROM flights WHERE flights.flightno > 400 GROUP BY flights.flightno", "supplement": ""}], "duration": 11.935104846954346, "time": "2022-12-30 05:21:45"}
{"question": "Show me all the flight numbers", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is greater than 400", "subexpression": "WHERE flights.flightno > 400"}, {"explanation": "Group the records based on the flightno of flights", "subexpression": "GROUP BY flights.flightno"}, {"explanation": "Return the flightno of flights and the destairport of flights", "subexpression": "SELECT flights.flightno , flights.destairport"}], "number": "Start first query,", "subquery": "SELECT flights.flightno , flights.destairport FROM flights WHERE flights.flightno > 400 GROUP BY flights.flightno", "supplement": ""}], "entire_SQL": "SELECT flights.flightno , flights.destairport FROM flights WHERE flights.flightno > 400 GROUP BY flights.flightno", "original explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is greater than 400", "subexpression": "WHERE flights.flightno > 400"}, {"explanation": "Group the records based on the flightno of flights", "subexpression": "GROUP BY flights.flightno"}, {"explanation": "Return the flightno of flights and the destairport of flights", "subexpression": "SELECT flights.flightno , flights.destairport"}], "number": "Start first query,", "subquery": "SELECT flights.flightno , flights.destairport FROM flights WHERE flights.flightno > 400 GROUP BY flights.flightno", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is greater than 400", "subexpression": "WHERE flights.flightno > 400"}, {"explanation": "Sort the records based on the flightno of flights", "subexpression": "GROUP BY flights.flightno"}, {"explanation": "Return the flightno of flights and the destairport of flights", "subexpression": "SELECT flights.flightno , flights.destairport"}], "number": "Start first query,", "subquery": "SELECT flights.flightno , flights.destairport FROM flights WHERE flights.flightno > 400 GROUP BY flights.flightno", "supplement": ""}], "duration": 8.217658281326294, "time": "2022-12-30 05:21:54"}
{"question": "Show me all the flight numbers", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is greater than 400", "subexpression": "WHERE flights.flightno > 400"}, {"explanation": "Group the records based on the flightno of flights", "subexpression": "GROUP BY flights.flightno"}, {"explanation": "Return the flightno of flights and the destairport of flights", "subexpression": "SELECT flights.flightno , flights.destairport"}], "number": "Start first query,", "subquery": "SELECT flights.flightno , flights.destairport FROM flights WHERE flights.flightno > 400 GROUP BY flights.flightno", "supplement": ""}], "entire_SQL": "SELECT flights.flightno , flights.destairport FROM flights WHERE flights.flightno > 400 GROUP BY flights.flightno", "original explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is greater than 400", "subexpression": "WHERE flights.flightno > 400"}, {"explanation": "Group the records based on the flightno of flights", "subexpression": "GROUP BY flights.flightno"}, {"explanation": "Return the flightno of flights and the destairport of flights", "subexpression": "SELECT flights.flightno , flights.destairport"}], "number": "Start first query,", "subquery": "SELECT flights.flightno , flights.destairport FROM flights WHERE flights.flightno > 400 GROUP BY flights.flightno", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is greater than 400", "subexpression": "WHERE flights.flightno > 400"}, {"explanation": "Group the records ", "subexpression": "GROUP BY flights.flightno"}, {"explanation": "Return the flightno of flights and the destairport of flights", "subexpression": "SELECT flights.flightno , flights.destairport"}], "number": "Start first query,", "subquery": "SELECT flights.flightno , flights.destairport FROM flights WHERE flights.flightno > 400 GROUP BY flights.flightno", "supplement": ""}], "duration": 20.884540557861328, "time": "2022-12-30 05:22:15"}
{"question": "Show me all the flight numbers", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is greater than 400", "subexpression": "WHERE flights.flightno > 400"}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM flights WHERE flights.flightno > 400", "supplement": ""}], "entire_SQL": "SELECT * FROM flights WHERE flights.flightno > 400", "original explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is greater than 400", "subexpression": "WHERE flights.flightno > 400"}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM flights WHERE flights.flightno > 400", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is greater than 400", "subexpression": "WHERE flights.flightno > 400"}, {"explanation": "Sort the records", "subexpression": "..."}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM flights WHERE flights.flightno > 400", "supplement": ""}], "duration": 11.534700870513916, "time": "2022-12-30 05:22:27"}
{"question": "Show me all the flight numbers", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is greater than 400", "subexpression": "WHERE flights.flightno > 400"}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM flights WHERE flights.flightno > 400", "supplement": ""}], "entire_SQL": "SELECT * FROM flights WHERE flights.flightno > 400", "original explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is greater than 400", "subexpression": "WHERE flights.flightno > 400"}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM flights WHERE flights.flightno > 400", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is greater than 400", "subexpression": "WHERE flights.flightno > 400"}, {"explanation": "sort the records based on flight number", "subexpression": "..."}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM flights WHERE flights.flightno > 400", "supplement": ""}], "duration": 39.93555521965027, "time": "2022-12-30 05:23:07"}
{"question": "Show me all the flight numbers", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is greater than 400", "subexpression": "WHERE flights.flightno > 400"}, {"explanation": "Group the records based on the flightno of flights", "subexpression": "GROUP BY flights.flightno"}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM flights WHERE flights.flightno > 400 GROUP BY flights.flightno", "supplement": ""}], "entire_SQL": "SELECT * FROM flights WHERE flights.flightno > 400 GROUP BY flights.flightno", "original explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is greater than 400", "subexpression": "WHERE flights.flightno > 400"}, {"explanation": "Group the records based on the flightno of flights", "subexpression": "GROUP BY flights.flightno"}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM flights WHERE flights.flightno > 400 GROUP BY flights.flightno", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is greater than 400", "subexpression": "WHERE flights.flightno > 400"}, {"explanation": "sort the records based on the flightno of flights", "subexpression": "GROUP BY flights.flightno"}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM flights WHERE flights.flightno > 400 GROUP BY flights.flightno", "supplement": ""}], "duration": 7.235143423080444, "time": "2022-12-30 05:23:15"}
{"question": "Show me all the flight numbers", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is greater than 400", "subexpression": "WHERE flights.flightno > 400"}, {"explanation": "Group the records based on the flightno of flights", "subexpression": "GROUP BY flights.flightno"}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM flights WHERE flights.flightno > 400 GROUP BY flights.flightno", "supplement": ""}], "entire_SQL": "SELECT * FROM flights WHERE flights.flightno > 400 GROUP BY flights.flightno", "original explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is greater than 400", "subexpression": "WHERE flights.flightno > 400"}, {"explanation": "Group the records based on the flightno of flights", "subexpression": "GROUP BY flights.flightno"}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM flights WHERE flights.flightno > 400 GROUP BY flights.flightno", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flightno of flights is greater than 400", "subexpression": "WHERE flights.flightno > 400"}, {"explanation": "sort", "subexpression": "GROUP BY flights.flightno"}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM flights WHERE flights.flightno > 400 GROUP BY flights.flightno", "supplement": ""}], "duration": 5.30918288230896, "time": "2022-12-30 05:23:21"}
{"question": "What is the airport name for airport AKO?", "dbid": "flight_2", "TBid": "airports", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "entire_SQL": "SELECT airports.airportname FROM airports WHERE airports.airportname = 'AKO'", "original explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "duration": 50.193708658218384, "time": "2022-12-30 08:15:48"}
{"question": "What is the airport name for airport AKO?", "dbid": "flight_2", "TBid": "airports", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportcode = \"AKO\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportcode = \"AKO\"", "supplement": ""}], "entire_SQL": "SELECT airports.airportname FROM airports WHERE airports.airportcode = \"AKO\"", "original explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportcode = \"AKO\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportcode = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportcode = \"AKO\"", "supplement": ""}], "duration": 78.95282530784607, "time": "2022-12-30 08:17:08"}
{"question": "Show me all the flight numbers", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Return the flightno of flights", "subexpression": "SELECT flights.flightno"}], "number": "Start first query,", "subquery": "SELECT flights.flightno FROM flights", "supplement": ""}], "entire_SQL": "SELECT flights.flightno FROM flights", "original explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Return the flightno of flights", "subexpression": "SELECT flights.flightno"}], "number": "Start first query,", "subquery": "SELECT flights.flightno FROM flights", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the flight number is greater than 400", "subexpression": "..."}, {"explanation": "Return the flightno and destination airport of flights", "subexpression": "SELECT flights.flightno"}], "number": "Start first query,", "subquery": "SELECT flights.flightno FROM flights", "supplement": ""}], "duration": 44.95573449134827, "time": "2022-12-30 08:18:11"}
{"question": "What is the airport name of the airport 'KKI\u2019?", "dbid": "flight_2", "TBid": "airports", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airports is \"KKI\"", "subexpression": "WHERE airports.airportname = \"KKI\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"KKI\"", "supplement": ""}], "entire_SQL": "SELECT airports.airportname FROM airports WHERE airports.airportname = 'KKI'", "original explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airports is \"KKI\"", "subexpression": "WHERE airports.airportname = \"KKI\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"KKI\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportcode of airports is \"KKI\"", "subexpression": "WHERE airports.airportname = \"KKI\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"KKI\"", "supplement": ""}], "duration": 49.362831115722656, "time": "2022-12-30 16:37:00"}
{"question": "In which years cars were produced weighing no less than 3000 and no more than 4000 ?", "dbid": "car_1", "TBid": "cars data", "previous_generated_explanation": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the weight of cars data is between 3000 AND 4000", "subexpression": "WHERE cars_data.weight BETWEEN 3000 AND 4000"}, {"explanation": "Return the year of cars data", "subexpression": "SELECT cars_data.year"}], "number": "Start first query,", "subquery": "SELECT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 AND 4000", "supplement": ""}], "entire_SQL": "SELECT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 and 4000", "original explanations": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the weight of cars data is between 3000 AND 4000", "subexpression": "WHERE cars_data.weight BETWEEN 3000 AND 4000"}, {"explanation": "Return the year of cars data", "subexpression": "SELECT cars_data.year"}], "number": "Start first query,", "subquery": "SELECT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 AND 4000", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the weight of cars data is between 3000 AND 4000", "subexpression": "WHERE cars_data.weight BETWEEN 3000 AND 4000"}, {"explanation": "Return distinct year of cars data", "subexpression": "SELECT cars_data.year"}], "number": "Start first query,", "subquery": "SELECT cars_data.year FROM cars_data WHERE cars_data.weight BETWEEN 3000 AND 4000", "supplement": ""}], "duration": 40.740381956100464, "time": "2023-01-03 22:17:36"}
{"question": "How many ships ended up being 'Captured'?", "dbid": "battle_death", "TBid": "battle", "previous_generated_explanation": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the result of battle is \"Captured\"", "subexpression": "WHERE battle.result = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = \"Captured\"", "supplement": ""}], "entire_SQL": "SELECT COUNT( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = 'Captured'", "original explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the result of battle is \"Captured\"", "subexpression": "WHERE battle.result = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = \"Captured\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the disposition of ship is \"Captured\"?", "subexpression": "WHERE battle.result = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = \"Captured\"", "supplement": ""}], "duration": 103.99307179450989, "time": "2023-01-04 02:19:16"}
{"question": "How many ships ended up being 'Captured'?", "dbid": "battle_death", "TBid": "battle", "previous_generated_explanation": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Keep the records where the disposition of ship is \"Captured\" and ?", "subexpression": "WHERE ship.disposition = \"Captured?\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM ship WHERE ship.disposition = \"Captured?\"", "supplement": ""}], "entire_SQL": "SELECT COUNT ( * ) FROM ship WHERE ship.disposition = \"Captured\"?", "original explanations": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Keep the records where the disposition of ship is \"Captured\" and ?", "subexpression": "WHERE ship.disposition = \"Captured?\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM ship WHERE ship.disposition = \"Captured?\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Keep the records where the disposition of ship is \"Captured\" ", "subexpression": "WHERE ship.disposition = \"Captured?\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM ship WHERE ship.disposition = \"Captured?\"", "supplement": ""}], "duration": 13.790533065795898, "time": "2023-01-04 02:19:30"}
{"question": "What are the names of the singers who are not French citizens?", "dbid": "singer", "TBid": "singer", "previous_generated_explanation": [{"explanation": [{"explanation": "In table singer", "subexpression": "FROM singer"}, {"explanation": "Keep the records where the citizenship of singer is not \"French\"", "subexpression": "WHERE singer.citizenship != \"French\""}, {"explanation": "Return the name of singer", "subexpression": "SELECT singer.name"}], "number": "Start first query,", "subquery": "SELECT singer.name FROM singer WHERE singer.citizenship != \"French\"", "supplement": ""}], "entire_SQL": "SELECT singer.name FROM singer WHERE singer.citizenship != 'French'", "original explanations": [{"explanation": [{"explanation": "In table singer", "subexpression": "FROM singer"}, {"explanation": "Keep the records where the citizenship of singer is not \"French\"", "subexpression": "WHERE singer.citizenship != \"French\""}, {"explanation": "Return the name of singer", "subexpression": "SELECT singer.name"}], "number": "Start first query,", "subquery": "SELECT singer.name FROM singer WHERE singer.citizenship != \"French\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table singer", "subexpression": "FROM singer"}, {"explanation": "Keep the records where the citizenship of singer is not \"France\"", "subexpression": "WHERE singer.citizenship != \"French\""}, {"explanation": "Return the name of singer", "subexpression": "SELECT singer.name"}], "number": "Start first query,", "subquery": "SELECT singer.name FROM singer WHERE singer.citizenship != \"French\"", "supplement": ""}], "duration": 33.276366233825684, "time": "2023-01-04 02:24:26"}
{"question": "What are the ids of all tv channels that have more than 2 TV countries?", "dbid": "tvshow", "TBid": "tv channel", "previous_generated_explanation": [{"explanation": [{"explanation": "In table tv channel", "subexpression": "FROM tv_channel"}, {"explanation": "Group the records based on the id of tv channel", "subexpression": "GROUP BY tv_channel.id"}, {"explanation": "Keep the groups where the number of records is greater than 2", "subexpression": "HAVING COUNT ( * ) > 2"}, {"explanation": "Return the id of tv channel", "subexpression": "SELECT tv_channel.id"}], "number": "Start first query,", "subquery": "SELECT tv_channel.id FROM tv_channel GROUP BY tv_channel.id HAVING COUNT ( * ) > 2", "supplement": ""}], "entire_SQL": "SELECT tv_channel.id FROM tv_channel GROUP BY tv_channel.id HAVING COUNT( * ) > 2", "original explanations": [{"explanation": [{"explanation": "In table tv channel", "subexpression": "FROM tv_channel"}, {"explanation": "Group the records based on the id of tv channel", "subexpression": "GROUP BY tv_channel.id"}, {"explanation": "Keep the groups where the number of records is greater than 2", "subexpression": "HAVING COUNT ( * ) > 2"}, {"explanation": "Return the id of tv channel", "subexpression": "SELECT tv_channel.id"}], "number": "Start first query,", "subquery": "SELECT tv_channel.id FROM tv_channel GROUP BY tv_channel.id HAVING COUNT ( * ) > 2", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table tv channel", "subexpression": "FROM tv_channel"}, {"explanation": "Group the records based on the country", "subexpression": "GROUP BY tv_channel.id"}, {"explanation": "Keep the groups where the number of records is greater than 2", "subexpression": "HAVING COUNT ( * ) > 2"}, {"explanation": "Return the id of tv channel", "subexpression": "SELECT tv_channel.id"}], "number": "Start first query,", "subquery": "SELECT tv_channel.id FROM tv_channel GROUP BY tv_channel.id HAVING COUNT ( * ) > 2", "supplement": ""}], "duration": 47.32052731513977, "time": "2023-01-04 02:29:44"}
{"question": "How many different degrees are offered?", "dbid": "student_transcripts_tracking", "TBid": "degree programs", "previous_generated_explanation": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct department id of degree programs", "subexpression": "SELECT COUNT ( DISTINCT degree_programs.department_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_programs.department_id ) FROM degree_programs", "supplement": ""}], "entire_SQL": "SELECT COUNT( DISTINCT degree_programs.department_id ) FROM degree_programs", "original explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct department id of degree programs", "subexpression": "SELECT COUNT ( DISTINCT degree_programs.department_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_programs.department_id ) FROM degree_programs", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct degree program id of degree programs", "subexpression": "SELECT COUNT ( DISTINCT degree_programs.department_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_programs.department_id ) FROM degree_programs", "supplement": ""}], "duration": 38.41398644447327, "time": "2023-01-04 02:42:01"}
{"question": "On average, when were the transcripts printed?\n", "dbid": "student_transcripts_tracking", "TBid": "transcripts", "previous_generated_explanation": [{"explanation": [{"explanation": "In table transcripts", "subexpression": "FROM transcripts"}, {"explanation": "Return the average value of other details of transcripts", "subexpression": "SELECT AVG ( transcripts.other_details )"}], "number": "Start first query,", "subquery": "SELECT AVG ( transcripts.other_details ) FROM transcripts", "supplement": ""}, {"explanation": [{"explanation": "In table transcripts", "subexpression": "FROM transcripts"}, {"explanation": "Keep the records where the other details of transcripts is greater than the first query result", "subexpression": "WHERE transcripts.other_details > ( SELECT AVG(transcripts.other_details) FROM transcripts)"}, {"explanation": "Return the average value of other details of transcripts", "subexpression": "SELECT AVG ( transcripts.other_details )"}], "number": "Start second query,", "subquery": "SELECT AVG ( transcripts.other_details ) FROM transcripts WHERE transcripts.other_details > ( SELECT AVG(transcripts.other_details) FROM transcripts)", "supplement": "second query result uses first query result"}], "entire_SQL": "SELECT AVG( transcripts.other_details ) FROM transcripts WHERE transcripts.other_details > (SELECT AVG( transcripts.other_details ) FROM transcripts)", "original explanations": [{"explanation": [{"explanation": "In table transcripts", "subexpression": "FROM transcripts"}, {"explanation": "Return the average value of other details of transcripts", "subexpression": "SELECT AVG ( transcripts.other_details )"}], "number": "Start first query,", "subquery": "SELECT AVG ( transcripts.other_details ) FROM transcripts", "supplement": ""}, {"explanation": [{"explanation": "In table transcripts", "subexpression": "FROM transcripts"}, {"explanation": "Keep the records where the other details of transcripts is greater than the first query result", "subexpression": "WHERE transcripts.other_details > ( SELECT AVG(transcripts.other_details) FROM transcripts)"}, {"explanation": "Return the average value of other details of transcripts", "subexpression": "SELECT AVG ( transcripts.other_details )"}], "number": "Start second query,", "subquery": "SELECT AVG ( transcripts.other_details ) FROM transcripts WHERE transcripts.other_details > ( SELECT AVG(transcripts.other_details) FROM transcripts)", "supplement": "second query result uses first query result"}], "edited explanations": [{"explanation": [{"explanation": "In table transcripts", "subexpression": "FROM transcripts"}, {"explanation": "Return the average value of other details of transcripts", "subexpression": "SELECT AVG ( transcripts.other_details )"}], "number": "Start first query,", "subquery": "SELECT AVG ( transcripts.other_details ) FROM transcripts", "supplement": ""}, {"explanation": [], "number": "Start second query,", "subquery": "SELECT AVG ( transcripts.other_details ) FROM transcripts WHERE transcripts.other_details > ( SELECT AVG(transcripts.other_details) FROM transcripts)", "supplement": "second query result uses first query result"}], "duration": 54.01668357849121, "time": "2023-01-04 02:45:13"}
{"question": "On average, when were the transcripts printed?\n", "dbid": "student_transcripts_tracking", "TBid": "transcripts", "previous_generated_explanation": [{"explanation": [{"explanation": "In table transcripts", "subexpression": "FROM transcripts"}, {"explanation": "Return the average value of other details of transcripts", "subexpression": "SELECT AVG ( transcripts.other_details )"}], "number": "Start first query,", "subquery": "SELECT AVG ( transcripts.other_details ) FROM transcripts", "supplement": ""}, {"explanation": [{"explanation": "In table transcripts", "subexpression": "FROM transcripts"}, {"explanation": "Keep the records where the other details of transcripts is greater than the first query result", "subexpression": "WHERE transcripts.other_details > ( SELECT AVG(transcripts.other_details) FROM transcripts)"}, {"explanation": "Return the average value of other details of transcripts", "subexpression": "SELECT AVG ( transcripts.other_details )"}], "number": "Start second query,", "subquery": "SELECT AVG ( transcripts.other_details ) FROM transcripts WHERE transcripts.other_details > ( SELECT AVG(transcripts.other_details) FROM transcripts)", "supplement": "second query result uses first query result"}], "entire_SQL": "SELECT *", "original explanations": [{"explanation": [{"explanation": "In table transcripts", "subexpression": "FROM transcripts"}, {"explanation": "Return the average value of other details of transcripts", "subexpression": "SELECT AVG ( transcripts.other_details )"}], "number": "Start first query,", "subquery": "SELECT AVG ( transcripts.other_details ) FROM transcripts", "supplement": ""}, {"explanation": [], "number": "Start second query,", "subquery": "SELECT AVG ( transcripts.other_details ) FROM transcripts WHERE transcripts.other_details > ( SELECT AVG(transcripts.other_details) FROM transcripts)", "supplement": "second query result uses first query result"}], "edited explanations": [{"explanation": [{"explanation": "In table transcripts", "subexpression": "FROM transcripts"}, {"explanation": "Return the average value of transcript date of transcripts", "subexpression": "SELECT AVG ( transcripts.other_details )"}], "number": "Start first query,", "subquery": "SELECT AVG ( transcripts.other_details ) FROM transcripts", "supplement": ""}, {"explanation": [], "number": "Start second query,", "subquery": "SELECT AVG ( transcripts.other_details ) FROM transcripts WHERE transcripts.other_details > ( SELECT AVG(transcripts.other_details) FROM transcripts)", "supplement": "second query result uses first query result"}], "duration": 14.219494104385376, "time": "2023-01-04 02:45:27"}
{"question": "Whose permanent address is different from his current address?", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table addresses and table students", "subexpression": "FROM addresses JOIN students ON addresses.address_id = students.current_address_id"}, {"explanation": "Return the permanent address id of students", "subexpression": "SELECT students.permanent_address_id"}], "number": "Start first query,", "subquery": "SELECT students.permanent_address_id FROM addresses JOIN students ON addresses.address_id = students.current_address_id", "supplement": ""}, {"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Keep the records where the permanent address id of students is not in the first query result", "subexpression": "WHERE students.permanent_address_id NOT IN ( SELECT students.permanent_address_id FROM addresses JOIN students ON addresses.address_id = students.current_address_id)"}, {"explanation": "Return the permanent address id of students", "subexpression": "SELECT students.permanent_address_id"}], "number": "Start second query,", "subquery": "SELECT students.permanent_address_id FROM students WHERE students.permanent_address_id NOT IN ( SELECT students.permanent_address_id FROM addresses JOIN students ON addresses.address_id = students.current_address_id)", "supplement": "second query result uses first query result"}], "entire_SQL": "SELECT students.permanent_address_id FROM students WHERE students.permanent_address_id NOT IN (SELECT students.permanent_address_id FROM addresses JOIN students ON addresses.address_id = students.current_address_id)", "original explanations": [{"explanation": [{"explanation": "In table addresses and table students", "subexpression": "FROM addresses JOIN students ON addresses.address_id = students.current_address_id"}, {"explanation": "Return the permanent address id of students", "subexpression": "SELECT students.permanent_address_id"}], "number": "Start first query,", "subquery": "SELECT students.permanent_address_id FROM addresses JOIN students ON addresses.address_id = students.current_address_id", "supplement": ""}, {"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Keep the records where the permanent address id of students is not in the first query result", "subexpression": "WHERE students.permanent_address_id NOT IN ( SELECT students.permanent_address_id FROM addresses JOIN students ON addresses.address_id = students.current_address_id)"}, {"explanation": "Return the permanent address id of students", "subexpression": "SELECT students.permanent_address_id"}], "number": "Start second query,", "subquery": "SELECT students.permanent_address_id FROM students WHERE students.permanent_address_id NOT IN ( SELECT students.permanent_address_id FROM addresses JOIN students ON addresses.address_id = students.current_address_id)", "supplement": "second query result uses first query result"}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM addresses JOIN students ON addresses.address_id = students.current_address_id"}, {"explanation": "Return the permanent address id of students", "subexpression": "SELECT students.permanent_address_id"}], "number": "Start first query,", "subquery": "SELECT students.permanent_address_id FROM addresses JOIN students ON addresses.address_id = students.current_address_id", "supplement": ""}, {"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Keep the records where the permanent address id of students is not in the first query result", "subexpression": "WHERE students.permanent_address_id NOT IN ( SELECT students.permanent_address_id FROM addresses JOIN students ON addresses.address_id = students.current_address_id)"}, {"explanation": "Return the permanent address id of students", "subexpression": "SELECT students.permanent_address_id"}], "number": "Start second query,", "subquery": "SELECT students.permanent_address_id FROM students WHERE students.permanent_address_id NOT IN ( SELECT students.permanent_address_id FROM addresses JOIN students ON addresses.address_id = students.current_address_id)", "supplement": "second query result uses first query result"}], "duration": 65.64604949951172, "time": "2023-01-04 02:50:30"}
{"question": "How many car makers are there in france?", "dbid": "car_1", "TBid": "car makers", "previous_generated_explanation": [{"explanation": [{"explanation": "In table car makers", "subexpression": "FROM car_makers"}, {"explanation": "Keep the records where the country of car makers is \"france\"", "subexpression": "WHERE car_makers.country = \"france\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM car_makers WHERE car_makers.country = \"france\"", "supplement": ""}], "entire_SQL": "SELECT COUNT( * ) FROM car_makers WHERE car_makers.country = 'france'", "original explanations": [{"explanation": [{"explanation": "In table car makers", "subexpression": "FROM car_makers"}, {"explanation": "Keep the records where the country of car makers is \"france\"", "subexpression": "WHERE car_makers.country = \"france\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM car_makers WHERE car_makers.country = \"france\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table car makers and table countries", "subexpression": "FROM car_makers"}, {"explanation": "Keep the records where the country name  is \"france\"", "subexpression": "WHERE car_makers.country = \"france\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM car_makers WHERE car_makers.country = \"france\"", "supplement": ""}], "duration": 99.74931168556213, "time": "2023-01-04 02:55:44"}
{"question": "What is the average edispl for all volvos?", "dbid": "car_1", "TBid": "cars data", "previous_generated_explanation": [{"explanation": [{"explanation": "In table cars data and table car names", "subexpression": "FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid"}, {"explanation": "Keep the records where the model of car names is \"volvos\"", "subexpression": "WHERE car_names.model = \"volvos\""}, {"explanation": "Return the average value of edispl of cars data", "subexpression": "SELECT AVG ( cars_data.edispl )"}], "number": "Start first query,", "subquery": "SELECT AVG ( cars_data.edispl ) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE car_names.model = \"volvos\"", "supplement": ""}], "entire_SQL": "SELECT AVG( cars_data.edispl ) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE car_names.model = 'volvos'", "original explanations": [{"explanation": [{"explanation": "In table cars data and table car names", "subexpression": "FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid"}, {"explanation": "Keep the records where the model of car names is \"volvos\"", "subexpression": "WHERE car_names.model = \"volvos\""}, {"explanation": "Return the average value of edispl of cars data", "subexpression": "SELECT AVG ( cars_data.edispl )"}], "number": "Start first query,", "subquery": "SELECT AVG ( cars_data.edispl ) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE car_names.model = \"volvos\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table cars data and table car names", "subexpression": "FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid"}, {"explanation": "Keep the records where the model of car names is \"flat\"", "subexpression": "WHERE car_names.model = \"volvos\""}, {"explanation": "Return the average value of edispl of cars data", "subexpression": "SELECT AVG ( cars_data.edispl )"}], "number": "Start first query,", "subquery": "SELECT AVG ( cars_data.edispl ) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE car_names.model = \"volvos\"", "supplement": ""}], "duration": 30.700129985809326, "time": "2023-01-04 04:11:31"}
{"question": "How many 'United Airlines' flights go to Airport 'ASY'?", "dbid": "flight_2", "TBid": "airlines", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flights AND table airports", "subexpression": "FROM flights JOIN airports ON flights.sourceairport = airports.airportcode"}, {"explanation": "Keep the records where the airportname of airports is \"ASY\" AND the airline of airlines is \"United Airlines\"", "subexpression": "WHERE airports.airportname = \"ASY\" AND airlines.airline = \"United Airlines\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.airportname = \"ASY\" AND airlines.airline = \"United Airlines\"", "supplement": ""}], "entire_SQL": "SELECT COUNT( * ) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.airportname = 'ASY' AND airlines.airline = 'United Airlines'", "original explanations": [{"explanation": [{"explanation": "In table flights AND table airports", "subexpression": "FROM flights JOIN airports ON flights.sourceairport = airports.airportcode"}, {"explanation": "Keep the records where the airportname of airports is \"ASY\" AND the airline of airlines is \"United Airlines\"", "subexpression": "WHERE airports.airportname = \"ASY\" AND airlines.airline = \"United Airlines\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.airportname = \"ASY\" AND airlines.airline = \"United Airlines\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flights AND table airports", "subexpression": "FROM flights JOIN airports ON flights.sourceairport = airports.airportcode"}, {"explanation": "Keep the records where the airportcode of airports is \"ASY\" AND the airline of airlines is \"United Airlines\"", "subexpression": "WHERE airports.airportname = \"ASY\" AND airlines.airline = \"United Airlines\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.airportname = \"ASY\" AND airlines.airline = \"United Airlines\"", "supplement": ""}], "duration": 56.95886588096619, "time": "2023-01-04 04:22:10"}
{"question": "How many 'United Airlines' flights go to Airport 'ASY'?", "dbid": "flight_2", "TBid": "airlines", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flights AND table airports", "subexpression": "FROM flights JOIN airports ON flights.sourceairport = airports.airportcode"}, {"explanation": "Keep the records where the airportcode of airports is \"ASY\" AND the airline of airlines is \"United Airlines\"", "subexpression": "WHERE airports.airportcode = \"ASY\" AND airlines.airline = \"United Airlines\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.airportcode = \"ASY\" AND airlines.airline = \"United Airlines\"", "supplement": ""}], "entire_SQL": "SELECT COUNT ( * ) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.airportcode = \"ASY\" AND airlines.airline = \"United Airlines\"", "original explanations": [{"explanation": [{"explanation": "In table flights AND table airports", "subexpression": "FROM flights JOIN airports ON flights.sourceairport = airports.airportcode"}, {"explanation": "Keep the records where the airportcode of airports is \"ASY\" AND the airline of airlines is \"United Airlines\"", "subexpression": "WHERE airports.airportcode = \"ASY\" AND airlines.airline = \"United Airlines\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.airportcode = \"ASY\" AND airlines.airline = \"United Airlines\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flights ", "subexpression": "FROM flights JOIN airports ON flights.sourceairport = airports.airportcode"}, {"explanation": "Keep the records where the airportcode of airports is \"ASY\" AND the airline of airlines is \"United Airlines\"", "subexpression": "WHERE airports.airportcode = \"ASY\" AND airlines.airline = \"United Airlines\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.airportcode = \"ASY\" AND airlines.airline = \"United Airlines\"", "supplement": ""}], "duration": 117.20549440383911, "time": "2023-01-04 04:24:07"}
{"question": "How many 'United Airlines' flights go to Airport 'ASY'?", "dbid": "flight_2", "TBid": "airlines", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the airportcode of airports is \"ASY\" AND the airline of airlines is \"United Airlines\"", "subexpression": "WHERE airports.airportcode = \"ASY\" AND airlines.airline = \"United Airlines\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM flights WHERE airports.airportcode = \"ASY\" AND airlines.airline = \"United Airlines\"", "supplement": ""}], "entire_SQL": "SELECT COUNT ( * ) FROM flights WHERE airports.airportcode = \"ASY\" AND airlines.airline = \"United Airlines\"", "original explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Keep the records where the airportcode of airports is \"ASY\" AND the airline of airlines is \"United Airlines\"", "subexpression": "WHERE airports.airportcode = \"ASY\" AND airlines.airline = \"United Airlines\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM flights WHERE airports.airportcode = \"ASY\" AND airlines.airline = \"United Airlines\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flights", "subexpression": "FROM flights"}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM flights WHERE airports.airportcode = \"ASY\" AND airlines.airline = \"United Airlines\"", "supplement": ""}], "duration": 6.153961896896362, "time": "2023-01-04 04:24:14"}
{"question": "What is the maximum horsepower and the make of the car models with 3 cylinders?", "dbid": "car_1", "TBid": "cars data", "previous_generated_explanation": [{"explanation": [{"explanation": "In table cars data and table car names", "subexpression": "FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid"}, {"explanation": "Keep the records where the cylinders of cars data is 3", "subexpression": "WHERE cars_data.cylinders = 3"}, {"explanation": "Return the maximum value of horsepower of cars data and the maker of car makers", "subexpression": "SELECT MAX ( cars_data.horsepower ) , car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT MAX ( cars_data.horsepower ) , car_makers.maker FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3", "supplement": ""}], "entire_SQL": "SELECT MAX( cars_data.horsepower ) , car_makers.maker FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3", "original explanations": [{"explanation": [{"explanation": "In table cars data and table car names", "subexpression": "FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid"}, {"explanation": "Keep the records where the cylinders of cars data is 3", "subexpression": "WHERE cars_data.cylinders = 3"}, {"explanation": "Return the maximum value of horsepower of cars data and the maker of car makers", "subexpression": "SELECT MAX ( cars_data.horsepower ) , car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT MAX ( cars_data.horsepower ) , car_makers.maker FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table cars data and table car names", "subexpression": "FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid"}, {"explanation": "Keep the records where the cylinders of cars data is 3", "subexpression": "WHERE cars_data.cylinders = 3"}, {"explanation": "Return the maximum value of horsepower of cars data", "subexpression": "SELECT MAX ( cars_data.horsepower ) , car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT MAX ( cars_data.horsepower ) , car_makers.maker FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3", "supplement": ""}], "duration": 38.62775921821594, "time": "2023-01-04 04:37:48"}
{"question": "What is the maximum horsepower and the make of the car models with 3 cylinders?", "dbid": "car_1", "TBid": "car makers", "previous_generated_explanation": [{"explanation": [{"explanation": "In table cars data and table car names", "subexpression": "FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid"}, {"explanation": "Keep the records where the cylinders of cars data is 3", "subexpression": "WHERE cars_data.cylinders = 3"}, {"explanation": "Return the maximum value of horsepower of cars data", "subexpression": "SELECT MAX ( cars_data.horsepower )"}], "number": "Start first query,", "subquery": "SELECT MAX ( cars_data.horsepower ) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3", "supplement": ""}], "entire_SQL": "SELECT MAX( cars_data.horsepower ) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3", "original explanations": [{"explanation": [{"explanation": "In table cars data and table car names", "subexpression": "FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid"}, {"explanation": "Keep the records where the cylinders of cars data is 3", "subexpression": "WHERE cars_data.cylinders = 3"}, {"explanation": "Return the maximum value of horsepower of cars data", "subexpression": "SELECT MAX ( cars_data.horsepower )"}], "number": "Start first query,", "subquery": "SELECT MAX ( cars_data.horsepower ) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table cars data and table car names", "subexpression": "FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid"}, {"explanation": "Keep the records where the cylinders of cars data is 3", "subexpression": "WHERE cars_data.cylinders = 3"}, {"explanation": "Return the maximum value of horsepower of cars data and the maker of car makers", "subexpression": "SELECT MAX ( cars_data.horsepower )"}], "number": "Start first query,", "subquery": "SELECT MAX ( cars_data.horsepower ) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3", "supplement": ""}], "duration": 10.923198938369751, "time": "2023-01-04 04:38:00"}
{"question": "What is the maximum horsepower and the make of the car models with 3 cylinders?", "dbid": "car_1", "TBid": "car makers", "previous_generated_explanation": [{"explanation": [{"explanation": "In table cars data and table car names", "subexpression": "FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid"}, {"explanation": "Keep the records where the cylinders of cars data is 3", "subexpression": "WHERE cars_data.cylinders = 3"}, {"explanation": "Return the maximum value of horsepower of cars data and the maker of car makers", "subexpression": "SELECT MAX ( cars_data.horsepower ) , car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT MAX ( cars_data.horsepower ) , car_makers.maker FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3", "supplement": ""}], "entire_SQL": "SELECT MAX( cars_data.horsepower ) , car_makers.maker FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3", "original explanations": [{"explanation": [{"explanation": "In table cars data and table car names", "subexpression": "FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid"}, {"explanation": "Keep the records where the cylinders of cars data is 3", "subexpression": "WHERE cars_data.cylinders = 3"}, {"explanation": "Return the maximum value of horsepower of cars data and the maker of car makers", "subexpression": "SELECT MAX ( cars_data.horsepower ) , car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT MAX ( cars_data.horsepower ) , car_makers.maker FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table cars data and table car names", "subexpression": "FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid"}, {"explanation": "Keep the records where the cylinders of cars data is 3", "subexpression": "WHERE cars_data.cylinders = 3"}, {"explanation": "Return the maximum value of horsepower of cars data and the maker of car makers", "subexpression": "SELECT MAX ( cars_data.horsepower ) , car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT MAX ( cars_data.horsepower ) , car_makers.maker FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3", "supplement": ""}], "duration": 21.487208366394043, "time": "2023-01-04 04:38:22"}
{"question": "What is the maximum horsepower and the make of the car models with 3 cylinders?", "dbid": "car_1", "TBid": "cars data", "previous_generated_explanation": [{"explanation": [{"explanation": "In table cars data and table car names", "subexpression": "FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid"}, {"explanation": "Keep the records where the cylinders of cars data is 3", "subexpression": "WHERE cars_data.cylinders = 3"}, {"explanation": "Return the maximum value of horsepower of cars data and the maker of car makers", "subexpression": "SELECT MAX ( cars_data.horsepower ) , car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT MAX ( cars_data.horsepower ) , car_makers.maker FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3", "supplement": ""}], "entire_SQL": "SELECT MAX ( cars_data.horsepower ) , car_makers.maker FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3", "original explanations": [{"explanation": [{"explanation": "In table cars data and table car names", "subexpression": "FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid"}, {"explanation": "Keep the records where the cylinders of cars data is 3", "subexpression": "WHERE cars_data.cylinders = 3"}, {"explanation": "Return the maximum value of horsepower of cars data and the maker of car makers", "subexpression": "SELECT MAX ( cars_data.horsepower ) , car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT MAX ( cars_data.horsepower ) , car_makers.maker FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table cars data and table car names", "subexpression": "FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid"}, {"explanation": "Keep the records where the cylinders of cars data is 3", "subexpression": "WHERE cars_data.cylinders = 3"}, {"explanation": "Return the maker of car makers", "subexpression": "SELECT MAX ( cars_data.horsepower ) , car_makers.maker"}], "number": "Start first query,", "subquery": "SELECT MAX ( cars_data.horsepower ) , car_makers.maker FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3", "supplement": ""}], "duration": 27.613688945770264, "time": "2023-01-04 04:38:50"}
{"question": "What is the airport name of the airport \u2018AHT\u2019?", "dbid": "flight_2", "TBid": "airports", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airports is \"AHT\"", "subexpression": "WHERE airports.airportname = \"AHT\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AHT\"", "supplement": ""}], "entire_SQL": "SELECT airports.airportname FROM airports WHERE airports.airportname = 'AHT'", "original explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airports is \"AHT\"", "subexpression": "WHERE airports.airportname = \"AHT\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AHT\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportcode of airports is \"AHT\"", "subexpression": "WHERE airports.airportname = \"AHT\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AHT\"", "supplement": ""}], "duration": 49.734450340270996, "time": "2023-01-04 18:25:13"}
{"question": "What are the names of the singers who are not French citizens?", "dbid": "singer", "TBid": "singer", "previous_generated_explanation": [{"explanation": [{"explanation": "In table singer", "subexpression": "FROM singer"}, {"explanation": "Keep the records where the citizenship of singer is not \"French\"", "subexpression": "WHERE singer.citizenship != \"French\""}, {"explanation": "Return the name of singer", "subexpression": "SELECT singer.name"}], "number": "Start first query,", "subquery": "SELECT singer.name FROM singer WHERE singer.citizenship != \"French\"", "supplement": ""}], "entire_SQL": "SELECT singer.name FROM singer WHERE singer.citizenship != 'French'", "original explanations": [{"explanation": [{"explanation": "In table singer", "subexpression": "FROM singer"}, {"explanation": "Keep the records where the citizenship of singer is not \"French\"", "subexpression": "WHERE singer.citizenship != \"French\""}, {"explanation": "Return the name of singer", "subexpression": "SELECT singer.name"}], "number": "Start first query,", "subquery": "SELECT singer.name FROM singer WHERE singer.citizenship != \"French\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table singer", "subexpression": "FROM singer"}, {"explanation": "Keep the records where the citizenship of singer is not \"France\"", "subexpression": "WHERE singer.citizenship != \"French\""}, {"explanation": "Return the name of singer", "subexpression": "SELECT singer.name"}], "number": "Start first query,", "subquery": "SELECT singer.name FROM singer WHERE singer.citizenship != \"French\"", "supplement": ""}], "duration": 34.0166437625885, "time": "2023-01-04 18:28:17"}
{"question": "Return the names of friends of the high school student Kyle.", "dbid": "network_1", "TBid": "friend", "previous_generated_explanation": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.student_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the friend id of friend", "subexpression": "SELECT friend.friend_id"}], "number": "Start first query,", "subquery": "SELECT friend.friend_id FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "entire_SQL": "SELECT friend.friend_id FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.name = 'Kyle'", "original explanations": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.student_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the friend id of friend", "subexpression": "SELECT friend.friend_id"}], "number": "Start first query,", "subquery": "SELECT friend.friend_id FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.student_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the friend name of friend", "subexpression": "SELECT friend.friend_id"}], "number": "Start first query,", "subquery": "SELECT friend.friend_id FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "duration": 14.423291444778442, "time": "2023-01-04 18:34:57"}
{"question": "Return the names of friends of the high school student Kyle.", "dbid": "network_1", "TBid": "friend", "previous_generated_explanation": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.student_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the friend name of friend", "subexpression": "SELECT friend.friend_name"}], "number": "Start first query,", "subquery": "SELECT friend.friend_name FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "entire_SQL": "SELECT friend.friend_name FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "original explanations": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.student_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the friend name of friend", "subexpression": "SELECT friend.friend_name"}], "number": "Start first query,", "subquery": "SELECT friend.friend_name FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.student_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the friend id of friend", "subexpression": "SELECT friend.friend_name"}], "number": "Start first query,", "subquery": "SELECT friend.friend_name FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "duration": 26.630998611450195, "time": "2023-01-04 18:35:25"}
{"question": "Return the names of friends of the high school student Kyle.", "dbid": "network_1", "TBid": "friend", "previous_generated_explanation": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.student_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the friend id of friend", "subexpression": "SELECT friend.friend_id"}], "number": "Start first query,", "subquery": "SELECT friend.friend_id FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "entire_SQL": "SELECT friend.friend_id FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "original explanations": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.student_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the friend id of friend", "subexpression": "SELECT friend.friend_id"}], "number": "Start first query,", "subquery": "SELECT friend.friend_id FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.student_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the name of the friend id of friend", "subexpression": "SELECT friend.friend_id"}], "number": "Start first query,", "subquery": "SELECT friend.friend_id FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "duration": 35.78445029258728, "time": "2023-01-04 18:36:01"}
{"question": "Return the names of friends of the high school student Kyle.", "dbid": "network_1", "TBid": "friend", "previous_generated_explanation": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.student_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the friend id of friend", "subexpression": "SELECT friend.friend_id"}], "number": "Start first query,", "subquery": "SELECT friend.friend_id FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "entire_SQL": "SELECT friend.friend_id FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "original explanations": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.student_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the friend id of friend", "subexpression": "SELECT friend.friend_id"}], "number": "Start first query,", "subquery": "SELECT friend.friend_id FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.student_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the name ", "subexpression": "SELECT friend.friend_id"}], "number": "Start first query,", "subquery": "SELECT friend.friend_id FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "duration": 19.314611673355103, "time": "2023-01-04 18:36:21"}
{"question": "Return the names of friends of the high school student Kyle.", "dbid": "network_1", "TBid": "highschooler", "previous_generated_explanation": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.student_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the name of highschooler", "subexpression": "SELECT highschooler.name"}], "number": "Start first query,", "subquery": "SELECT highschooler.name FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "entire_SQL": "SELECT highschooler.name FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "original explanations": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.student_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the name of highschooler", "subexpression": "SELECT highschooler.name"}], "number": "Start first query,", "subquery": "SELECT highschooler.name FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.student_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the friend id of friend", "subexpression": "SELECT highschooler.name"}], "number": "Start first query,", "subquery": "SELECT highschooler.name FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "duration": 57.572965145111084, "time": "2023-01-04 18:37:19"}
{"question": "How many ships ended up being 'Captured\u2019 ?", "dbid": "battle_death", "TBid": "battle", "previous_generated_explanation": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the result of battle is \"Captured\"", "subexpression": "WHERE battle.result = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = \"Captured\"", "supplement": ""}], "entire_SQL": "SELECT COUNT( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = 'Captured'", "original explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the result of battle is \"Captured\"", "subexpression": "WHERE battle.result = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = \"Captured\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the disposition is \"Captured\"", "subexpression": "WHERE battle.result = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = \"Captured\"", "supplement": ""}], "duration": 70.09711480140686, "time": "2023-01-04 18:39:32"}
{"question": "How many car models are produced in the usa?\"", "dbid": "car_1", "TBid": "countries", "previous_generated_explanation": [{"explanation": [{"explanation": "In table model list and table car makers", "subexpression": "FROM model_list JOIN car_makers ON model_list.maker = car_makers.id"}, {"explanation": "Keep the records where the country of car makers is \"usa\"", "subexpression": "WHERE car_makers.country = \"usa\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "supplement": ""}], "entire_SQL": "SELECT COUNT( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = 'usa'", "original explanations": [{"explanation": [{"explanation": "In table model list and table car makers", "subexpression": "FROM model_list JOIN car_makers ON model_list.maker = car_makers.id"}, {"explanation": "Keep the records where the country of car makers is \"usa\"", "subexpression": "WHERE car_makers.country = \"usa\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table countries and table maker and table country", "subexpression": "FROM model_list JOIN car_makers ON model_list.maker = car_makers.id"}, {"explanation": "Keep the records where countryname is \"usa\"", "subexpression": "WHERE car_makers.country = \"usa\""}, {"explanation": "Return the number of model", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "supplement": ""}], "duration": 181.94913601875305, "time": "2023-01-06 18:16:59"}
{"question": "What is the airport name of the airport 'KKI\u2019?", "dbid": "flight_2", "TBid": "airports", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airports is \"KKI\"", "subexpression": "WHERE airports.airportname = \"KKI\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"KKI\"", "supplement": ""}], "entire_SQL": "SELECT airports.airportname FROM airports WHERE airports.airportname = 'KKI'", "original explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airports is \"KKI\"", "subexpression": "WHERE airports.airportname = \"KKI\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"KKI\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airportcode \"KKI\"", "subexpression": "WHERE airports.airportname = \"KKI\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"KKI\"", "supplement": ""}], "duration": 80.17590689659119, "time": "2023-01-06 20:43:30"}
{"question": "What is the airport name of the airport 'KKI\u2019?", "dbid": "flight_2", "TBid": "airports", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportcode of airports is \"KK\"", "subexpression": "WHERE airports.airportcode = \"KK\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportcode = \"KK\"", "supplement": ""}], "entire_SQL": "SELECT airports.airportname FROM airports WHERE airports.airportcode = \"KK\"", "original explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportcode of airports is \"KK\"", "subexpression": "WHERE airports.airportcode = \"KK\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportcode = \"KK\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportcode of airports is \"KKI\"", "subexpression": "WHERE airports.airportcode = \"KK\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportcode = \"KK\"", "supplement": ""}], "duration": 17.79150390625, "time": "2023-01-06 20:43:49"}
{"question": "List all the student details in reversed lexicographical order.", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "entire_SQL": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "duration": 77.3672866821289, "time": "2023-01-06 20:51:34"}
{"question": "How many car models are produced in the usa?", "dbid": "car_1", "TBid": "car makers", "previous_generated_explanation": [{"explanation": [{"explanation": "In table model list and table car makers", "subexpression": "FROM model_list JOIN car_makers ON model_list.maker = car_makers.id"}, {"explanation": "Keep the records where the country of car makers is \"usa\"", "subexpression": "WHERE car_makers.country = \"usa\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "supplement": ""}], "entire_SQL": "SELECT COUNT( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = 'usa'", "original explanations": [{"explanation": [{"explanation": "In table model list and table car makers", "subexpression": "FROM model_list JOIN car_makers ON model_list.maker = car_makers.id"}, {"explanation": "Keep the records where the country of car makers is \"usa\"", "subexpression": "WHERE car_makers.country = \"usa\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table model list and table car makers", "subexpression": "FROM model_list JOIN car_makers ON model_list.maker = car_makers.id"}, {"explanation": "Keep the records where the country of car makers is 1", "subexpression": "WHERE car_makers.country = \"usa\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "supplement": ""}], "duration": 96.30493211746216, "time": "2023-01-06 20:57:45"}
{"question": "What is the airport name of the airport 'KKI\u2019?\n", "dbid": "flight_2", "TBid": "airports", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airports is \"KKI\"", "subexpression": "WHERE airports.airportname = \"KKI\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"KKI\"", "supplement": ""}], "entire_SQL": "SELECT airports.airportname FROM airports WHERE airports.airportname = 'KKI'", "original explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airports is \"KKI\"", "subexpression": "WHERE airports.airportname = \"KKI\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"KKI\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportcode of airports is \"KKI\"", "subexpression": "WHERE airports.airportname = \"KKI\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"KKI\"", "supplement": ""}], "duration": 20.380229234695435, "time": "2023-01-08 21:54:11"}
{"question": "List all the student details in reversed lexicographical order.\n", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "entire_SQL": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in decending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "duration": 33.91336798667908, "time": "2023-01-08 21:56:57"}
{"question": "How many different degrees are offered?", "dbid": "student_transcripts_tracking", "TBid": "degree programs", "previous_generated_explanation": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct department id of degree programs", "subexpression": "SELECT COUNT ( DISTINCT degree_programs.department_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_programs.department_id ) FROM degree_programs", "supplement": ""}], "entire_SQL": "SELECT COUNT( DISTINCT degree_programs.department_id ) FROM degree_programs", "original explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct department id of degree programs", "subexpression": "SELECT COUNT ( DISTINCT degree_programs.department_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_programs.department_id ) FROM degree_programs", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct degree program id of degree programs", "subexpression": "SELECT COUNT ( DISTINCT degree_programs.department_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_programs.department_id ) FROM degree_programs", "supplement": ""}], "duration": 53.86781072616577, "time": "2023-01-08 21:59:42"}
{"question": "How many car models are produced in the usa?\"", "dbid": "car_1", "TBid": "model list", "previous_generated_explanation": [{"explanation": [{"explanation": "In table model list and table car makers", "subexpression": "FROM model_list JOIN car_makers ON model_list.maker = car_makers.id"}, {"explanation": "Keep the records where the country of car makers is \"usa\"", "subexpression": "WHERE car_makers.country = \"usa\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "supplement": ""}], "entire_SQL": "SELECT COUNT( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = 'usa'", "original explanations": [{"explanation": [{"explanation": "In table model list and table car makers", "subexpression": "FROM model_list JOIN car_makers ON model_list.maker = car_makers.id"}, {"explanation": "Keep the records where the country of car makers is \"usa\"", "subexpression": "WHERE car_makers.country = \"usa\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table model list and table car makers", "subexpression": "FROM model_list JOIN car_makers ON model_list.maker = car_makers.id"}, {"explanation": "Keep the records where the country of car makers is \"usa\"", "subexpression": "WHERE car_makers.country = \"usa\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "supplement": ""}], "duration": 105.12849712371826, "time": "2023-01-08 22:01:49"}
{"question": "How many car models are produced in the usa?\"", "dbid": "car_1", "TBid": "model list", "previous_generated_explanation": [{"explanation": [{"explanation": "In table model list and table car makers", "subexpression": "FROM model_list JOIN car_makers ON model_list.maker = car_makers.id"}, {"explanation": "Keep the records where the country of car makers is \"usa\"", "subexpression": "WHERE car_makers.country = \"usa\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "supplement": ""}], "entire_SQL": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "original explanations": [{"explanation": [{"explanation": "In table model list and table car makers", "subexpression": "FROM model_list JOIN car_makers ON model_list.maker = car_makers.id"}, {"explanation": "Keep the records where the country of car makers is \"usa\"", "subexpression": "WHERE car_makers.country = \"usa\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table model list and table car makers", "subexpression": "FROM model_list JOIN car_makers ON model_list.maker = car_makers.id"}, {"explanation": "Keep the records where the country of car makers is \"usa\"", "subexpression": "WHERE car_makers.country = \"usa\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "supplement": ""}], "duration": 0.4123525619506836, "time": "2023-01-08 22:01:50"}
{"question": "How many car models are produced in the usa?", "dbid": "car_1", "TBid": "car makers", "previous_generated_explanation": [{"explanation": [{"explanation": "In table model list and table car makers", "subexpression": "FROM model_list JOIN car_makers ON model_list.maker = car_makers.id"}, {"explanation": "Keep the records where the country of car makers is \"usa\"", "subexpression": "WHERE car_makers.country = \"usa\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "supplement": ""}], "entire_SQL": "SELECT COUNT( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = 'usa'", "original explanations": [{"explanation": [{"explanation": "In table model list and table car makers", "subexpression": "FROM model_list JOIN car_makers ON model_list.maker = car_makers.id"}, {"explanation": "Keep the records where the country of car makers is \"usa\"", "subexpression": "WHERE car_makers.country = \"usa\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table model list and table car makers and table countries", "subexpression": "FROM model_list JOIN car_makers ON model_list.maker = car_makers.id"}, {"explanation": "Keep the records where the country of car makers is \"usa\"", "subexpression": "WHERE car_makers.country = \"usa\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "supplement": ""}], "duration": 74.54212260246277, "time": "2023-01-08 22:04:48"}
{"question": "What is the airport name of the airport 'KKI\u2019?", "dbid": "flight_2", "TBid": "airports", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airports is \"KKI\"", "subexpression": "WHERE airports.airportname = \"KKI\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"KKI\"", "supplement": ""}], "entire_SQL": "SELECT airports.airportname FROM airports WHERE airports.airportname = 'KKI'", "original explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airports is \"KKI\"", "subexpression": "WHERE airports.airportname = \"KKI\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"KKI\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportcode of airports is \"KKI\"", "subexpression": "WHERE airports.airportname = \"KKI\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"KKI\"", "supplement": ""}], "duration": 25.240844249725342, "time": "2023-01-09 19:20:52"}
{"question": "List all the student details in reversed lexicographical order.\n", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "entire_SQL": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "duration": 76.11850357055664, "time": "2023-01-09 19:30:25"}
{"question": "List all the student details in reversed lexicographical order.\n", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "entire_SQL": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "duration": 31.566545009613037, "time": "2023-01-09 19:30:58"}
{"question": "How many different degrees are offered?", "dbid": "student_transcripts_tracking", "TBid": "degree programs", "previous_generated_explanation": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct department id of degree programs", "subexpression": "SELECT COUNT ( DISTINCT degree_programs.department_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_programs.department_id ) FROM degree_programs", "supplement": ""}], "entire_SQL": "SELECT COUNT( DISTINCT degree_programs.department_id ) FROM degree_programs", "original explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct department id of degree programs", "subexpression": "SELECT COUNT ( DISTINCT degree_programs.department_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_programs.department_id ) FROM degree_programs", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct degree program id of degree programs", "subexpression": "SELECT COUNT ( DISTINCT degree_programs.department_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_programs.department_id ) FROM degree_programs", "supplement": ""}], "duration": 32.459558963775635, "time": "2023-01-09 19:33:50"}
{"question": "What are the countries having at least one car maker? List name and id.\n", "dbid": "car_1", "TBid": "car makers", "previous_generated_explanation": [{"explanation": [{"explanation": "In table countries and table car makers", "subexpression": "FROM countries JOIN car_makers ON countries.countryid = car_makers.country"}, {"explanation": "Group the records based on the countryid of countries", "subexpression": "GROUP BY countries.countryid"}, {"explanation": "Keep the groups where the number of records is greater than or equal to 1", "subexpression": "HAVING COUNT ( * ) >= 1"}, {"explanation": "Return the countryname of countries and the id of car makers", "subexpression": "SELECT countries.countryname , car_makers.id"}], "number": "Start first query,", "subquery": "SELECT countries.countryname , car_makers.id FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT ( * ) >= 1", "supplement": ""}], "entire_SQL": "SELECT countries.countryname , car_makers.id FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT( * ) >= 1", "original explanations": [{"explanation": [{"explanation": "In table countries and table car makers", "subexpression": "FROM countries JOIN car_makers ON countries.countryid = car_makers.country"}, {"explanation": "Group the records based on the countryid of countries", "subexpression": "GROUP BY countries.countryid"}, {"explanation": "Keep the groups where the number of records is greater than or equal to 1", "subexpression": "HAVING COUNT ( * ) >= 1"}, {"explanation": "Return the countryname of countries and the id of car makers", "subexpression": "SELECT countries.countryname , car_makers.id"}], "number": "Start first query,", "subquery": "SELECT countries.countryname , car_makers.id FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT ( * ) >= 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table countries and table car makers", "subexpression": "FROM countries JOIN car_makers ON countries.countryid = car_makers.country"}, {"explanation": "Group the records based on the countryid of countries", "subexpression": "GROUP BY countries.countryid"}, {"explanation": "Keep the groups where the number of records is greater than or equal to 1", "subexpression": "HAVING COUNT ( * ) >= 1"}, {"explanation": "Return the countryname and id of countries", "subexpression": "SELECT countries.countryname , car_makers.id"}], "number": "Start first query,", "subquery": "SELECT countries.countryname , car_makers.id FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT ( * ) >= 1", "supplement": ""}], "duration": 67.93662333488464, "time": "2023-01-09 19:35:25"}
{"question": "What are the countries having at least one car maker? List name and id.\n", "dbid": "car_1", "TBid": "countries", "previous_generated_explanation": [{"explanation": [{"explanation": "In table countries and table car makers", "subexpression": "FROM countries JOIN car_makers ON countries.countryid = car_makers.country"}, {"explanation": "Group the records based on the countryid of countries", "subexpression": "GROUP BY countries.countryid"}, {"explanation": "Keep the groups where the number of records is greater than or equal to 1", "subexpression": "HAVING COUNT ( * ) >= 1"}, {"explanation": "Return the countryname of countries and the id of  ", "subexpression": "SELECT countries.countryname _.id"}], "number": "Start first query,", "subquery": "SELECT countries.countryname _.id FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT ( * ) >= 1", "supplement": ""}], "entire_SQL": "SELECT countries.countryname _.id FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT ( * ) >= 1", "original explanations": [{"explanation": [{"explanation": "In table countries and table car makers", "subexpression": "FROM countries JOIN car_makers ON countries.countryid = car_makers.country"}, {"explanation": "Group the records based on the countryid of countries", "subexpression": "GROUP BY countries.countryid"}, {"explanation": "Keep the groups where the number of records is greater than or equal to 1", "subexpression": "HAVING COUNT ( * ) >= 1"}, {"explanation": "Return the countryname of countries and the id of  ", "subexpression": "SELECT countries.countryname _.id"}], "number": "Start first query,", "subquery": "SELECT countries.countryname _.id FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT ( * ) >= 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table countries and table car makers", "subexpression": "FROM countries JOIN car_makers ON countries.countryid = car_makers.country"}, {"explanation": "Group the records based on the countryid of countries", "subexpression": "GROUP BY countries.countryid"}, {"explanation": "Keep the groups where the number of records is greater than or equal to 1", "subexpression": "HAVING COUNT ( * ) >= 1"}, {"explanation": "Return the countryname of countries and the id of countries", "subexpression": "SELECT countries.countryname _.id"}], "number": "Start first query,", "subquery": "SELECT countries.countryname _.id FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT ( * ) >= 1", "supplement": ""}], "duration": 8.758867502212524, "time": "2023-01-09 19:35:35"}
{"question": "How many ships ended up being 'Captured\u2019 ?", "dbid": "battle_death", "TBid": "battle", "previous_generated_explanation": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the result of battle is \"Captured\"", "subexpression": "WHERE battle.result = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = \"Captured\"", "supplement": ""}], "entire_SQL": "SELECT COUNT( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = 'Captured'", "original explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the result of battle is \"Captured\"", "subexpression": "WHERE battle.result = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = \"Captured\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the disposition of ship of battle is \"Captured\"", "subexpression": "WHERE battle.result = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = \"Captured\"", "supplement": ""}], "duration": 39.9919114112854, "time": "2023-01-09 19:36:55"}
{"question": "How many ships ended up being 'Captured\u2019 ?", "dbid": "battle_death", "TBid": "battle", "previous_generated_explanation": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the disposition of ship of ship is \"Capt\"", "subexpression": "WHERE ship.disposition_of_ship = \"Capt\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.disposition_of_ship = \"Capt\"", "supplement": ""}], "entire_SQL": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.disposition_of_ship = \"Capt\"", "original explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the disposition of ship of ship is \"Capt\"", "subexpression": "WHERE ship.disposition_of_ship = \"Capt\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.disposition_of_ship = \"Capt\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the disposition of ship of ship is \"Captured\"", "subexpression": "WHERE ship.disposition_of_ship = \"Capt\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.disposition_of_ship = \"Capt\"", "supplement": ""}], "duration": 16.67129421234131, "time": "2023-01-09 19:37:13"}
{"question": "What is the area code in which the most voters voted?", "dbid": "voter_1", "TBid": "area code state", "previous_generated_explanation": [{"explanation": [{"explanation": "In table area code state and table votes", "subexpression": "FROM area_code_state JOIN votes ON area_code_state.state = votes.state"}, {"explanation": "Group the records based on the state of votes", "subexpression": "GROUP BY votes.state"}, {"explanation": "Sort the groups in descending order based on the number of records, and return the first record", "subexpression": "ORDER BY COUNT ( * ) DESC LIMIT 1"}, {"explanation": "Return the area code of area code state", "subexpression": "SELECT area_code_state.area_code"}], "number": "Start first query,", "subquery": "SELECT area_code_state.area_code FROM area_code_state JOIN votes ON area_code_state.state = votes.state GROUP BY votes.state ORDER BY COUNT ( * ) DESC LIMIT 1", "supplement": ""}], "entire_SQL": "SELECT area_code_state.area_code FROM area_code_state JOIN votes ON area_code_state.state = votes.state GROUP BY votes.state ORDER BY COUNT( * ) DESC LIMIT 1", "original explanations": [{"explanation": [{"explanation": "In table area code state and table votes", "subexpression": "FROM area_code_state JOIN votes ON area_code_state.state = votes.state"}, {"explanation": "Group the records based on the state of votes", "subexpression": "GROUP BY votes.state"}, {"explanation": "Sort the groups in descending order based on the number of records, and return the first record", "subexpression": "ORDER BY COUNT ( * ) DESC LIMIT 1"}, {"explanation": "Return the area code of area code state", "subexpression": "SELECT area_code_state.area_code"}], "number": "Start first query,", "subquery": "SELECT area_code_state.area_code FROM area_code_state JOIN votes ON area_code_state.state = votes.state GROUP BY votes.state ORDER BY COUNT ( * ) DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table votes", "subexpression": "FROM area_code_state JOIN votes ON area_code_state.state = votes.state"}, {"explanation": "Group the records based on the first three digits of phone _number", "subexpression": "GROUP BY votes.state"}, {"explanation": "Sort the groups in descending order based on the number of records, and return the first record", "subexpression": "ORDER BY COUNT ( * ) DESC LIMIT 1"}], "number": "Start first query,", "subquery": "SELECT area_code_state.area_code FROM area_code_state JOIN votes ON area_code_state.state = votes.state GROUP BY votes.state ORDER BY COUNT ( * ) DESC LIMIT 1", "supplement": ""}], "duration": 187.9747486114502, "time": "2023-01-09 19:41:10"}
{"question": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.", "dbid": "employee_hire_evaluation", "TBid": "shop", "previous_generated_explanation": [{"explanation": [{"explanation": "In table shop", "subexpression": "FROM shop"}, {"explanation": "Keep the records where the number products of shop is less than 3000", "subexpression": "WHERE shop.number_products < 3000"}, {"explanation": "Return the district of shop", "subexpression": "SELECT shop.district"}], "number": "Start first query,", "subquery": "SELECT shop.district FROM shop WHERE shop.number_products < 3000", "supplement": ""}, {"explanation": [{"explanation": "In table shop", "subexpression": "FROM shop"}, {"explanation": "Keep the records where the number products of shop is greater than 10000", "subexpression": "WHERE shop.number_products > 10000"}, {"explanation": "Return the district of shop", "subexpression": "SELECT shop.district"}], "number": "Start second query,", "subquery": "SELECT shop.district FROM shop WHERE shop.number_products > 10000", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "SELECT *"}], "number": "Start third query,", "subquery": "SELECT *", "supplement": ""}], "entire_SQL": "SELECT shop.district FROM shop WHERE shop.number_products<3000 INTERSECT SELECT shop.district FROM shop WHERE shop.number_products > 10000", "original explanations": [{"explanation": [{"explanation": "In table shop", "subexpression": "FROM shop"}, {"explanation": "Keep the records where the number products of shop is less than 3000", "subexpression": "WHERE shop.number_products < 3000"}, {"explanation": "Return the district of shop", "subexpression": "SELECT shop.district"}], "number": "Start first query,", "subquery": "SELECT shop.district FROM shop WHERE shop.number_products < 3000", "supplement": ""}, {"explanation": [{"explanation": "In table shop", "subexpression": "FROM shop"}, {"explanation": "Keep the records where the number products of shop is greater than 10000", "subexpression": "WHERE shop.number_products > 10000"}, {"explanation": "Return the district of shop", "subexpression": "SELECT shop.district"}], "number": "Start second query,", "subquery": "SELECT shop.district FROM shop WHERE shop.number_products > 10000", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "SELECT *"}], "number": "Start third query,", "subquery": "SELECT *", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table shop", "subexpression": "FROM shop"}, {"explanation": "Keep the records where the number products of shop is less than 3000", "subexpression": "WHERE shop.number_products < 3000"}, {"explanation": "Return the district of shop", "subexpression": "SELECT shop.district"}], "number": "Start first query,", "subquery": "SELECT shop.district FROM shop WHERE shop.number_products < 3000", "supplement": ""}, {"explanation": [{"explanation": "In table shop", "subexpression": "FROM shop"}, {"explanation": "Keep the records where the number products of shop is greater than 10000", "subexpression": "WHERE shop.number_products > 10000"}, {"explanation": "Return the district of shop", "subexpression": "SELECT shop.district"}], "number": "Start second query,", "subquery": "SELECT shop.district FROM shop WHERE shop.number_products > 10000", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "SELECT *"}], "number": "Start third query,", "subquery": "SELECT *", "supplement": ""}], "duration": 24.698256969451904, "time": "2023-01-10 01:05:35"}
{"question": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.", "dbid": "employee_hire_evaluation", "TBid": "shop", "previous_generated_explanation": [{"explanation": [{"explanation": "In table shop", "subexpression": "FROM shop"}, {"explanation": "Keep the records where the number products of shop is less than 3000", "subexpression": "WHERE shop.number_products < 3000"}, {"explanation": "Return all the records and the district of shop", "subexpression": "SELECT * shop.district"}], "number": "Start first query,", "subquery": "SELECT * shop.district FROM shop WHERE shop.number_products < 3000", "supplement": ""}, {"explanation": [{"explanation": "In table shop", "subexpression": "FROM shop"}, {"explanation": "Keep the records where the number products of shop is greater than 10000", "subexpression": "WHERE shop.number_products > 10000"}, {"explanation": "Return all the records and the district of shop", "subexpression": "SELECT * shop.district"}], "number": "Start second query,", "subquery": "SELECT * shop.district FROM shop WHERE shop.number_products > 10000", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "SELECT *"}], "number": "Start third query,", "subquery": "SELECT *", "supplement": ""}], "entire_SQL": "SELECT * shop.district FROM shop WHERE shop.number_products < 3000 intersect SELECT * shop.district FROM shop WHERE shop.number_products > 10000", "original explanations": [{"explanation": [{"explanation": "In table shop", "subexpression": "FROM shop"}, {"explanation": "Keep the records where the number products of shop is less than 3000", "subexpression": "WHERE shop.number_products < 3000"}, {"explanation": "Return all the records and the district of shop", "subexpression": "SELECT * shop.district"}], "number": "Start first query,", "subquery": "SELECT * shop.district FROM shop WHERE shop.number_products < 3000", "supplement": ""}, {"explanation": [{"explanation": "In table shop", "subexpression": "FROM shop"}, {"explanation": "Keep the records where the number products of shop is greater than 10000", "subexpression": "WHERE shop.number_products > 10000"}, {"explanation": "Return all the records and the district of shop", "subexpression": "SELECT * shop.district"}], "number": "Start second query,", "subquery": "SELECT * shop.district FROM shop WHERE shop.number_products > 10000", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "SELECT *"}], "number": "Start third query,", "subquery": "SELECT *", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table shop", "subexpression": "FROM shop"}, {"explanation": "Keep the records where the number products of shop is less than 3000", "subexpression": "WHERE shop.number_products < 3000"}, {"explanation": "Return all the records and the district of shop", "subexpression": "SELECT * shop.district"}], "number": "Start first query,", "subquery": "SELECT * shop.district FROM shop WHERE shop.number_products < 3000", "supplement": ""}, {"explanation": [{"explanation": "In table shop", "subexpression": "FROM shop"}, {"explanation": "Return all the records and the district of shop", "subexpression": "SELECT * shop.district"}], "number": "Start second query,", "subquery": "SELECT * shop.district FROM shop WHERE shop.number_products > 10000", "supplement": ""}, {"explanation": [], "number": "Start third query,", "subquery": "SELECT *", "supplement": ""}], "duration": 53.06554985046387, "time": "2023-01-10 01:06:28"}
{"question": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.", "dbid": "employee_hire_evaluation", "TBid": "shop", "previous_generated_explanation": [{"explanation": [{"explanation": "In table shop", "subexpression": "FROM shop"}, {"explanation": "Keep the records where the number products of shop is less than 3000", "subexpression": "WHERE shop.number_products < 3000"}, {"explanation": "Return all the records and the district of shop", "subexpression": "SELECT * shop.district"}], "number": "Start first query,", "subquery": "SELECT * shop.district FROM shop WHERE shop.number_products < 3000", "supplement": ""}, {"explanation": [{"explanation": "In table shop", "subexpression": "FROM shop"}, {"explanation": "Return all the records and the district of shop", "subexpression": "SELECT * shop.district"}], "number": "Start second query,", "subquery": "SELECT * shop.district FROM shop", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "SELECT *"}], "number": "Start third query,", "subquery": "SELECT *", "supplement": ""}], "entire_SQL": "SELECT * shop.district FROM shop WHERE shop.number_products < 3000 intersect SELECT * shop.district FROM shop", "original explanations": [{"explanation": [{"explanation": "In table shop", "subexpression": "FROM shop"}, {"explanation": "Keep the records where the number products of shop is less than 3000", "subexpression": "WHERE shop.number_products < 3000"}, {"explanation": "Return all the records and the district of shop", "subexpression": "SELECT * shop.district"}], "number": "Start first query,", "subquery": "SELECT * shop.district FROM shop WHERE shop.number_products < 3000", "supplement": ""}, {"explanation": [{"explanation": "In table shop", "subexpression": "FROM shop"}, {"explanation": "Return all the records and the district of shop", "subexpression": "SELECT * shop.district"}], "number": "Start second query,", "subquery": "SELECT * shop.district FROM shop", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "SELECT *"}], "number": "Start third query,", "subquery": "SELECT *", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table shop", "subexpression": "FROM shop"}, {"explanation": "Keep the records where the number products of shop is less than 3000", "subexpression": "WHERE shop.number_products < 3000"}, {"explanation": "Return all the records and the district of shop", "subexpression": "SELECT * shop.district"}], "number": "Start first query,", "subquery": "SELECT * shop.district FROM shop WHERE shop.number_products < 3000", "supplement": ""}, {"explanation": [], "number": "Start second query,", "subquery": "SELECT * shop.district FROM shop", "supplement": ""}, {"explanation": [], "number": "Start third query,", "subquery": "SELECT *", "supplement": ""}], "duration": 6.332554578781128, "time": "2023-01-10 01:06:35"}
{"question": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.", "dbid": "employee_hire_evaluation", "TBid": "shop", "previous_generated_explanation": [{"explanation": [{"explanation": "In table shop", "subexpression": "FROM shop"}, {"explanation": "Keep the records where the number products of shop is less than 3000", "subexpression": "WHERE shop.number_products < 3000"}, {"explanation": "Return all the records and the district of shop", "subexpression": "SELECT * shop.district"}], "number": "Start first query,", "subquery": "SELECT * shop.district FROM shop WHERE shop.number_products < 3000", "supplement": ""}, {"explanation": [{"explanation": "In table shop", "subexpression": "FROM shop"}, {"explanation": "Return all the records and the district of shop", "subexpression": "SELECT * shop.district"}], "number": "Start second query,", "subquery": "SELECT * shop.district FROM shop", "supplement": ""}, {"explanation": [{"explanation": "Keep the intersection of first query result and second query result.", "subexpression": "SELECT *"}], "number": "Start third query,", "subquery": "SELECT *", "supplement": ""}], "entire_SQL": "SELECT * shop.district FROM shop WHERE shop.number_products < 3000 intersect SELECT *", "original explanations": [{"explanation": [{"explanation": "In table shop", "subexpression": "FROM shop"}, {"explanation": "Keep the records where the number products of shop is less than 3000", "subexpression": "WHERE shop.number_products < 3000"}, {"explanation": "Return all the records and the district of shop", "subexpression": "SELECT * shop.district"}], "number": "Start first query,", "subquery": "SELECT * shop.district FROM shop WHERE shop.number_products < 3000", "supplement": ""}, {"explanation": [], "number": "Start second query,", "subquery": "SELECT * shop.district FROM shop", "supplement": ""}, {"explanation": [], "number": "Start third query,", "subquery": "SELECT *", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table shop", "subexpression": "FROM shop"}, {"explanation": "Keep the records where the number products of shop is less than 3000", "subexpression": "WHERE shop.number_products < 3000"}, {"explanation": "Return all the records and the district of shop", "subexpression": "SELECT * shop.district"}], "number": "Start first query,", "subquery": "SELECT * shop.district FROM shop WHERE shop.number_products < 3000", "supplement": ""}, {"explanation": [], "number": "Start second query,", "subquery": "SELECT * shop.district FROM shop", "supplement": ""}, {"explanation": [], "number": "Start third query,", "subquery": "SELECT *", "supplement": ""}], "duration": 1.6533448696136475, "time": "2023-01-10 01:06:37"}
{"question": "show me name", "dbid": "employee_hire_evaluation", "TBid": "shop", "previous_generated_explanation": [{"explanation": [{"explanation": "In table employee", "subexpression": "FROM employee"}, {"explanation": "Return the name of employee", "subexpression": "SELECT employee.name"}], "number": "Start first query,", "subquery": "SELECT employee.name FROM employee", "supplement": ""}], "entire_SQL": "SELECT employee.name FROM employee", "original explanations": [{"explanation": [{"explanation": "In table employee", "subexpression": "FROM employee"}, {"explanation": "Return the name of employee", "subexpression": "SELECT employee.name"}], "number": "Start first query,", "subquery": "SELECT employee.name FROM employee", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table shop", "subexpression": "FROM employee"}, {"explanation": "Keep the records where the number products of shop is less than 3000", "subexpression": "..."}, {"explanation": "Return all the records and the district of shop", "subexpression": "SELECT employee.name"}], "number": "Start first query,", "subquery": "SELECT employee.name FROM employee", "supplement": ""}], "duration": 18.436817169189453, "time": "2023-01-10 01:07:39"}
{"question": "List all the student details in reversed lexicographical order.", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "entire_SQL": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "duration": 43.58789682388306, "time": "2023-01-12 21:03:51"}
{"question": "Show me the last name of the person who owns the yougest dog", "dbid": "dog_kennels", "TBid": "dogs", "previous_generated_explanation": [{"explanation": [{"explanation": "In table owners and table dogs", "subexpression": "FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id"}, {"explanation": "Sort the records in descending order based on the weight of dogs, and return the first record", "subexpression": "ORDER BY dogs.weight DESC LIMIT 1"}, {"explanation": "Return the last name of owners", "subexpression": "SELECT owners.last_name"}], "number": "Start first query,", "subquery": "SELECT owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id ORDER BY dogs.weight DESC LIMIT 1", "supplement": ""}], "entire_SQL": "SELECT owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id ORDER BY dogs.weight DESC LIMIT 1", "original explanations": [{"explanation": [{"explanation": "In table owners and table dogs", "subexpression": "FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id"}, {"explanation": "Sort the records in descending order based on the weight of dogs, and return the first record", "subexpression": "ORDER BY dogs.weight DESC LIMIT 1"}, {"explanation": "Return the last name of owners", "subexpression": "SELECT owners.last_name"}], "number": "Start first query,", "subquery": "SELECT owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id ORDER BY dogs.weight DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table owners and table dogs", "subexpression": "FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id"}, {"explanation": "Sort the records in ascending order based on the age of dogs, and return the first record", "subexpression": "ORDER BY dogs.weight DESC LIMIT 1"}, {"explanation": "Return the last name of owners", "subexpression": "SELECT owners.last_name"}], "number": "Start first query,", "subquery": "SELECT owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id ORDER BY dogs.weight DESC LIMIT 1", "supplement": ""}], "duration": 31.229275226593018, "time": "2023-01-12 21:05:33"}
{"question": "How many different degrees are offered?", "dbid": "student_transcripts_tracking", "TBid": "degree programs", "previous_generated_explanation": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct department id of degree programs", "subexpression": "SELECT COUNT ( DISTINCT degree_programs.department_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_programs.department_id ) FROM degree_programs", "supplement": ""}], "entire_SQL": "SELECT COUNT( DISTINCT degree_programs.department_id ) FROM degree_programs", "original explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct department id of degree programs", "subexpression": "SELECT COUNT ( DISTINCT degree_programs.department_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_programs.department_id ) FROM degree_programs", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct degree program id of degree programs", "subexpression": "SELECT COUNT ( DISTINCT degree_programs.department_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_programs.department_id ) FROM degree_programs", "supplement": ""}], "duration": 15.841739892959595, "time": "2023-01-12 21:06:32"}
{"question": "How many different degrees are offered?", "dbid": "student_transcripts_tracking", "TBid": "degree programs", "previous_generated_explanation": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct degree program id of degree programs", "subexpression": "SELECT COUNT ( DISTINCT degree_programs.degree_program_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_programs.degree_program_id ) FROM degree_programs", "supplement": ""}], "entire_SQL": "SELECT COUNT( DISTINCT degree_programs.degree_program_id ) FROM degree_programs", "original explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct degree program id of degree programs", "subexpression": "SELECT COUNT ( DISTINCT degree_programs.degree_program_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_programs.degree_program_id ) FROM degree_programs", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct degree summary id  of degree programs", "subexpression": "SELECT COUNT ( DISTINCT degree_programs.degree_program_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_programs.degree_program_id ) FROM degree_programs", "supplement": ""}], "duration": 69.88855695724487, "time": "2023-01-12 21:07:43"}
{"question": "How many different degrees are offered?", "dbid": "student_transcripts_tracking", "TBid": "degree programs", "previous_generated_explanation": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct degree summary id of degree summarys", "subexpression": "SELECT COUNT ( DISTINCT degree_summarys.degree_summary_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_summarys.degree_summary_id ) FROM degree_programs", "supplement": ""}], "entire_SQL": "SELECT COUNT ( DISTINCT degree_summarys.degree_summary_id ) FROM degree_programs", "original explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct degree summary id of degree summarys", "subexpression": "SELECT COUNT ( DISTINCT degree_summarys.degree_summary_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_summarys.degree_summary_id ) FROM degree_programs", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct degree summary name of degree summarys", "subexpression": "SELECT COUNT ( DISTINCT degree_summarys.degree_summary_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_summarys.degree_summary_id ) FROM degree_programs", "supplement": ""}], "duration": 11.85692811012268, "time": "2023-01-12 21:07:56"}
{"question": "How many different degrees are offered?", "dbid": "student_transcripts_tracking", "TBid": "degree programs", "previous_generated_explanation": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct degree summary name of degree summarys", "subexpression": "SELECT COUNT ( DISTINCT degree_summarys.degree_summary_name )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_summarys.degree_summary_name ) FROM degree_programs", "supplement": ""}], "entire_SQL": "SELECT COUNT ( DISTINCT degree_summarys.degree_summary_name ) FROM degree_programs", "original explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct degree summary name of degree summarys", "subexpression": "SELECT COUNT ( DISTINCT degree_summarys.degree_summary_name )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_summarys.degree_summary_name ) FROM degree_programs", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct degree summary name of degree programs\n", "subexpression": "SELECT COUNT ( DISTINCT degree_summarys.degree_summary_name )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_summarys.degree_summary_name ) FROM degree_programs", "supplement": ""}], "duration": 12.256752729415894, "time": "2023-01-12 21:08:09"}
{"question": "the name and id of countries having at least one car maker", "dbid": "car_1", "TBid": "countries", "previous_generated_explanation": [{"explanation": [{"explanation": "In table countries and table car makers", "subexpression": "FROM countries JOIN car_makers ON countries.countryid = car_makers.country"}, {"explanation": "Group the records based on the countryid of countries", "subexpression": "GROUP BY countries.countryid"}, {"explanation": "Keep the groups where the number of records is greater than or equal to 1", "subexpression": "HAVING COUNT ( * ) >= 1"}, {"explanation": "Return the countryname of countries and the countryid of countries", "subexpression": "SELECT countries.countryname , countries.countryid"}], "number": "Start first query,", "subquery": "SELECT countries.countryname , countries.countryid FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT ( * ) >= 1", "supplement": ""}], "entire_SQL": "SELECT countries.countryname , countries.countryid FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT( * ) >= 1", "original explanations": [{"explanation": [{"explanation": "In table countries and table car makers", "subexpression": "FROM countries JOIN car_makers ON countries.countryid = car_makers.country"}, {"explanation": "Group the records based on the countryid of countries", "subexpression": "GROUP BY countries.countryid"}, {"explanation": "Keep the groups where the number of records is greater than or equal to 1", "subexpression": "HAVING COUNT ( * ) >= 1"}, {"explanation": "Return the countryname of countries and the countryid of countries", "subexpression": "SELECT countries.countryname , countries.countryid"}], "number": "Start first query,", "subquery": "SELECT countries.countryname , countries.countryid FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT ( * ) >= 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table countries and table car makers", "subexpression": "FROM countries JOIN car_makers ON countries.countryid = car_makers.country"}, {"explanation": "Keep the groups where the number of records is greater than or equal to 1", "subexpression": "HAVING COUNT ( * ) >= 1"}, {"explanation": "Return the countryname of countries and the countryid of countries", "subexpression": "SELECT countries.countryname , countries.countryid"}], "number": "Start first query,", "subquery": "SELECT countries.countryname , countries.countryid FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT ( * ) >= 1", "supplement": ""}], "duration": 93.32696604728699, "time": "2023-01-12 21:10:21"}
{"question": "How many ships ended up being 'Captured\u2019 ?", "dbid": "battle_death", "TBid": "battle", "previous_generated_explanation": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the result of battle is \"Captured\"", "subexpression": "WHERE battle.result = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = \"Captured\"", "supplement": ""}], "entire_SQL": "SELECT COUNT( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = 'Captured'", "original explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the result of battle is \"Captured\"", "subexpression": "WHERE battle.result = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = \"Captured\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the dispotosion of ship is \"Captured\"", "subexpression": "WHERE battle.result = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = \"Captured\"", "supplement": ""}], "duration": 56.89781332015991, "time": "2023-01-12 21:12:14"}
{"question": "How many ships ended up being 'Captured\u2019 ?", "dbid": "battle_death", "TBid": "ship", "previous_generated_explanation": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the dispotosion of ship is \"Captured\"", "subexpression": "WHERE ship.dispotosion = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.dispotosion = \"Captured\"", "supplement": ""}], "entire_SQL": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.dispotosion = \"Captured\"", "original explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the dispotosion of ship is \"Captured\"", "subexpression": "WHERE ship.dispotosion = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.dispotosion = \"Captured\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the dispotosion_of_ship of ship is \"Captured\"", "subexpression": "WHERE ship.dispotosion = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.dispotosion = \"Captured\"", "supplement": ""}], "duration": 9.724034070968628, "time": "2023-01-12 21:12:25"}
{"question": "How many ships ended up being 'Captured\u2019 ?", "dbid": "battle_death", "TBid": "ship", "previous_generated_explanation": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the dispotosion of ship of ship is \"Captured\"", "subexpression": "WHERE ship.dispotosion_of_ship = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.dispotosion_of_ship = \"Captured\"", "supplement": ""}], "entire_SQL": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.dispotosion_of_ship = \"Captured\"", "original explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the dispotosion of ship of ship is \"Captured\"", "subexpression": "WHERE ship.dispotosion_of_ship = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.dispotosion_of_ship = \"Captured\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the disposition of ship of ship is \"Captured\"", "subexpression": "WHERE ship.dispotosion_of_ship = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.dispotosion_of_ship = \"Captured\"", "supplement": ""}], "duration": 12.174261569976807, "time": "2023-01-12 21:12:38"}
{"question": "What are the names of the singers who are not French citizens?", "dbid": "singer", "TBid": "singer", "previous_generated_explanation": [{"explanation": [{"explanation": "In table singer", "subexpression": "FROM singer"}, {"explanation": "Keep the records where the citizenship of singer is not \"French\"", "subexpression": "WHERE singer.citizenship != \"French\""}, {"explanation": "Return the name of singer", "subexpression": "SELECT singer.name"}], "number": "Start first query,", "subquery": "SELECT singer.name FROM singer WHERE singer.citizenship != \"French\"", "supplement": ""}], "entire_SQL": "SELECT singer.name FROM singer WHERE singer.citizenship != 'French'", "original explanations": [{"explanation": [{"explanation": "In table singer", "subexpression": "FROM singer"}, {"explanation": "Keep the records where the citizenship of singer is not \"French\"", "subexpression": "WHERE singer.citizenship != \"French\""}, {"explanation": "Return the name of singer", "subexpression": "SELECT singer.name"}], "number": "Start first query,", "subquery": "SELECT singer.name FROM singer WHERE singer.citizenship != \"French\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table singer", "subexpression": "FROM singer"}, {"explanation": "Keep the records where the citizenship of singer is not \"France\"", "subexpression": "WHERE singer.citizenship != \"French\""}, {"explanation": "Return the name of singer", "subexpression": "SELECT singer.name"}], "number": "Start first query,", "subquery": "SELECT singer.name FROM singer WHERE singer.citizenship != \"French\"", "supplement": ""}], "duration": 71.20712041854858, "time": "2023-01-15 17:13:32"}
{"question": "How many car models are produced in the usa?\"\n", "dbid": "car_1", "TBid": "car makers", "previous_generated_explanation": [{"explanation": [{"explanation": "In table model list and table car makers", "subexpression": "FROM model_list JOIN car_makers ON model_list.maker = car_makers.id"}, {"explanation": "Keep the records where the country of car makers is \"usa\"", "subexpression": "WHERE car_makers.country = \"usa\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "supplement": ""}], "entire_SQL": "SELECT COUNT( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = 'usa'", "original explanations": [{"explanation": [{"explanation": "In table model list and table car makers", "subexpression": "FROM model_list JOIN car_makers ON model_list.maker = car_makers.id"}, {"explanation": "Keep the records where the country of car makers is \"usa\"", "subexpression": "WHERE car_makers.country = \"usa\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table model list and table car makers", "subexpression": "FROM model_list JOIN car_makers ON model_list.maker = car_makers.id"}, {"explanation": "Keep the records where the country of car makers is 1", "subexpression": "WHERE car_makers.country = \"usa\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "supplement": ""}], "duration": 72.68767428398132, "time": "2023-01-15 17:22:08"}
{"question": "What is the maximum horsepower of the car models with 3 cylinders?", "dbid": "car_1", "TBid": "cars data", "previous_generated_explanation": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the cylinders of cars data is 3", "subexpression": "WHERE cars_data.cylinders = 3"}, {"explanation": "Return the maximum value of horsepower of cars data", "subexpression": "SELECT MAX ( cars_data.horsepower )"}], "number": "Start first query,", "subquery": "SELECT MAX ( cars_data.horsepower ) FROM cars_data WHERE cars_data.cylinders = 3", "supplement": ""}], "entire_SQL": "SELECT MAX( cars_data.horsepower ) FROM cars_data WHERE cars_data.cylinders = 3", "original explanations": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the cylinders of cars data is 3", "subexpression": "WHERE cars_data.cylinders = 3"}, {"explanation": "Return the maximum value of horsepower of cars data", "subexpression": "SELECT MAX ( cars_data.horsepower )"}], "number": "Start first query,", "subquery": "SELECT MAX ( cars_data.horsepower ) FROM cars_data WHERE cars_data.cylinders = 3", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the cylinders of cars data is 8", "subexpression": "WHERE cars_data.cylinders = 3"}, {"explanation": "Return the maximum value of horsepower of cars data", "subexpression": "SELECT MAX ( cars_data.horsepower )"}], "number": "Start first query,", "subquery": "SELECT MAX ( cars_data.horsepower ) FROM cars_data WHERE cars_data.cylinders = 3", "supplement": ""}], "duration": 23.015778303146362, "time": "2023-01-16 15:12:05"}
{"question": "What is the maximum horsepower of the car models with 3 cylinders?", "dbid": "car_1", "TBid": "cars data", "previous_generated_explanation": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the cylinders of cars data is 8", "subexpression": "WHERE cars_data.cylinders = 8"}, {"explanation": "Return the maximum value of horsepower of cars data", "subexpression": "SELECT MAX ( cars_data.horsepower )"}], "number": "Start first query,", "subquery": "SELECT MAX ( cars_data.horsepower ) FROM cars_data WHERE cars_data.cylinders = 8", "supplement": ""}], "entire_SQL": "SELECT MAX ( cars_data.horsepower ) FROM cars_data WHERE cars_data.cylinders = 8", "original explanations": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the cylinders of cars data is 8", "subexpression": "WHERE cars_data.cylinders = 8"}, {"explanation": "Return the maximum value of horsepower of cars data", "subexpression": "SELECT MAX ( cars_data.horsepower )"}], "number": "Start first query,", "subquery": "SELECT MAX ( cars_data.horsepower ) FROM cars_data WHERE cars_data.cylinders = 8", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the cylinders of cars data is 8", "subexpression": "WHERE cars_data.cylinders = 8"}, {"explanation": "Return the minimum value of horsepower of cars data", "subexpression": "SELECT MAX ( cars_data.horsepower )"}], "number": "Start first query,", "subquery": "SELECT MAX ( cars_data.horsepower ) FROM cars_data WHERE cars_data.cylinders = 8", "supplement": ""}], "duration": 35.585211753845215, "time": "2023-01-16 15:12:41"}
{"question": "What is the maximum horsepower of the car models with 3 cylinders?", "dbid": "car_1", "TBid": "cars data", "previous_generated_explanation": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the cylinders of cars data is 8", "subexpression": "WHERE cars_data.cylinders = 8"}, {"explanation": "Return the minimum value of horsepower of cars data", "subexpression": "SELECT MIN ( cars_data.horsepower )"}], "number": "Start first query,", "subquery": "SELECT MIN ( cars_data.horsepower ) FROM cars_data WHERE cars_data.cylinders = 8", "supplement": ""}], "entire_SQL": "SELECT MIN( cars_data.horsepower ) FROM cars_data WHERE cars_data.cylinders = 8", "original explanations": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the cylinders of cars data is 8", "subexpression": "WHERE cars_data.cylinders = 8"}, {"explanation": "Return the minimum value of horsepower of cars data", "subexpression": "SELECT MIN ( cars_data.horsepower )"}], "number": "Start first query,", "subquery": "SELECT MIN ( cars_data.horsepower ) FROM cars_data WHERE cars_data.cylinders = 8", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the cylinders of cars data is 8", "subexpression": "WHERE cars_data.cylinders = 8"}, {"explanation": "Return the average value of horsepower of cars data", "subexpression": "SELECT MIN ( cars_data.horsepower )"}], "number": "Start first query,", "subquery": "SELECT MIN ( cars_data.horsepower ) FROM cars_data WHERE cars_data.cylinders = 8", "supplement": ""}], "duration": 35.01165056228638, "time": "2023-01-16 15:13:16"}
{"question": "What is the average horsepower of the car models with 8 cylinders?", "dbid": "car_1", "TBid": "cars data", "previous_generated_explanation": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the cylinders of cars data is \"8\"", "subexpression": "WHERE cars_data.cylinders = \"8\""}, {"explanation": "Return the average value of horsepower of cars data", "subexpression": "SELECT AVG ( cars_data.horsepower )"}], "number": "Start first query,", "subquery": "SELECT AVG ( cars_data.horsepower ) FROM cars_data WHERE cars_data.cylinders = \"8\"", "supplement": ""}], "entire_SQL": "SELECT AVG( cars_data.horsepower ) FROM cars_data WHERE cars_data.cylinders = '8'", "original explanations": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the cylinders of cars data is \"8\"", "subexpression": "WHERE cars_data.cylinders = \"8\""}, {"explanation": "Return the average value of horsepower of cars data", "subexpression": "SELECT AVG ( cars_data.horsepower )"}], "number": "Start first query,", "subquery": "SELECT AVG ( cars_data.horsepower ) FROM cars_data WHERE cars_data.cylinders = \"8\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the cylinders of cars data is \"8\"", "subexpression": "WHERE cars_data.cylinders = \"8\""}, {"explanation": "Return the maximum value of horsepower of cars data", "subexpression": "SELECT AVG ( cars_data.horsepower )"}], "number": "Start first query,", "subquery": "SELECT AVG ( cars_data.horsepower ) FROM cars_data WHERE cars_data.cylinders = \"8\"", "supplement": ""}], "duration": 14.609010457992554, "time": "2023-01-16 15:13:46"}
{"question": "Find number of pets owned by students who are older than 20.", "dbid": "pets_1", "TBid": "has_pet", "previous_generated_explanation": [{"explanation": [{"explanation": "In table has pet and table student", "subexpression": "FROM has_pet JOIN student ON has_pet.stuid = student.stuid"}, {"explanation": "Keep the records where the age of student is greater than 20", "subexpression": "WHERE student.age > 20"}, {"explanation": "Return number of distinct petid of has pet", "subexpression": "SELECT COUNT ( DISTINCT has_pet.petid )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT has_pet.petid ) FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.age > 20", "supplement": ""}], "entire_SQL": "SELECT COUNT( DISTINCT has_pet.petid ) FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.age > 20", "original explanations": [{"explanation": [{"explanation": "In table has pet and table student", "subexpression": "FROM has_pet JOIN student ON has_pet.stuid = student.stuid"}, {"explanation": "Keep the records where the age of student is greater than 20", "subexpression": "WHERE student.age > 20"}, {"explanation": "Return number of distinct petid of has pet", "subexpression": "SELECT COUNT ( DISTINCT has_pet.petid )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT has_pet.petid ) FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.age > 20", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table has pet and table student", "subexpression": "FROM has_pet JOIN student ON has_pet.stuid = student.stuid"}, {"explanation": "Keep the records where the age of student is 20", "subexpression": "WHERE student.age > 20"}, {"explanation": "Return number of distinct petid of has pet", "subexpression": "SELECT COUNT ( DISTINCT has_pet.petid )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT has_pet.petid ) FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.age > 20", "supplement": ""}], "duration": 33.24384260177612, "time": "2023-01-16 15:17:01"}
{"question": "Find number of pets owned by students who are older than 20.", "dbid": "pets_1", "TBid": "has pet", "previous_generated_explanation": [{"explanation": [{"explanation": "In table has pet and table student", "subexpression": "FROM has_pet JOIN student ON has_pet.stuid = student.stuid"}, {"explanation": "Keep the records where the age of student is 20", "subexpression": "WHERE student.age = 20"}, {"explanation": "Return number of distinct petid of has pet", "subexpression": "SELECT COUNT ( DISTINCT has_pet.petid )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT has_pet.petid ) FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.age = 20", "supplement": ""}], "entire_SQL": "SELECT COUNT ( DISTINCT has_pet.petid ) FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.age = 20", "original explanations": [{"explanation": [{"explanation": "In table has pet and table student", "subexpression": "FROM has_pet JOIN student ON has_pet.stuid = student.stuid"}, {"explanation": "Keep the records where the age of student is 20", "subexpression": "WHERE student.age = 20"}, {"explanation": "Return number of distinct petid of has pet", "subexpression": "SELECT COUNT ( DISTINCT has_pet.petid )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT has_pet.petid ) FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.age = 20", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table student", "subexpression": "FROM has_pet JOIN student ON has_pet.stuid = student.stuid"}, {"explanation": "Keep the records where the age of student is 20", "subexpression": "WHERE student.age = 20"}, {"explanation": "Return number of distinct petid of has pet", "subexpression": "SELECT COUNT ( DISTINCT has_pet.petid )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT has_pet.petid ) FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.age = 20", "supplement": ""}], "duration": 21.170153379440308, "time": "2023-01-16 15:17:23"}
{"question": "Find number of pets owned by students who are older than 20.", "dbid": "pets_1", "TBid": "student", "previous_generated_explanation": [{"explanation": [{"explanation": "In table student", "subexpression": "FROM student"}, {"explanation": "Keep the records where the age of student is 20", "subexpression": "WHERE student.age = 20"}, {"explanation": "Return number of distinct petid of has pet", "subexpression": "SELECT COUNT ( DISTINCT has_pet.petid )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT has_pet.petid ) FROM student WHERE student.age = 20", "supplement": ""}], "entire_SQL": "SELECT COUNT ( DISTINCT has_pet.petid ) FROM student WHERE student.age = 20", "original explanations": [{"explanation": [{"explanation": "In table student", "subexpression": "FROM student"}, {"explanation": "Keep the records where the age of student is 20", "subexpression": "WHERE student.age = 20"}, {"explanation": "Return number of distinct petid of has pet", "subexpression": "SELECT COUNT ( DISTINCT has_pet.petid )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT has_pet.petid ) FROM student WHERE student.age = 20", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table student", "subexpression": "FROM student"}, {"explanation": "Keep the records where the age of student is 20", "subexpression": "WHERE student.age = 20"}, {"explanation": "Return number of distinct age", "subexpression": "SELECT COUNT ( DISTINCT has_pet.petid )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT has_pet.petid ) FROM student WHERE student.age = 20", "supplement": ""}], "duration": 9.33502984046936, "time": "2023-01-16 15:17:33"}
{"question": "show me the names of friends of the high school student Kyle", "dbid": "network_1", "TBid": "highschooler", "previous_generated_explanation": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.friend_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the name of highschooler", "subexpression": "SELECT highschooler.name"}], "number": "Start first query,", "subquery": "SELECT highschooler.name FROM friend JOIN highschooler ON friend.friend_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "entire_SQL": "SELECT highschooler.name FROM friend JOIN highschooler ON friend.friend_id = highschooler.id WHERE highschooler.name = 'Kyle'", "original explanations": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.friend_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the name of highschooler", "subexpression": "SELECT highschooler.name"}], "number": "Start first query,", "subquery": "SELECT highschooler.name FROM friend JOIN highschooler ON friend.friend_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.friend_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the name of firend\n", "subexpression": "SELECT highschooler.name"}], "number": "Start first query,", "subquery": "SELECT highschooler.name FROM friend JOIN highschooler ON friend.friend_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "duration": 27.702738523483276, "time": "2023-01-16 16:24:37"}
{"question": "show me the names of friends of the high school student Kyle", "dbid": "network_1", "TBid": "friend", "previous_generated_explanation": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.friend_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the name of firend", "subexpression": "SELECT firend.name"}], "number": "Start first query,", "subquery": "SELECT firend.name FROM friend JOIN highschooler ON friend.friend_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "entire_SQL": "SELECT firend.name FROM friend JOIN highschooler ON friend.friend_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "original explanations": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.friend_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the name of firend", "subexpression": "SELECT firend.name"}], "number": "Start first query,", "subquery": "SELECT firend.name FROM friend JOIN highschooler ON friend.friend_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.friend_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the name of friend", "subexpression": "SELECT firend.name"}], "number": "Start first query,", "subquery": "SELECT firend.name FROM friend JOIN highschooler ON friend.friend_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "duration": 4.323591709136963, "time": "2023-01-16 16:24:41"}
{"question": "show me the names of friends of the high school student Kyle", "dbid": "network_1", "TBid": "friend", "previous_generated_explanation": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.friend_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the name of friend", "subexpression": "SELECT friend.name"}], "number": "Start first query,", "subquery": "SELECT friend.name FROM friend JOIN highschooler ON friend.friend_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "entire_SQL": "SELECT friend.name FROM friend JOIN highschooler ON friend.friend_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "original explanations": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.friend_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the name of friend", "subexpression": "SELECT friend.name"}], "number": "Start first query,", "subquery": "SELECT friend.name FROM friend JOIN highschooler ON friend.friend_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.friend_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\" and her friends\n", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the name of friend", "subexpression": "SELECT friend.name"}], "number": "Start first query,", "subquery": "SELECT friend.name FROM friend JOIN highschooler ON friend.friend_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "duration": 59.42943859100342, "time": "2023-01-16 16:25:41"}
{"question": "count the number of car models produced in usa", "dbid": "car_1", "TBid": "car makers", "previous_generated_explanation": [{"explanation": [{"explanation": "In table model list and table car makers", "subexpression": "FROM model_list JOIN car_makers ON model_list.maker = car_makers.id"}, {"explanation": "Keep the records where the country of car makers is \"usa\"", "subexpression": "WHERE car_makers.country = \"usa\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "supplement": ""}], "entire_SQL": "SELECT COUNT( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = 'usa'", "original explanations": [{"explanation": [{"explanation": "In table model list and table car makers", "subexpression": "FROM model_list JOIN car_makers ON model_list.maker = car_makers.id"}, {"explanation": "Keep the records where the country of car makers is \"usa\"", "subexpression": "WHERE car_makers.country = \"usa\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table model list and table car makers", "subexpression": "FROM model_list JOIN car_makers ON model_list.maker = car_makers.id"}, {"explanation": "Keep the records where the country of car makers is \"1\"", "subexpression": "WHERE car_makers.country = \"usa\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "supplement": ""}], "duration": 44.74957537651062, "time": "2023-01-16 16:30:12"}
{"question": "show me the student details in reversed lexicographical order", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "entire_SQL": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "duration": 38.355698108673096, "time": "2023-01-16 16:31:35"}
{"question": "Show me the lowest total score", "dbid": "body_builder", "TBid": "body builder", "previous_generated_explanation": [{"explanation": [{"explanation": "In table body builder", "subexpression": "FROM body_builder"}, {"explanation": "Sort the records in ascending order based on the total of body builder, and return the first record", "subexpression": "ORDER BY body_builder.total ASC LIMIT 1"}, {"explanation": "Return the total of body builder", "subexpression": "SELECT body_builder.total"}], "number": "Start first query,", "subquery": "SELECT body_builder.total FROM body_builder ORDER BY body_builder.total ASC LIMIT 1", "supplement": ""}], "entire_SQL": "SELECT body_builder.total FROM body_builder ORDER BY body_builder.total ASC LIMIT 1", "original explanations": [{"explanation": [{"explanation": "In table body builder", "subexpression": "FROM body_builder"}, {"explanation": "Sort the records in ascending order based on the total of body builder, and return the first record", "subexpression": "ORDER BY body_builder.total ASC LIMIT 1"}, {"explanation": "Return the total of body builder", "subexpression": "SELECT body_builder.total"}], "number": "Start first query,", "subquery": "SELECT body_builder.total FROM body_builder ORDER BY body_builder.total ASC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table body builder", "subexpression": "FROM body_builder"}, {"explanation": "Sort the records in ascending order based on the snatch of body builder, and return the first record", "subexpression": "ORDER BY body_builder.total ASC LIMIT 1"}, {"explanation": "Return the total of body builder", "subexpression": "SELECT body_builder.total"}], "number": "Start first query,", "subquery": "SELECT body_builder.total FROM body_builder ORDER BY body_builder.total ASC LIMIT 1", "supplement": ""}], "duration": 16.188349962234497, "time": "2023-01-16 19:01:58"}
{"question": "show me the lowest snatch score", "dbid": "body_builder", "TBid": "body builder", "previous_generated_explanation": [{"explanation": [{"explanation": "In table body builder", "subexpression": "FROM body_builder"}, {"explanation": "Sort the records in ascending order based on the snatch of body builder, and return the first record", "subexpression": "ORDER BY body_builder.snatch ASC LIMIT 1"}, {"explanation": "Return the snatch of body builder", "subexpression": "SELECT body_builder.snatch"}], "number": "Start first query,", "subquery": "SELECT body_builder.snatch FROM body_builder ORDER BY body_builder.snatch ASC LIMIT 1", "supplement": ""}], "entire_SQL": "SELECT body_builder.snatch FROM body_builder ORDER BY body_builder.snatch ASC LIMIT 1", "original explanations": [{"explanation": [{"explanation": "In table body builder", "subexpression": "FROM body_builder"}, {"explanation": "Sort the records in ascending order based on the snatch of body builder, and return the first record", "subexpression": "ORDER BY body_builder.snatch ASC LIMIT 1"}, {"explanation": "Return the snatch of body builder", "subexpression": "SELECT body_builder.snatch"}], "number": "Start first query,", "subquery": "SELECT body_builder.snatch FROM body_builder ORDER BY body_builder.snatch ASC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table body builder", "subexpression": "FROM body_builder"}, {"explanation": "Sort the records in ascending order based on the cleanjerk of body builder, and return the first record", "subexpression": "ORDER BY body_builder.snatch ASC LIMIT 1"}, {"explanation": "Return the clean_jerk of body builder", "subexpression": "SELECT body_builder.snatch"}], "number": "Start first query,", "subquery": "SELECT body_builder.snatch FROM body_builder ORDER BY body_builder.snatch ASC LIMIT 1", "supplement": ""}], "duration": 47.267072439193726, "time": "2023-01-16 19:03:03"}
{"question": "show me the lowest snatch score", "dbid": "body_builder", "TBid": "body builder", "previous_generated_explanation": [{"explanation": [{"explanation": "In table body builder", "subexpression": "FROM body_builder"}, {"explanation": "Sort the records in ascending order based on the cleanjerk of body builder, and return the first record", "subexpression": "ORDER BY body_builder.cleanjerk ASC LIMIT 1"}, {"explanation": "Return the clean jerk of body builder", "subexpression": "SELECT body_builder.clean_jerk"}], "number": "Start first query,", "subquery": "SELECT body_builder.clean_jerk FROM body_builder ORDER BY body_builder.cleanjerk ASC LIMIT 1", "supplement": ""}], "entire_SQL": "SELECT body_builder.clean_jerk FROM body_builder ORDER BY body_builder.cleanjerk ASC LIMIT 1", "original explanations": [{"explanation": [{"explanation": "In table body builder", "subexpression": "FROM body_builder"}, {"explanation": "Sort the records in ascending order based on the cleanjerk of body builder, and return the first record", "subexpression": "ORDER BY body_builder.cleanjerk ASC LIMIT 1"}, {"explanation": "Return the clean jerk of body builder", "subexpression": "SELECT body_builder.clean_jerk"}], "number": "Start first query,", "subquery": "SELECT body_builder.clean_jerk FROM body_builder ORDER BY body_builder.cleanjerk ASC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table body builder", "subexpression": "FROM body_builder"}, {"explanation": "Sort the records in ascending order based on the clean jerk of body builder, and return the first record", "subexpression": "ORDER BY body_builder.cleanjerk ASC LIMIT 1"}, {"explanation": "Return the clean jerk of body builder", "subexpression": "SELECT body_builder.clean_jerk"}], "number": "Start first query,", "subquery": "SELECT body_builder.clean_jerk FROM body_builder ORDER BY body_builder.cleanjerk ASC LIMIT 1", "supplement": ""}], "duration": 5.759302616119385, "time": "2023-01-16 19:03:09"}
{"question": "What are the names of the singers who are not French citizens?\n", "dbid": "singer", "TBid": "singer", "previous_generated_explanation": [{"explanation": [{"explanation": "In table singer", "subexpression": "FROM singer"}, {"explanation": "Keep the records where the citizenship of singer is not \"French\"", "subexpression": "WHERE singer.citizenship != \"French\""}, {"explanation": "Return the name of singer", "subexpression": "SELECT singer.name"}], "number": "Start first query,", "subquery": "SELECT singer.name FROM singer WHERE singer.citizenship != \"French\"", "supplement": ""}], "entire_SQL": "SELECT singer.name FROM singer WHERE singer.citizenship != 'French'", "original explanations": [{"explanation": [{"explanation": "In table singer", "subexpression": "FROM singer"}, {"explanation": "Keep the records where the citizenship of singer is not \"French\"", "subexpression": "WHERE singer.citizenship != \"French\""}, {"explanation": "Return the name of singer", "subexpression": "SELECT singer.name"}], "number": "Start first query,", "subquery": "SELECT singer.name FROM singer WHERE singer.citizenship != \"French\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table singer", "subexpression": "FROM singer"}, {"explanation": "Keep the records where the citizenship of singer is not \"France\"", "subexpression": "WHERE singer.citizenship != \"French\""}, {"explanation": "Return the name of singer", "subexpression": "SELECT singer.name"}], "number": "Start first query,", "subquery": "SELECT singer.name FROM singer WHERE singer.citizenship != \"French\"", "supplement": ""}], "duration": 52.219600439071655, "time": "2023-01-16 19:04:51"}
{"question": "List all the student details in reversed lexicographical order", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "entire_SQL": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "duration": 126.79896783828735, "time": "2023-01-16 19:17:07"}
{"question": "How many ships ended up being 'Captured\u2019 ?", "dbid": "battle_death", "TBid": "ship", "previous_generated_explanation": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the result of battle is \"Captured\"", "subexpression": "WHERE battle.result = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = \"Captured\"", "supplement": ""}], "entire_SQL": "SELECT COUNT( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = 'Captured'", "original explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the result of battle is \"Captured\"", "subexpression": "WHERE battle.result = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = \"Captured\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the disposition of ship is \"Captured\"", "subexpression": "WHERE battle.result = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = \"Captured\"", "supplement": ""}], "duration": 42.108500242233276, "time": "2023-01-16 21:05:49"}
{"question": "How many ships ended up being 'Captured\u2019 ?", "dbid": "battle_death", "TBid": "ship", "previous_generated_explanation": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Keep the records where the disposition of ship is \"Captured\"", "subexpression": "WHERE ship.disposition = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM ship WHERE ship.disposition = \"Captured\"", "supplement": ""}], "entire_SQL": "SELECT COUNT ( * ) FROM ship WHERE ship.disposition = \"Captured\"", "original explanations": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Keep the records where the disposition of ship is \"Captured\"", "subexpression": "WHERE ship.disposition = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM ship WHERE ship.disposition = \"Captured\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Keep the records where the disposition of ship is Captured", "subexpression": "WHERE ship.disposition = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM ship WHERE ship.disposition = \"Captured\"", "supplement": ""}], "duration": 49.56054925918579, "time": "2023-01-16 21:06:39"}
{"question": "How many ships ended up being 'Captured\u2019 ?", "dbid": "battle_death", "TBid": "ship", "previous_generated_explanation": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Keep the records where the disposition of ship is \"Captured\"", "subexpression": "WHERE ship.disposition = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM ship WHERE ship.disposition = \"Captured\"", "supplement": ""}], "entire_SQL": "SELECT COUNT ( * ) FROM ship WHERE ship.disposition = \"Captured\"", "original explanations": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Keep the records where the disposition of ship is \"Captured\"", "subexpression": "WHERE ship.disposition = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM ship WHERE ship.disposition = \"Captured\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Keep the records where the disposition of ship is \"Captured\"", "subexpression": "WHERE ship.disposition = \"Captured\""}, {"explanation": "Return everything", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM ship WHERE ship.disposition = \"Captured\"", "supplement": ""}], "duration": 39.95187711715698, "time": "2023-01-16 21:07:20"}
{"question": "How many ships ended up being 'Captured\u2019 ?", "dbid": "battle_death", "TBid": "ship", "previous_generated_explanation": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Keep the records where the disposition of ship is \"Captured\"", "subexpression": "WHERE ship.disposition = \"Captured\""}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM ship WHERE ship.disposition = \"Captured\"", "supplement": ""}], "entire_SQL": "SELECT * FROM ship WHERE ship.disposition = \"Captured\"", "original explanations": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Keep the records where the disposition of ship is \"Captured\"", "subexpression": "WHERE ship.disposition = \"Captured\""}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM ship WHERE ship.disposition = \"Captured\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Keep the records where the disposition of ship is \"Captured\"", "subexpression": "WHERE ship.disposition = \"Captured\""}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM ship WHERE ship.disposition = \"Captured\"", "supplement": ""}], "duration": 34.93273639678955, "time": "2023-01-16 21:07:55"}
{"question": "How many ships ended up being 'Captured\u2019 ?", "dbid": "battle_death", "TBid": "ship", "previous_generated_explanation": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Keep the records where the disposition of ship is \"Captured\"", "subexpression": "WHERE ship.disposition = \"Captured\""}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM ship WHERE ship.disposition = \"Captured\"", "supplement": ""}], "entire_SQL": "SELECT * FROM ship WHERE ship.disposition = \"Captured\"", "original explanations": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Keep the records where the disposition of ship is \"Captured\"", "subexpression": "WHERE ship.disposition = \"Captured\""}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM ship WHERE ship.disposition = \"Captured\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Keep the records where the disposition of ship of ship is \"Captured\"", "subexpression": "WHERE ship.disposition = \"Captured\""}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM ship WHERE ship.disposition = \"Captured\"", "supplement": ""}], "duration": 21.342326164245605, "time": "2023-01-16 21:08:17"}
{"question": "How many ships ended up being 'Captured\u2019 ?", "dbid": "battle_death", "TBid": "ship", "previous_generated_explanation": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Keep the records where the disposition of ship of ship is \"Capt\"", "subexpression": "WHERE ship.disposition_of_ship = \"Capt\""}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM ship WHERE ship.disposition_of_ship = \"Capt\"", "supplement": ""}], "entire_SQL": "SELECT * FROM ship WHERE ship.disposition_of_ship = \"Capt\"", "original explanations": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Keep the records where the disposition of ship of ship is \"Capt\"", "subexpression": "WHERE ship.disposition_of_ship = \"Capt\""}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM ship WHERE ship.disposition_of_ship = \"Capt\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Keep the records where the disposition of ship of ship is \"Cacaptured", "subexpression": "WHERE ship.disposition_of_ship = \"Capt\""}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM ship WHERE ship.disposition_of_ship = \"Capt\"", "supplement": ""}], "duration": 23.467800855636597, "time": "2023-01-16 21:08:41"}
{"question": "How many ships ended up being 'Captured\u2019 ?", "dbid": "battle_death", "TBid": "battle", "previous_generated_explanation": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the result of battle is \"Captured\"", "subexpression": "WHERE battle.result = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = \"Captured\"", "supplement": ""}], "entire_SQL": "SELECT COUNT( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = 'Captured'", "original explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the result of battle is \"Captured\"", "subexpression": "WHERE battle.result = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = \"Captured\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the disposition of ship is \"Captured\"", "subexpression": "WHERE battle.result = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = \"Captured\"", "supplement": ""}], "duration": 15.657176494598389, "time": "2023-01-16 21:09:07"}
{"question": "How many ships ended up being 'Captured\u2019 ?", "dbid": "battle_death", "TBid": "ship", "previous_generated_explanation": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the disposition of ship is \"Captured\"", "subexpression": "WHERE ship.disposition = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.disposition = \"Captured\"", "supplement": ""}], "entire_SQL": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.disposition = \"Captured\"", "original explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the disposition of ship is \"Captured\"", "subexpression": "WHERE ship.disposition = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.disposition = \"Captured\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the disposition of ship of ship is \"Captured\"", "subexpression": "WHERE ship.disposition = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.disposition = \"Captured\"", "supplement": ""}], "duration": 18.689129114151, "time": "2023-01-16 21:09:26"}
{"question": "How many ships ended up being 'Captured\u2019 ?", "dbid": "battle_death", "TBid": "ship", "previous_generated_explanation": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the disposition of ship of ship is \"Capt\"", "subexpression": "WHERE ship.disposition_of_ship = \"Capt\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.disposition_of_ship = \"Capt\"", "supplement": ""}], "entire_SQL": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.disposition_of_ship = \"Capt\"", "original explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the disposition of ship of ship is \"Capt\"", "subexpression": "WHERE ship.disposition_of_ship = \"Capt\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.disposition_of_ship = \"Capt\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the disposition of ship of ship is \"Captured\"", "subexpression": "WHERE ship.disposition_of_ship = \"Capt\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.disposition_of_ship = \"Capt\"", "supplement": ""}], "duration": 10.956863403320312, "time": "2023-01-16 21:09:37"}
{"question": "Return the names of friends of the high school student Kyle.", "dbid": "network_1", "TBid": "friend", "previous_generated_explanation": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.student_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the friend id of friend", "subexpression": "SELECT friend.friend_id"}], "number": "Start first query,", "subquery": "SELECT friend.friend_id FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "entire_SQL": "SELECT friend.friend_id FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.name = 'Kyle'", "original explanations": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.student_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the friend id of friend", "subexpression": "SELECT friend.friend_id"}], "number": "Start first query,", "subquery": "SELECT friend.friend_id FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.student_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the friend id and name of friend", "subexpression": "SELECT friend.friend_id"}], "number": "Start first query,", "subquery": "SELECT friend.friend_id FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "duration": 20.971517324447632, "time": "2023-01-16 21:19:40"}
{"question": "Return the names of friends of the high school student Kyle.", "dbid": "network_1", "TBid": "friend", "previous_generated_explanation": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.student_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the friend id of friend", "subexpression": "SELECT friend.friend_id"}], "number": "Start first query,", "subquery": "SELECT friend.friend_id FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "entire_SQL": "SELECT friend.friend_id FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "original explanations": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.student_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the friend id of friend", "subexpression": "SELECT friend.friend_id"}], "number": "Start first query,", "subquery": "SELECT friend.friend_id FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.student_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the friend id of friend and name of highschooler", "subexpression": "SELECT friend.friend_id"}], "number": "Start first query,", "subquery": "SELECT friend.friend_id FROM friend JOIN highschooler ON friend.student_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "duration": 13.011657476425171, "time": "2023-01-16 21:19:54"}
{"question": "Show me the names of the singers who are not French citizens", "dbid": "singer", "TBid": "singer", "previous_generated_explanation": [{"explanation": [{"explanation": "In table singer", "subexpression": "FROM singer"}, {"explanation": "Keep the records where the citizenship of singer is not \"French\"", "subexpression": "WHERE singer.citizenship != \"French\""}, {"explanation": "Return the name of singer", "subexpression": "SELECT singer.name"}], "number": "Start first query,", "subquery": "SELECT singer.name FROM singer WHERE singer.citizenship != \"French\"", "supplement": ""}], "entire_SQL": "SELECT singer.name FROM singer WHERE singer.citizenship != 'French'", "original explanations": [{"explanation": [{"explanation": "In table singer", "subexpression": "FROM singer"}, {"explanation": "Keep the records where the citizenship of singer is not \"French\"", "subexpression": "WHERE singer.citizenship != \"French\""}, {"explanation": "Return the name of singer", "subexpression": "SELECT singer.name"}], "number": "Start first query,", "subquery": "SELECT singer.name FROM singer WHERE singer.citizenship != \"French\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table singer", "subexpression": "FROM singer"}, {"explanation": "Keep the records where the citizenship of singer is not \"France\"", "subexpression": "WHERE singer.citizenship != \"French\""}, {"explanation": "Return the name of singer", "subexpression": "SELECT singer.name"}], "number": "Start first query,", "subquery": "SELECT singer.name FROM singer WHERE singer.citizenship != \"French\"", "supplement": ""}], "duration": 9.900688409805298, "time": "2023-01-18 23:47:25"}
{"question": "Show me the names of friends of the high school student Kyle", "dbid": "network_1", "TBid": "highschooler", "previous_generated_explanation": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.friend_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the name of highschooler", "subexpression": "SELECT highschooler.name"}], "number": "Start first query,", "subquery": "SELECT highschooler.name FROM friend JOIN highschooler ON friend.friend_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "entire_SQL": "SELECT highschooler.name FROM friend JOIN highschooler ON friend.friend_id = highschooler.id WHERE highschooler.name = 'Kyle'", "original explanations": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.friend_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the name of highschooler", "subexpression": "SELECT highschooler.name"}], "number": "Start first query,", "subquery": "SELECT highschooler.name FROM friend JOIN highschooler ON friend.friend_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.friend_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Query the friend id that has a student id which is 1316", "subexpression": "..."}, {"explanation": "Return the name of highschooler that ", "subexpression": "SELECT highschooler.name"}], "number": "Start first query,", "subquery": "SELECT highschooler.name FROM friend JOIN highschooler ON friend.friend_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "duration": 130.9571373462677, "time": "2023-01-18 23:51:52"}
{"question": "Show me the names of friends of the student Kyle.", "dbid": "network_1", "TBid": "friend", "previous_generated_explanation": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.friend_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the friend id of friend", "subexpression": "SELECT friend.friend_id"}], "number": "Start first query,", "subquery": "SELECT friend.friend_id FROM friend JOIN highschooler ON friend.friend_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "entire_SQL": "SELECT friend.friend_id FROM friend JOIN highschooler ON friend.friend_id = highschooler.id WHERE highschooler.name = 'Kyle'", "original explanations": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.friend_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the friend id of friend", "subexpression": "SELECT friend.friend_id"}], "number": "Start first query,", "subquery": "SELECT friend.friend_id FROM friend JOIN highschooler ON friend.friend_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.friend_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the friend name of friend", "subexpression": "SELECT friend.friend_id"}], "number": "Start first query,", "subquery": "SELECT friend.friend_id FROM friend JOIN highschooler ON friend.friend_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "duration": 24.645050287246704, "time": "2023-01-18 23:53:02"}
{"question": "Show me all the student details in reversed lexicographical order", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "entire_SQL": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "duration": 23.61018705368042, "time": "2023-01-18 23:58:06"}
{"question": "What is the longest bridge in China?", "dbid": "architecture", "TBid": "bridge", "previous_generated_explanation": [{"explanation": [{"explanation": "In table bridge", "subexpression": "FROM bridge"}, {"explanation": "Keep the records where the location of bridge is \"China\"", "subexpression": "WHERE bridge.location = \"China\""}, {"explanation": "Sort the records in descending order based on the length feet of bridge, and return the first record", "subexpression": "ORDER BY bridge.length_feet DESC LIMIT 1"}, {"explanation": "Return the name of bridge", "subexpression": "SELECT bridge.name"}], "number": "Start first query,", "subquery": "SELECT bridge.name FROM bridge WHERE bridge.location = \"China\" ORDER BY bridge.length_feet DESC LIMIT 1", "supplement": ""}], "entire_SQL": "SELECT bridge.name FROM bridge WHERE bridge.location = 'China' ORDER BY bridge.length_feet DESC LIMIT 1", "original explanations": [{"explanation": [{"explanation": "In table bridge", "subexpression": "FROM bridge"}, {"explanation": "Keep the records where the location of bridge is \"China\"", "subexpression": "WHERE bridge.location = \"China\""}, {"explanation": "Sort the records in descending order based on the length feet of bridge, and return the first record", "subexpression": "ORDER BY bridge.length_feet DESC LIMIT 1"}, {"explanation": "Return the name of bridge", "subexpression": "SELECT bridge.name"}], "number": "Start first query,", "subquery": "SELECT bridge.name FROM bridge WHERE bridge.location = \"China\" ORDER BY bridge.length_feet DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table bridge", "subexpression": "FROM bridge"}, {"explanation": "Keep the records where the location of bridge is \"Guangxi , China\"", "subexpression": "WHERE bridge.location = \"China\""}, {"explanation": "Sort the records in descending order based on the length feet of bridge, and return the first record", "subexpression": "ORDER BY bridge.length_feet DESC LIMIT 1"}, {"explanation": "Return the name of bridge", "subexpression": "SELECT bridge.name"}], "number": "Start first query,", "subquery": "SELECT bridge.name FROM bridge WHERE bridge.location = \"China\" ORDER BY bridge.length_feet DESC LIMIT 1", "supplement": ""}], "duration": 61.80132079124451, "time": "2023-01-19 16:52:28"}
{"question": "What is the longest bridge in China?", "dbid": "architecture", "TBid": "bridge", "previous_generated_explanation": [{"explanation": [{"explanation": "In table bridge", "subexpression": "FROM bridge"}, {"explanation": "Keep the records where the location of bridge is \"Guangxi, \" 999, and 9this0is0a0specific0hypen123654777China", "subexpression": "WHERE bridge.location = \"Guangxi, China\""}, {"explanation": "Sort the records in descending order based on the length feet of bridge, and return the first record", "subexpression": "ORDER BY bridge.length_feet DESC LIMIT 1"}, {"explanation": "Return the name of bridge", "subexpression": "SELECT bridge.name"}], "number": "Start first query,", "subquery": "SELECT bridge.name FROM bridge WHERE bridge.location = \"Guangxi, China\" ORDER BY bridge.length_feet DESC LIMIT 1", "supplement": ""}], "entire_SQL": "SELECT bridge.name FROM bridge WHERE bridge.location = \"Guangxi, China\" ORDER BY bridge.length_feet DESC LIMIT 1", "original explanations": [{"explanation": [{"explanation": "In table bridge", "subexpression": "FROM bridge"}, {"explanation": "Keep the records where the location of bridge is \"Guangxi, \" 999, and 9this0is0a0specific0hypen123654777China", "subexpression": "WHERE bridge.location = \"Guangxi, China\""}, {"explanation": "Sort the records in descending order based on the length feet of bridge, and return the first record", "subexpression": "ORDER BY bridge.length_feet DESC LIMIT 1"}, {"explanation": "Return the name of bridge", "subexpression": "SELECT bridge.name"}], "number": "Start first query,", "subquery": "SELECT bridge.name FROM bridge WHERE bridge.location = \"Guangxi, China\" ORDER BY bridge.length_feet DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table bridge", "subexpression": "FROM bridge"}, {"explanation": "Keep the records where the location of bridge is \"Guangxi, China\"", "subexpression": "WHERE bridge.location = \"Guangxi, China\""}, {"explanation": "Sort the records in descending order based on the length feet of bridge, and return the first record", "subexpression": "ORDER BY bridge.length_feet DESC LIMIT 1"}, {"explanation": "Return the name of bridge", "subexpression": "SELECT bridge.name"}], "number": "Start first query,", "subquery": "SELECT bridge.name FROM bridge WHERE bridge.location = \"Guangxi, China\" ORDER BY bridge.length_feet DESC LIMIT 1", "supplement": ""}], "duration": 19.235615253448486, "time": "2023-01-19 16:52:48"}
{"question": "What is the longest bridge in China?", "dbid": "architecture", "TBid": "bridge", "previous_generated_explanation": [{"explanation": [{"explanation": "In table bridge", "subexpression": "FROM bridge"}, {"explanation": "Keep the records where the location of bridge is \"China\" AND the location of bridge is less than the China", "subexpression": "WHERE bridge.location = \"China\" AND bridge.location < China"}, {"explanation": "Sort the records in descending order based on the length feet of bridge, AND return the first record", "subexpression": "ORDER BY bridge.length_feet DESC LIMIT 1"}, {"explanation": "Return the name of bridge", "subexpression": "SELECT bridge.name"}], "number": "Start first query,", "subquery": "SELECT bridge.name FROM bridge WHERE bridge.location = \"China\" AND bridge.location < China ORDER BY bridge.length_feet DESC LIMIT 1", "supplement": ""}], "entire_SQL": "SELECT bridge.name FROM bridge WHERE bridge.location = \"China\" AND bridge.location<China ORDER BY bridge.length_feet DESC LIMIT 1", "original explanations": [{"explanation": [{"explanation": "In table bridge", "subexpression": "FROM bridge"}, {"explanation": "Keep the records where the location of bridge is \"China\" AND the location of bridge is less than the China", "subexpression": "WHERE bridge.location = \"China\" AND bridge.location < China"}, {"explanation": "Sort the records in descending order based on the length feet of bridge, AND return the first record", "subexpression": "ORDER BY bridge.length_feet DESC LIMIT 1"}, {"explanation": "Return the name of bridge", "subexpression": "SELECT bridge.name"}], "number": "Start first query,", "subquery": "SELECT bridge.name FROM bridge WHERE bridge.location = \"China\" AND bridge.location < China ORDER BY bridge.length_feet DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table bridge", "subexpression": "FROM bridge"}, {"explanation": "Sort the records in descending order based on the length feet of bridge, AND return the first record", "subexpression": "ORDER BY bridge.length_feet DESC LIMIT 1"}, {"explanation": "Return the name of bridge", "subexpression": "SELECT bridge.name"}], "number": "Start first query,", "subquery": "SELECT bridge.name FROM bridge WHERE bridge.location = \"China\" AND bridge.location < China ORDER BY bridge.length_feet DESC LIMIT 1", "supplement": ""}], "duration": 39.71275281906128, "time": "2023-01-19 16:53:28"}
{"question": "List the name of teachers whose hometown is not  \u201cLittle Lever Urban District ''.", "dbid": "course_teach", "TBid": "teacher", "previous_generated_explanation": [{"explanation": [{"explanation": "In table teacher", "subexpression": "FROM teacher"}, {"explanation": "Keep the records where the hometown of teacher is not \"Little Lever Urban District\"", "subexpression": "WHERE teacher.hometown != \"Little Lever Urban District\""}, {"explanation": "Return the name of teacher", "subexpression": "SELECT teacher.name"}], "number": "Start first query,", "subquery": "SELECT teacher.name FROM teacher WHERE teacher.hometown != \"Little Lever Urban District\"", "supplement": ""}], "entire_SQL": "SELECT teacher.name FROM teacher WHERE teacher.hometown != 'Little Lever Urban District'", "original explanations": [{"explanation": [{"explanation": "In table teacher", "subexpression": "FROM teacher"}, {"explanation": "Keep the records where the hometown of teacher is not \"Little Lever Urban District\"", "subexpression": "WHERE teacher.hometown != \"Little Lever Urban District\""}, {"explanation": "Return the name of teacher", "subexpression": "SELECT teacher.name"}], "number": "Start first query,", "subquery": "SELECT teacher.name FROM teacher WHERE teacher.hometown != \"Little Lever Urban District\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table teacher", "subexpression": "FROM teacher"}, {"explanation": "Keep the records where the hometown of teacher is \"Little Lever Urban District\"", "subexpression": "WHERE teacher.hometown != \"Little Lever Urban District\""}, {"explanation": "Return the name of teacher", "subexpression": "SELECT teacher.name"}], "number": "Start first query,", "subquery": "SELECT teacher.name FROM teacher WHERE teacher.hometown != \"Little Lever Urban District\"", "supplement": ""}], "duration": 39.26275563240051, "time": "2023-01-19 16:55:47"}
{"question": "List the name of teachers whose hometown is not  \u201cLittle Lever Urban District ''.", "dbid": "course_teach", "TBid": "teacher", "previous_generated_explanation": [{"explanation": [{"explanation": "In table teacher", "subexpression": "FROM teacher"}, {"explanation": "Keep the records where the hometown of teacher is \"Little Lever Urban District\"", "subexpression": "WHERE teacher.hometown = \"Little Lever Urban District\""}, {"explanation": "Return the name of teacher", "subexpression": "SELECT teacher.name"}], "number": "Start first query,", "subquery": "SELECT teacher.name FROM teacher WHERE teacher.hometown = \"Little Lever Urban District\"", "supplement": ""}], "entire_SQL": "SELECT teacher.name FROM teacher WHERE teacher.hometown = \"Little Lever Urban District\"", "original explanations": [{"explanation": [{"explanation": "In table teacher", "subexpression": "FROM teacher"}, {"explanation": "Keep the records where the hometown of teacher is \"Little Lever Urban District\"", "subexpression": "WHERE teacher.hometown = \"Little Lever Urban District\""}, {"explanation": "Return the name of teacher", "subexpression": "SELECT teacher.name"}], "number": "Start first query,", "subquery": "SELECT teacher.name FROM teacher WHERE teacher.hometown = \"Little Lever Urban District\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table teacher", "subexpression": "FROM teacher"}, {"explanation": "Keep the records where the hometown of teacher is not \"Little Lever Urban District\"", "subexpression": "WHERE teacher.hometown = \"Little Lever Urban District\""}, {"explanation": "Return the name of teacher", "subexpression": "SELECT teacher.name"}], "number": "Start first query,", "subquery": "SELECT teacher.name FROM teacher WHERE teacher.hometown = \"Little Lever Urban District\"", "supplement": ""}], "duration": 17.546754837036133, "time": "2023-01-19 16:56:06"}
{"question": "List all the student details in reversed alphabetical order", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "entire_SQL": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "duration": 31.419649839401245, "time": "2023-01-19 16:57:39"}
{"question": "List all the student details in reversed alphabetical order", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details DESC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details DESC", "supplement": ""}], "entire_SQL": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details DESC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details DESC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details DESC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details DESC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details DESC", "supplement": ""}], "duration": 66.29492735862732, "time": "2023-01-19 16:58:46"}
{"question": "How many ships ended up being 'Captured\u2019", "dbid": "battle_death", "TBid": "battle", "previous_generated_explanation": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the result of battle is \"Captured\"", "subexpression": "WHERE battle.result = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = \"Captured\"", "supplement": ""}], "entire_SQL": "SELECT COUNT( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = 'Captured'", "original explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the result of battle is \"Captured\"", "subexpression": "WHERE battle.result = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = \"Captured\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the despositionofship of ship is \"Captured\"", "subexpression": "WHERE battle.result = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = \"Captured\"", "supplement": ""}], "duration": 35.74452233314514, "time": "2023-01-19 17:07:23"}
{"question": "list student details in reverse alphabetical order", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "entire_SQL": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "duration": 18.513181447982788, "time": "2023-01-24 18:31:39"}
{"question": "in car makers give me all unique countries", "dbid": "car_1", "TBid": "car makers", "previous_generated_explanation": [{"explanation": [{"explanation": "In table car makers", "subexpression": "FROM car_makers"}, {"explanation": "Return number of distinct country of car makers", "subexpression": "SELECT COUNT ( DISTINCT car_makers.country )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT car_makers.country ) FROM car_makers", "supplement": ""}], "entire_SQL": "SELECT COUNT( DISTINCT car_makers.country ) FROM car_makers", "original explanations": [{"explanation": [{"explanation": "In table car makers", "subexpression": "FROM car_makers"}, {"explanation": "Return number of distinct country of car makers", "subexpression": "SELECT COUNT ( DISTINCT car_makers.country )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT car_makers.country ) FROM car_makers", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table car makers", "subexpression": "FROM car_makers"}, {"explanation": "Return fullname of distinct country of car makers", "subexpression": "SELECT COUNT ( DISTINCT car_makers.country )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT car_makers.country ) FROM car_makers", "supplement": ""}], "duration": 18.160670518875122, "time": "2023-01-24 18:35:37"}
{"question": "how many ships were captured", "dbid": "battle_death", "TBid": "ship", "previous_generated_explanation": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM ship", "supplement": ""}], "entire_SQL": "SELECT COUNT( * ) FROM ship", "original explanations": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM ship", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "return captured in disposition of ship", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM ship", "supplement": ""}], "duration": 39.87658333778381, "time": "2023-01-24 18:38:54"}
{"question": "Who owns the youngest dog? Give me his or her last name.", "dbid": "dog_kennels", "TBid": "dogs", "previous_generated_explanation": [{"explanation": [{"explanation": "In table dogs", "subexpression": "FROM dogs"}, {"explanation": "Return the minimum value of age of dogs", "subexpression": "SELECT MIN ( dogs.age )"}], "number": "Start first query,", "subquery": "SELECT MIN ( dogs.age ) FROM dogs", "supplement": ""}, {"explanation": [{"explanation": "In table owners and table dogs", "subexpression": "FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id"}, {"explanation": "Keep the records where the age of dogs is the first query result", "subexpression": "WHERE dogs.age = ( SELECT MIN(dogs.age) FROM dogs)"}, {"explanation": "Return the last name of owners", "subexpression": "SELECT owners.last_name"}], "number": "Start second query,", "subquery": "SELECT owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.age = ( SELECT MIN(dogs.age) FROM dogs)", "supplement": "second query result uses first query result"}], "entire_SQL": "SELECT owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.age = (SELECT MIN( dogs.age ) FROM dogs)", "original explanations": [{"explanation": [{"explanation": "In table dogs", "subexpression": "FROM dogs"}, {"explanation": "Return the minimum value of age of dogs", "subexpression": "SELECT MIN ( dogs.age )"}], "number": "Start first query,", "subquery": "SELECT MIN ( dogs.age ) FROM dogs", "supplement": ""}, {"explanation": [{"explanation": "In table owners and table dogs", "subexpression": "FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id"}, {"explanation": "Keep the records where the age of dogs is the first query result", "subexpression": "WHERE dogs.age = ( SELECT MIN(dogs.age) FROM dogs)"}, {"explanation": "Return the last name of owners", "subexpression": "SELECT owners.last_name"}], "number": "Start second query,", "subquery": "SELECT owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.age = ( SELECT MIN(dogs.age) FROM dogs)", "supplement": "second query result uses first query result"}], "edited explanations": [{"explanation": [{"explanation": "In table dogs", "subexpression": "FROM dogs"}, {"explanation": "Return the minimum value of age of dogs", "subexpression": "SELECT MIN ( dogs.age )"}], "number": "Start first query,", "subquery": "SELECT MIN ( dogs.age ) FROM dogs", "supplement": ""}, {"explanation": [], "number": "Start second query,", "subquery": "SELECT owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.age = ( SELECT MIN(dogs.age) FROM dogs)", "supplement": "second query result uses first query result"}], "duration": 12.953618288040161, "time": "2023-01-24 19:12:52"}
{"question": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table addresses and table students", "subexpression": "FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id"}, {"explanation": "Keep the records where the country of addresses is \"Haiti\" OR the cell mobile number of students is \"09700166582\"", "subexpression": "WHERE addresses.country = \"Haiti\" OR students.cell_mobile_number = \"09700166582\""}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE addresses.country = \"Haiti\" OR students.cell_mobile_number = \"09700166582\"", "supplement": ""}], "entire_SQL": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE addresses.country = 'Haiti' OR students.cell_mobile_number = '09700166582'", "original explanations": [{"explanation": [{"explanation": "In table addresses and table students", "subexpression": "FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id"}, {"explanation": "Keep the records where the country of addresses is \"Haiti\" OR the cell mobile number of students is \"09700166582\"", "subexpression": "WHERE addresses.country = \"Haiti\" OR students.cell_mobile_number = \"09700166582\""}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE addresses.country = \"Haiti\" OR students.cell_mobile_number = \"09700166582\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table addresses and table students", "subexpression": "FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id"}, {"explanation": "Keep the records where the country of addresses is \"Haiti\" ", "subexpression": "WHERE addresses.country = \"Haiti\" OR students.cell_mobile_number = \"09700166582\""}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE addresses.country = \"Haiti\" OR students.cell_mobile_number = \"09700166582\"", "supplement": ""}], "duration": 36.5618999004364, "time": "2023-01-24 19:16:12"}
{"question": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table addresses and table students", "subexpression": "FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id"}, {"explanation": "Keep the records where the country of addresses is    of \"Haiti\"", "subexpression": "WHERE addresses.country = \"Haiti\" .__ ="}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE addresses.country = \"Haiti\" .__ =", "supplement": ""}], "entire_SQL": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE addresses.country = \"Haiti\" .__ =", "original explanations": [{"explanation": [{"explanation": "In table addresses and table students", "subexpression": "FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id"}, {"explanation": "Keep the records where the country of addresses is    of \"Haiti\"", "subexpression": "WHERE addresses.country = \"Haiti\" .__ ="}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE addresses.country = \"Haiti\" .__ =", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table addresses and table students", "subexpression": "FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id"}, {"explanation": "Keep the records where the cell mobile number of students is \"09700166582\"", "subexpression": "WHERE addresses.country = \"Haiti\" .__ ="}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE addresses.country = \"Haiti\" .__ =", "supplement": ""}], "duration": 14.101914882659912, "time": "2023-01-24 19:16:26"}
{"question": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table addresses and table students", "subexpression": "FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id"}, {"explanation": "Keep the records where the cell mobile number of students is 82", "subexpression": "WHERE students.cell_mobile_number = 82"}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE students.cell_mobile_number = 82", "supplement": ""}], "entire_SQL": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE students.cell_mobile_number = 82", "original explanations": [{"explanation": [{"explanation": "In table addresses and table students", "subexpression": "FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id"}, {"explanation": "Keep the records where the cell mobile number of students is 82", "subexpression": "WHERE students.cell_mobile_number = 82"}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE students.cell_mobile_number = 82", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table addresses and table students", "subexpression": "FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id"}, {"explanation": "Keep the records where the cell mobile number of students is \"09700166582\"", "subexpression": "WHERE students.cell_mobile_number = 82"}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE addresses.country = \"Haiti\" .__ =", "supplement": ""}], "duration": 6.451694965362549, "time": "2023-01-24 19:16:33"}
{"question": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table addresses and table students", "subexpression": "FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id"}, {"explanation": "Keep the records where the cell mobile number of students is \"09700166582\"", "subexpression": "WHERE students.cell_mobile_number = \"09700166582\""}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE students.cell_mobile_number = \"09700166582\"", "supplement": ""}], "entire_SQL": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE students.cell_mobile_number = \"09700166582\"", "original explanations": [{"explanation": [{"explanation": "In table addresses and table students", "subexpression": "FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id"}, {"explanation": "Keep the records where the cell mobile number of students is \"09700166582\"", "subexpression": "WHERE students.cell_mobile_number = \"09700166582\""}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE students.cell_mobile_number = \"09700166582\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table addresses and table students", "subexpression": "FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id"}, {"explanation": "Keep the records where the country of addresses is \"Haiti\" ", "subexpression": "WHERE addresses.country = \"Haiti\"  .__ = "}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE addresses.country = \"Haiti\" OR students.cell_mobile_number = \"09700166582\"", "supplement": ""}], "duration": 21.25776505470276, "time": "2023-01-24 19:16:55"}
{"question": "what is the most recent treatment", "dbid": "dog_kennels", "TBid": "treatments", "previous_generated_explanation": [{"explanation": [{"explanation": "In table treatments", "subexpression": "FROM treatments"}, {"explanation": "Return the maximum value of date of treatment of treatments", "subexpression": "SELECT MAX ( treatments.date_of_treatment )"}], "number": "Start first query,", "subquery": "SELECT MAX ( treatments.date_of_treatment ) FROM treatments", "supplement": ""}, {"explanation": [{"explanation": "In table treatments", "subexpression": "FROM treatments"}, {"explanation": "Keep the records where the date of treatment of treatments is the first query result", "subexpression": "WHERE treatments.date_of_treatment = ( SELECT MAX(treatments.date_of_treatment) FROM treatments)"}, {"explanation": "Return the date of treatment of treatments", "subexpression": "SELECT treatments.date_of_treatment"}], "number": "Start second query,", "subquery": "SELECT treatments.date_of_treatment FROM treatments WHERE treatments.date_of_treatment = ( SELECT MAX(treatments.date_of_treatment) FROM treatments)", "supplement": "second query result uses first query result"}], "entire_SQL": "SELECT treatments.date_of_treatment FROM treatments WHERE treatments.date_of_treatment = (SELECT MAX( treatments.date_of_treatment ) FROM treatments)", "original explanations": [{"explanation": [{"explanation": "In table treatments", "subexpression": "FROM treatments"}, {"explanation": "Return the maximum value of date of treatment of treatments", "subexpression": "SELECT MAX ( treatments.date_of_treatment )"}], "number": "Start first query,", "subquery": "SELECT MAX ( treatments.date_of_treatment ) FROM treatments", "supplement": ""}, {"explanation": [{"explanation": "In table treatments", "subexpression": "FROM treatments"}, {"explanation": "Keep the records where the date of treatment of treatments is the first query result", "subexpression": "WHERE treatments.date_of_treatment = ( SELECT MAX(treatments.date_of_treatment) FROM treatments)"}, {"explanation": "Return the date of treatment of treatments", "subexpression": "SELECT treatments.date_of_treatment"}], "number": "Start second query,", "subquery": "SELECT treatments.date_of_treatment FROM treatments WHERE treatments.date_of_treatment = ( SELECT MAX(treatments.date_of_treatment) FROM treatments)", "supplement": "second query result uses first query result"}], "edited explanations": [{"explanation": [{"explanation": "In table treatments", "subexpression": "FROM treatments"}, {"explanation": "Return the maximum value of date of treatment of treatments", "subexpression": "SELECT MAX ( treatments.date_of_treatment )"}], "number": "Start first query,", "subquery": "SELECT MAX ( treatments.date_of_treatment ) FROM treatments", "supplement": ""}, {"explanation": [{"explanation": "In table treatments", "subexpression": "FROM treatments"}, {"explanation": "Keep the records where the date of treatment of treatments is the first query result", "subexpression": "WHERE treatments.date_of_treatment = ( SELECT MAX(treatments.date_of_treatment) FROM treatments)"}, {"explanation": "Return the date of treatment of treatments", "subexpression": "SELECT treatments.date_of_treatment"}], "number": "Start second query,", "subquery": "SELECT treatments.date_of_treatment FROM treatments WHERE treatments.date_of_treatment = ( SELECT MAX(treatments.date_of_treatment) FROM treatments)", "supplement": "second query result uses first query result"}], "duration": 19.672283172607422, "time": "2023-01-24 19:19:31"}
{"question": "Show me the most recent treatment", "dbid": "dog_kennels", "TBid": "treatments", "previous_generated_explanation": [{"explanation": [{"explanation": "In table treatments", "subexpression": "FROM treatments"}, {"explanation": "Sort the records in descending order based on the date of treatment of treatments, and return the first record", "subexpression": "ORDER BY treatments.date_of_treatment DESC LIMIT 1"}, {"explanation": "Return the date of treatment of treatments", "subexpression": "SELECT treatments.date_of_treatment"}], "number": "Start first query,", "subquery": "SELECT treatments.date_of_treatment FROM treatments ORDER BY treatments.date_of_treatment DESC LIMIT 1", "supplement": ""}], "entire_SQL": "SELECT treatments.date_of_treatment FROM treatments ORDER BY treatments.date_of_treatment DESC LIMIT 1", "original explanations": [{"explanation": [{"explanation": "In table treatments", "subexpression": "FROM treatments"}, {"explanation": "Sort the records in descending order based on the date of treatment of treatments, and return the first record", "subexpression": "ORDER BY treatments.date_of_treatment DESC LIMIT 1"}, {"explanation": "Return the date of treatment of treatments", "subexpression": "SELECT treatments.date_of_treatment"}], "number": "Start first query,", "subquery": "SELECT treatments.date_of_treatment FROM treatments ORDER BY treatments.date_of_treatment DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table treatments", "subexpression": "FROM treatments"}, {"explanation": "Sort the records in descending order based on the date of treatment of treatments, and return the first record", "subexpression": "ORDER BY treatments.date_of_treatment DESC LIMIT 1"}, {"explanation": "Return everything of treatments", "subexpression": "SELECT treatments.date_of_treatment"}], "number": "Start first query,", "subquery": "SELECT treatments.date_of_treatment FROM treatments ORDER BY treatments.date_of_treatment DESC LIMIT 1", "supplement": ""}], "duration": 10.754892587661743, "time": "2023-01-24 19:19:53"}
{"question": "Show me the most recent treatment", "dbid": "dog_kennels", "TBid": "treatments", "previous_generated_explanation": [{"explanation": [{"explanation": "In table treatments", "subexpression": "FROM treatments"}, {"explanation": "Sort the records in descending order based on the date of treatment of treatments, and return the first record", "subexpression": "ORDER BY treatments.date_of_treatment DESC LIMIT 1"}, {"explanation": "Return the dog id of treatments", "subexpression": "SELECT treatments.dog_id"}], "number": "Start first query,", "subquery": "SELECT treatments.dog_id FROM treatments ORDER BY treatments.date_of_treatment DESC LIMIT 1", "supplement": ""}], "entire_SQL": "SELECT treatments.dog_id FROM treatments ORDER BY treatments.date_of_treatment DESC LIMIT 1", "original explanations": [{"explanation": [{"explanation": "In table treatments", "subexpression": "FROM treatments"}, {"explanation": "Sort the records in descending order based on the date of treatment of treatments, and return the first record", "subexpression": "ORDER BY treatments.date_of_treatment DESC LIMIT 1"}, {"explanation": "Return the dog id of treatments", "subexpression": "SELECT treatments.dog_id"}], "number": "Start first query,", "subquery": "SELECT treatments.dog_id FROM treatments ORDER BY treatments.date_of_treatment DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table treatments", "subexpression": "FROM treatments"}, {"explanation": "Sort the records in descending order based on the date of treatment of treatments, and return the first record", "subexpression": "ORDER BY treatments.date_of_treatment DESC LIMIT 1"}, {"explanation": "Return all", "subexpression": "SELECT treatments.dog_id"}], "number": "Start first query,", "subquery": "SELECT treatments.date_of_treatment FROM treatments ORDER BY treatments.date_of_treatment DESC LIMIT 1", "supplement": ""}], "duration": 8.587825059890747, "time": "2023-01-24 19:20:02"}
{"question": "What is the airport name of the airport 'KKI\u2019?", "dbid": "flight_2", "TBid": "airports", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airports is \"KKI\"", "subexpression": "WHERE airports.airportname = \"KKI\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"KKI\"", "supplement": ""}], "entire_SQL": "SELECT airports.airportname FROM airports WHERE airports.airportname = 'KKI'", "original explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airports is \"KKI\"", "subexpression": "WHERE airports.airportname = \"KKI\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"KKI\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportcode of airports is \"KKI\"", "subexpression": "WHERE airports.airportname = \"KKI\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"KKI\"", "supplement": ""}], "duration": 15.172417640686035, "time": "2023-01-25 16:01:02"}
{"question": "List all the student details in reversed alphabetical order", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "entire_SQL": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the firstname of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "duration": 51.81942343711853, "time": "2023-01-25 16:05:32"}
{"question": "List all the student details in reversed alphabetical order", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the first name of students", "subexpression": "ORDER BY students.first_name ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.first_name ASC", "supplement": ""}], "entire_SQL": "SELECT students.other_student_details FROM students ORDER BY students.first_name ASC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the first name of students", "subexpression": "ORDER BY students.first_name ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.first_name ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the first name of students", "subexpression": "ORDER BY students.first_name ASC"}, {"explanation": "Return the firstname of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.first_name ASC", "supplement": ""}], "duration": 23.883288621902466, "time": "2023-01-25 16:05:57"}
{"question": "List all the student details in reversed alphabetical order", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the first name of students", "subexpression": "ORDER BY students.first_name ASC"}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM students ORDER BY students.first_name ASC", "supplement": ""}], "entire_SQL": "SELECT students.first_name FROM students ORDER BY students.first_name ASC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the first name of students", "subexpression": "ORDER BY students.first_name ASC"}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM students ORDER BY students.first_name ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in decending order based on the first name of students", "subexpression": "ORDER BY students.first_name ASC"}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM students ORDER BY students.first_name ASC", "supplement": ""}], "duration": 75.43960452079773, "time": "2023-01-25 16:07:13"}
{"question": "List all the student details in reversed alphabetical order", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the first name of students", "subexpression": "ORDER BY students.first_name ASC"}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM students ORDER BY students.first_name ASC", "supplement": ""}], "entire_SQL": "SELECT students.first_name FROM students ORDER BY students.first_name ASC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the first name of students", "subexpression": "ORDER BY students.first_name ASC"}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM students ORDER BY students.first_name ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the first name of students", "subexpression": "ORDER BY students.first_name ASC"}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM students ORDER BY students.first_name ASC", "supplement": ""}], "duration": 13.034945249557495, "time": "2023-01-25 16:07:27"}
{"question": "give me the car names of cars made in the USA", "dbid": "car_1", "TBid": "car_names", "previous_generated_explanation": [{"explanation": [{"explanation": "In table car makers and table countries", "subexpression": "FROM car_makers JOIN countries ON car_makers.country = countries.countryid"}, {"explanation": "Keep the records where the countryname of countries is \"USA\"", "subexpression": "WHERE countries.countryname = \"USA\""}, {"explanation": "Return the make of car names", "subexpression": "SELECT car_names.make"}], "number": "Start first query,", "subquery": "SELECT car_names.make FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = \"USA\"", "supplement": ""}], "entire_SQL": "SELECT car_names.make FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = 'USA'", "original explanations": [{"explanation": [{"explanation": "In table car makers and table countries", "subexpression": "FROM car_makers JOIN countries ON car_makers.country = countries.countryid"}, {"explanation": "Keep the records where the countryname of countries is \"USA\"", "subexpression": "WHERE countries.countryname = \"USA\""}, {"explanation": "Return the make of car names", "subexpression": "SELECT car_names.make"}], "number": "Start first query,", "subquery": "SELECT car_names.make FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = \"USA\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table car makers and table countries", "subexpression": "FROM car_makers JOIN countries ON car_makers.country = countries.countryid"}, {"explanation": "Keep the records where the countryname of countries is \"USA\"", "subexpression": "WHERE countries.countryname = \"USA\""}, {"explanation": "Return the make of car names", "subexpression": "SELECT car_names.make"}], "number": "Start first query,", "subquery": "SELECT car_names.make FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = \"USA\"", "supplement": ""}], "duration": 13.544196128845215, "time": "2023-01-25 19:15:22"}
{"question": "give me the car names of cars made in the USA", "dbid": "car_1", "TBid": "countries", "previous_generated_explanation": [{"explanation": [{"explanation": "In table car makers and table countries", "subexpression": "FROM car_makers JOIN countries ON car_makers.country = countries.countryid"}, {"explanation": "Keep the records where the countryname of countries is \"USA\"", "subexpression": "WHERE countries.countryname = \"USA\""}, {"explanation": "Return the make of car names", "subexpression": "SELECT car_names.make"}], "number": "Start first query,", "subquery": "SELECT car_names.make FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = \"USA\"", "supplement": ""}], "entire_SQL": "SELECT car_names.make FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = \"USA\"", "original explanations": [{"explanation": [{"explanation": "In table car makers and table countries", "subexpression": "FROM car_makers JOIN countries ON car_makers.country = countries.countryid"}, {"explanation": "Keep the records where the countryname of countries is \"USA\"", "subexpression": "WHERE countries.countryname = \"USA\""}, {"explanation": "Return the make of car names", "subexpression": "SELECT car_names.make"}], "number": "Start first query,", "subquery": "SELECT car_names.make FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = \"USA\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table car makers and table countries", "subexpression": "FROM car_makers JOIN countries ON car_makers.country = countries.countryid"}, {"explanation": "Keep the records where the countryname of countries is \"use\"", "subexpression": "WHERE countries.countryname = \"USA\""}, {"explanation": "Return the make of car names", "subexpression": "SELECT car_names.make"}], "number": "Start first query,", "subquery": "SELECT car_names.make FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = \"USA\"", "supplement": ""}], "duration": 27.208452939987183, "time": "2023-01-25 19:15:49"}
{"question": "give me the car names of cars made in the USA", "dbid": "car_1", "TBid": "countries", "previous_generated_explanation": [{"explanation": [{"explanation": "In table car makers and table countries", "subexpression": "FROM car_makers JOIN countries ON car_makers.country = countries.countryid"}, {"explanation": "Keep the records where the countryname of countries is \"use\"", "subexpression": "WHERE countries.countryname = \"use\""}, {"explanation": "Return the make of car names", "subexpression": "SELECT car_names.make"}], "number": "Start first query,", "subquery": "SELECT car_names.make FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = \"use\"", "supplement": ""}], "entire_SQL": "SELECT car_names.make FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = \"use\"", "original explanations": [{"explanation": [{"explanation": "In table car makers and table countries", "subexpression": "FROM car_makers JOIN countries ON car_makers.country = countries.countryid"}, {"explanation": "Keep the records where the countryname of countries is \"use\"", "subexpression": "WHERE countries.countryname = \"use\""}, {"explanation": "Return the make of car names", "subexpression": "SELECT car_names.make"}], "number": "Start first query,", "subquery": "SELECT car_names.make FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = \"use\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table car makers and table countries", "subexpression": "FROM car_makers JOIN countries ON car_makers.country = countries.countryid"}, {"explanation": "Keep the records where the countryname of countries is \"usa\"", "subexpression": "WHERE countries.countryname = \"use\""}, {"explanation": "Return the make of car names", "subexpression": "SELECT car_names.make"}], "number": "Start first query,", "subquery": "SELECT car_names.make FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = \"use\"", "supplement": ""}], "duration": 9.750429391860962, "time": "2023-01-25 19:16:00"}
{"question": "give me the car names of cars made in the USA", "dbid": "car_1", "TBid": "car names", "previous_generated_explanation": [{"explanation": [{"explanation": "In table car makers and table countries", "subexpression": "FROM car_makers JOIN countries ON car_makers.country = countries.countryid"}, {"explanation": "Keep the records where the countryname of countries is \"usa\"", "subexpression": "WHERE countries.countryname = \"usa\""}, {"explanation": "Return the make of car names", "subexpression": "SELECT car_names.make"}], "number": "Start first query,", "subquery": "SELECT car_names.make FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = \"usa\"", "supplement": ""}], "entire_SQL": "SELECT car_names.make FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = \"usa\"", "original explanations": [{"explanation": [{"explanation": "In table car makers and table countries", "subexpression": "FROM car_makers JOIN countries ON car_makers.country = countries.countryid"}, {"explanation": "Keep the records where the countryname of countries is \"usa\"", "subexpression": "WHERE countries.countryname = \"usa\""}, {"explanation": "Return the make of car names", "subexpression": "SELECT car_names.make"}], "number": "Start first query,", "subquery": "SELECT car_names.make FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = \"usa\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table car makers and table countries", "subexpression": "FROM car_makers JOIN countries ON car_makers.country = countries.countryid"}, {"explanation": "Keep the records where the countryname of countries is \"usa\"", "subexpression": "WHERE countries.countryname = \"usa\""}, {"explanation": "Return the make of car names", "subexpression": "SELECT car_names.make"}], "number": "Start first query,", "subquery": "SELECT car_names.make FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = \"usa\"", "supplement": ""}], "duration": 40.89860558509827, "time": "2023-01-25 19:16:41"}
{"question": "give me the car names of cars made in the USA", "dbid": "car_1", "TBid": "countries", "previous_generated_explanation": [{"explanation": [{"explanation": "In table car makers and table countries", "subexpression": "FROM car_makers JOIN countries ON car_makers.country = countries.countryid"}, {"explanation": "Keep the records where the countryname of countries is \"usa\"", "subexpression": "WHERE countries.countryname = \"usa\""}, {"explanation": "Return the make of car names", "subexpression": "SELECT car_names.make"}], "number": "Start first query,", "subquery": "SELECT car_names.make FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = \"usa\"", "supplement": ""}], "entire_SQL": "SELECT car_names.make FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = \"usa\"", "original explanations": [{"explanation": [{"explanation": "In table car makers and table countries", "subexpression": "FROM car_makers JOIN countries ON car_makers.country = countries.countryid"}, {"explanation": "Keep the records where the countryname of countries is \"usa\"", "subexpression": "WHERE countries.countryname = \"usa\""}, {"explanation": "Return the make of car names", "subexpression": "SELECT car_names.make"}], "number": "Start first query,", "subquery": "SELECT car_names.make FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = \"usa\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table car names and table countries", "subexpression": "FROM car_makers JOIN countries ON car_makers.country = countries.countryid"}, {"explanation": "Keep the records where the countryname of countries is \"usa\"", "subexpression": "WHERE countries.countryname = \"usa\""}, {"explanation": "Return the make of car names", "subexpression": "SELECT car_names.make"}], "number": "Start first query,", "subquery": "SELECT car_names.make FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = \"usa\"", "supplement": ""}], "duration": 91.70131731033325, "time": "2023-01-25 19:18:13"}
{"question": "List all the student details in reversed alphabetical order.", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "entire_SQL": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "duration": 67.4205174446106, "time": "2023-01-25 19:25:22"}
{"question": "What is the average horsepower of the car models with 8 cylinders?\n", "dbid": "car_1", "TBid": "cars data", "previous_generated_explanation": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the cylinders of cars data is \"8\"", "subexpression": "WHERE cars_data.cylinders = \"8\""}, {"explanation": "Return the average value of horsepower of cars data", "subexpression": "SELECT AVG ( cars_data.horsepower )"}], "number": "Start first query,", "subquery": "SELECT AVG ( cars_data.horsepower ) FROM cars_data WHERE cars_data.cylinders = \"8\"", "supplement": ""}], "entire_SQL": "SELECT AVG( cars_data.horsepower ) FROM cars_data WHERE cars_data.cylinders = '8'", "original explanations": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the cylinders of cars data is \"8\"", "subexpression": "WHERE cars_data.cylinders = \"8\""}, {"explanation": "Return the average value of horsepower of cars data", "subexpression": "SELECT AVG ( cars_data.horsepower )"}], "number": "Start first query,", "subquery": "SELECT AVG ( cars_data.horsepower ) FROM cars_data WHERE cars_data.cylinders = \"8\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the cylinders of cars data is \"8\"", "subexpression": "WHERE cars_data.cylinders = \"8\""}, {"explanation": "Return the average value of horsepower of cars data where cylinders of cars data is \"8\"", "subexpression": "SELECT AVG ( cars_data.horsepower )"}], "number": "Start first query,", "subquery": "SELECT AVG ( cars_data.horsepower ) FROM cars_data WHERE cars_data.cylinders = \"8\"", "supplement": ""}], "duration": 62.723395586013794, "time": "2023-01-25 19:27:48"}
{"question": "What is the average horsepower of the car models with 8 cylinders?\n", "dbid": "car_1", "TBid": "cars data", "previous_generated_explanation": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the cylinders of cars data is \"8\"", "subexpression": "WHERE cars_data.cylinders = \"8\""}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM cars_data WHERE cars_data.cylinders = \"8\"", "supplement": ""}], "entire_SQL": "SELECT * FROM cars_data WHERE cars_data.cylinders = \"8\"", "original explanations": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the cylinders of cars data is \"8\"", "subexpression": "WHERE cars_data.cylinders = \"8\""}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM cars_data WHERE cars_data.cylinders = \"8\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the cylinders of cars data is \"8\"", "subexpression": "WHERE cars_data.cylinders = \"8\""}, {"explanation": "Return the average value of horsepower of cars data where cylinders of cars data is \"8\"", "subexpression": "WHERE cars_data.cylinders = 8"}], "number": "Start first query,", "subquery": "SELECT AVG ( cars_data.horsepower ) FROM cars_data WHERE cars_data.cylinders = \"8\"", "supplement": ""}], "duration": 15.881908655166626, "time": "2023-01-25 19:28:04"}
{"question": "How many different degrees are offered?", "dbid": "student_transcripts_tracking", "TBid": "degree programs", "previous_generated_explanation": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct department id of degree programs", "subexpression": "SELECT COUNT ( DISTINCT degree_programs.department_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_programs.department_id ) FROM degree_programs", "supplement": ""}], "entire_SQL": "SELECT COUNT( DISTINCT degree_programs.department_id ) FROM degree_programs", "original explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct department id of degree programs", "subexpression": "SELECT COUNT ( DISTINCT degree_programs.department_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_programs.department_id ) FROM degree_programs", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct degree program id of degree programs", "subexpression": "SELECT COUNT ( DISTINCT degree_programs.department_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_programs.department_id ) FROM degree_programs", "supplement": ""}], "duration": 139.08659958839417, "time": "2023-01-25 19:31:12"}
{"question": "What is the airport name of the airport 'KKI\u2019", "dbid": "flight_2", "TBid": "airports", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airports is \"KKI\"", "subexpression": "WHERE airports.airportname = \"KKI\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"KKI\"", "supplement": ""}], "entire_SQL": "SELECT airports.airportname FROM airports WHERE airports.airportname = 'KKI'", "original explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airports is \"KKI\"", "subexpression": "WHERE airports.airportname = \"KKI\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"KKI\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportcode of airports is \"KKI\"", "subexpression": "WHERE airports.airportname = \"KKI\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"KKI\"", "supplement": ""}], "duration": 23.931170225143433, "time": "2023-01-31 18:10:42"}
{"question": "List all the student details in reversed alphabetical order", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "entire_SQL": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "duration": 14.628425359725952, "time": "2023-01-31 18:14:52"}
{"question": "How many ships ended up being 'Captured", "dbid": "battle_death", "TBid": "ship", "previous_generated_explanation": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the result of battle is \"Captured\"", "subexpression": "WHERE battle.result = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = \"Captured\"", "supplement": ""}], "entire_SQL": "SELECT COUNT( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = 'Captured'", "original explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the result of battle is \"Captured\"", "subexpression": "WHERE battle.result = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = \"Captured\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the disposition of ship is \"Captured\"", "subexpression": "WHERE battle.result = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = \"Captured\"", "supplement": ""}], "duration": 130.82516813278198, "time": "2023-01-31 18:20:58"}
{"question": "How many ships ended up being 'Captured", "dbid": "battle_death", "TBid": "ship", "previous_generated_explanation": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the disposition of ship is \"Captured\"", "subexpression": "WHERE ship.disposition = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.disposition = \"Captured\"", "supplement": ""}], "entire_SQL": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.disposition = \"Captured\"", "original explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the disposition of ship is \"Captured\"", "subexpression": "WHERE ship.disposition = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.disposition = \"Captured\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the disposition of ship is \"Captured\"", "subexpression": "WHERE ship.disposition = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.disposition = \"Captured\"", "supplement": ""}], "duration": 17.820640802383423, "time": "2023-01-31 18:21:17"}
{"question": "How many ships ended up being 'Captured", "dbid": "battle_death", "TBid": "ship", "previous_generated_explanation": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Keep the records where the disposition of ship is \"Captured\"", "subexpression": "WHERE ship.disposition = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM ship WHERE ship.disposition = \"Captured\"", "supplement": ""}], "entire_SQL": "SELECT COUNT ( * ) FROM ship WHERE ship.disposition = \"Captured\"", "original explanations": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Keep the records where the disposition of ship is \"Captured\"", "subexpression": "WHERE ship.disposition = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM ship WHERE ship.disposition = \"Captured\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Keep the records where the disposition _of ship is \"Captured\"", "subexpression": "WHERE ship.disposition = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM ship WHERE ship.disposition = \"Captured\"", "supplement": ""}], "duration": 32.320687770843506, "time": "2023-01-31 18:21:50"}
{"question": "How many ships ended up being 'Captured", "dbid": "battle_death", "TBid": "ship", "previous_generated_explanation": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Keep the records where the disposition of ship of ship is \"Capt\"", "subexpression": "WHERE ship.disposition_of_ship = \"Capt\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM ship WHERE ship.disposition_of_ship = \"Capt\"", "supplement": ""}], "entire_SQL": "SELECT COUNT ( * ) FROM ship WHERE ship.disposition_of_ship = \"Capt\"", "original explanations": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Keep the records where the disposition of ship of ship is \"Capt\"", "subexpression": "WHERE ship.disposition_of_ship = \"Capt\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM ship WHERE ship.disposition_of_ship = \"Capt\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Keep the records where the disposition of ship of ship is \"Captured\"", "subexpression": "WHERE ship.disposition_of_ship = \"Capt\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM ship WHERE ship.disposition_of_ship = \"Capt\"", "supplement": ""}], "duration": 15.09477949142456, "time": "2023-01-31 18:22:06"}
{"question": "who is the player with the highest batting average", "dbid": "baseball_1", "TBid": "player", "previous_generated_explanation": [{"explanation": [{"explanation": "In table player", "subexpression": "FROM player"}, {"explanation": "Group the records based on the bats of player", "subexpression": "GROUP BY player.bats"}, {"explanation": "Sort the records in descending order based on the bats of player, and return the first record", "subexpression": "ORDER BY player.bats DESC LIMIT 1"}, {"explanation": "Return the bats of player", "subexpression": "SELECT player.bats"}], "number": "Start first query,", "subquery": "SELECT player.bats FROM player GROUP BY player.bats ORDER BY player.bats DESC LIMIT 1", "supplement": ""}], "entire_SQL": "SELECT player.bats FROM player GROUP BY player.bats ORDER BY player.bats DESC LIMIT 1", "original explanations": [{"explanation": [{"explanation": "In table player", "subexpression": "FROM player"}, {"explanation": "Group the records based on the bats of player", "subexpression": "GROUP BY player.bats"}, {"explanation": "Sort the records in descending order based on the bats of player, and return the first record", "subexpression": "ORDER BY player.bats DESC LIMIT 1"}, {"explanation": "Return the bats of player", "subexpression": "SELECT player.bats"}], "number": "Start first query,", "subquery": "SELECT player.bats FROM player GROUP BY player.bats ORDER BY player.bats DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table player", "subexpression": "FROM player"}, {"explanation": "Group the records based on the rbi of player", "subexpression": "GROUP BY player.bats"}, {"explanation": "Sort the records in descending order based on the bats of player, and return the first record", "subexpression": "ORDER BY player.bats DESC LIMIT 1"}, {"explanation": "Return the bats of player", "subexpression": "SELECT player.bats"}], "number": "Start first query,", "subquery": "SELECT player.bats FROM player GROUP BY player.bats ORDER BY player.bats DESC LIMIT 1", "supplement": ""}], "duration": 43.374245405197144, "time": "2023-02-01 13:09:11"}
{"question": "who is the player with the highest batting average", "dbid": "baseball_1", "TBid": "player", "previous_generated_explanation": [{"explanation": [{"explanation": "In table player", "subexpression": "FROM player"}, {"explanation": "Group the records based on the rbi of player", "subexpression": "GROUP BY player.rbi"}, {"explanation": "Sort the records in descending order based on the bats of player, and return the first record", "subexpression": "ORDER BY player.bats DESC LIMIT 1"}, {"explanation": "Return the bats of player", "subexpression": "SELECT player.bats"}], "number": "Start first query,", "subquery": "SELECT player.bats FROM player GROUP BY player.rbi ORDER BY player.bats DESC LIMIT 1", "supplement": ""}], "entire_SQL": "SELECT player.bats FROM player GROUP BY player.rbi ORDER BY player.bats DESC LIMIT 1", "original explanations": [{"explanation": [{"explanation": "In table player", "subexpression": "FROM player"}, {"explanation": "Group the records based on the rbi of player", "subexpression": "GROUP BY player.rbi"}, {"explanation": "Sort the records in descending order based on the bats of player, and return the first record", "subexpression": "ORDER BY player.bats DESC LIMIT 1"}, {"explanation": "Return the bats of player", "subexpression": "SELECT player.bats"}], "number": "Start first query,", "subquery": "SELECT player.bats FROM player GROUP BY player.rbi ORDER BY player.bats DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table player", "subexpression": "FROM player"}, {"explanation": "Group the records based on the rbi of player", "subexpression": "GROUP BY player.rbi"}, {"explanation": "Return the bats of player", "subexpression": "SELECT player.bats"}], "number": "Start first query,", "subquery": "SELECT player.bats FROM player GROUP BY player.rbi ORDER BY player.bats DESC LIMIT 1", "supplement": ""}], "duration": 8.879422187805176, "time": "2023-02-01 13:09:21"}
{"question": "which player had the earliest final game", "dbid": "baseball_1", "TBid": "player", "previous_generated_explanation": [{"explanation": [{"explanation": "In table player", "subexpression": "FROM player"}, {"explanation": "Sort the records in ascending order based on the final game of player, and return the first record", "subexpression": "ORDER BY player.final_game ASC LIMIT 1"}, {"explanation": "Return the final game of player", "subexpression": "SELECT player.final_game"}], "number": "Start first query,", "subquery": "SELECT player.final_game FROM player ORDER BY player.final_game ASC LIMIT 1", "supplement": ""}], "entire_SQL": "SELECT player.final_game FROM player ORDER BY player.final_game ASC LIMIT 1", "original explanations": [{"explanation": [{"explanation": "In table player", "subexpression": "FROM player"}, {"explanation": "Sort the records in ascending order based on the final game of player, and return the first record", "subexpression": "ORDER BY player.final_game ASC LIMIT 1"}, {"explanation": "Return the final game of player", "subexpression": "SELECT player.final_game"}], "number": "Start first query,", "subquery": "SELECT player.final_game FROM player ORDER BY player.final_game ASC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table player", "subexpression": "FROM player"}, {"explanation": "Sort the records in ascending order based on the final game of player, and return the first record", "subexpression": "ORDER BY player.final_game ASC LIMIT 1"}, {"explanation": "Return the name of player", "subexpression": "SELECT player.final_game"}], "number": "Start first query,", "subquery": "SELECT player.final_game FROM player ORDER BY player.final_game ASC LIMIT 1", "supplement": ""}], "duration": 14.905660629272461, "time": "2023-02-01 13:11:11"}
{"question": "what is the abbreviation for delta airlines", "dbid": "flight_2", "TBid": "airlines", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Keep the records where the airline of airlines is \"delta\"", "subexpression": "WHERE airlines.airline = \"delta\""}, {"explanation": "Return the abbreviation of airlines", "subexpression": "SELECT airlines.abbreviation"}], "number": "Start first query,", "subquery": "SELECT airlines.abbreviation FROM airlines WHERE airlines.airline = \"delta\"", "supplement": ""}], "entire_SQL": "SELECT airlines.abbreviation FROM airlines WHERE airlines.airline = 'delta'", "original explanations": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Keep the records where the airline of airlines is \"delta\"", "subexpression": "WHERE airlines.airline = \"delta\""}, {"explanation": "Return the abbreviation of airlines", "subexpression": "SELECT airlines.abbreviation"}], "number": "Start first query,", "subquery": "SELECT airlines.abbreviation FROM airlines WHERE airlines.airline = \"delta\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Keep the records where the airline of airlines is \"delta airlines\"", "subexpression": "WHERE airlines.airline = \"delta\""}, {"explanation": "Return the abbreviation of airlines", "subexpression": "SELECT airlines.abbreviation"}], "number": "Start first query,", "subquery": "SELECT airlines.abbreviation FROM airlines WHERE airlines.airline = \"delta\"", "supplement": ""}], "duration": 6.851385593414307, "time": "2023-02-01 13:12:55"}
{"question": "what is the abbreviation for delta airlines", "dbid": "flight_2", "TBid": "airlines", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Keep the records where the uid of airlines is \"d\"", "subexpression": "WHERE airlines.uid = \"d\""}, {"explanation": "Return the abbreviation of airlines", "subexpression": "SELECT airlines.abbreviation"}], "number": "Start first query,", "subquery": "SELECT airlines.abbreviation FROM airlines WHERE airlines.uid = \"d\"", "supplement": ""}], "entire_SQL": "SELECT airlines.abbreviation FROM airlines WHERE airlines.uid = \"d\"", "original explanations": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Keep the records where the uid of airlines is \"d\"", "subexpression": "WHERE airlines.uid = \"d\""}, {"explanation": "Return the abbreviation of airlines", "subexpression": "SELECT airlines.abbreviation"}], "number": "Start first query,", "subquery": "SELECT airlines.abbreviation FROM airlines WHERE airlines.uid = \"d\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Keep the records where the airline of airlines is \"delta airlines\"\n\"", "subexpression": "WHERE airlines.uid = \"d\""}, {"explanation": "Return the abbreviation of airlines", "subexpression": "SELECT airlines.abbreviation"}], "number": "Start first query,", "subquery": "SELECT airlines.abbreviation FROM airlines WHERE airlines.uid = \"d\"", "supplement": ""}], "duration": 18.7010281085968, "time": "2023-02-01 13:13:14"}
{"question": "what is the abbreviation for delta airlines", "dbid": "flight_2", "TBid": "airlines", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Keep the records where the uid of airlines is \"d\"", "subexpression": "WHERE airlines.uid = \"d\""}, {"explanation": "Return the abbreviation of airlines", "subexpression": "SELECT airlines.abbreviation"}], "number": "Start first query,", "subquery": "SELECT airlines.abbreviation FROM airlines WHERE airlines.uid = \"d\"", "supplement": ""}], "entire_SQL": "SELECT airlines.abbreviation FROM airlines WHERE airlines.uid = \"d\"", "original explanations": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Keep the records where the uid of airlines is \"d\"", "subexpression": "WHERE airlines.uid = \"d\""}, {"explanation": "Return the abbreviation of airlines", "subexpression": "SELECT airlines.abbreviation"}], "number": "Start first query,", "subquery": "SELECT airlines.abbreviation FROM airlines WHERE airlines.uid = \"d\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Keep the records where the uid of airlines is \"d\"", "subexpression": "WHERE airlines.uid = \"d\""}, {"explanation": "Return the abbreviation and airline of airlines", "subexpression": "SELECT airlines.abbreviation"}], "number": "Start first query,", "subquery": "SELECT airlines.abbreviation FROM airlines WHERE airlines.uid = \"d\"", "supplement": ""}], "duration": 14.537755012512207, "time": "2023-02-01 13:13:29"}
{"question": "what is the abbreviation for delta airlines", "dbid": "flight_2", "TBid": "airlines", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Keep the records where the uid of airlines is \"d\"", "subexpression": "WHERE airlines.uid = \"d\""}, {"explanation": "Return the abbreviation of airlines and the airline of flights", "subexpression": "SELECT airlines.abbreviation , flights.airline"}], "number": "Start first query,", "subquery": "SELECT airlines.abbreviation , flights.airline FROM airlines WHERE airlines.uid = \"d\"", "supplement": ""}], "entire_SQL": "SELECT airlines.abbreviation , flights.airline FROM airlines WHERE airlines.uid = \"d\"", "original explanations": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Keep the records where the uid of airlines is \"d\"", "subexpression": "WHERE airlines.uid = \"d\""}, {"explanation": "Return the abbreviation of airlines and the airline of flights", "subexpression": "SELECT airlines.abbreviation , flights.airline"}], "number": "Start first query,", "subquery": "SELECT airlines.abbreviation , flights.airline FROM airlines WHERE airlines.uid = \"d\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Return the abbreviation of airlines and the airline of flights", "subexpression": "SELECT airlines.abbreviation , flights.airline"}], "number": "Start first query,", "subquery": "SELECT airlines.abbreviation , flights.airline FROM airlines WHERE airlines.uid = \"d\"", "supplement": ""}], "duration": 3.901787281036377, "time": "2023-02-01 13:13:33"}
{"question": "what are the student details in reverse alphabetical order", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "entire_SQL": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "duration": 44.53620743751526, "time": "2023-02-01 13:16:22"}
{"question": "what are the horsepowers of cars with 8 cylinders", "dbid": "car_1", "TBid": "cars data", "previous_generated_explanation": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the cylinders of cars data is \"8\"", "subexpression": "WHERE cars_data.cylinders = \"8\""}, {"explanation": "Return the horsepower of cars data", "subexpression": "SELECT cars_data.horsepower"}], "number": "Start first query,", "subquery": "SELECT cars_data.horsepower FROM cars_data WHERE cars_data.cylinders = \"8\"", "supplement": ""}], "entire_SQL": "SELECT cars_data.horsepower FROM cars_data WHERE cars_data.cylinders = '8'", "original explanations": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the cylinders of cars data is \"8\"", "subexpression": "WHERE cars_data.cylinders = \"8\""}, {"explanation": "Return the horsepower of cars data", "subexpression": "SELECT cars_data.horsepower"}], "number": "Start first query,", "subquery": "SELECT cars_data.horsepower FROM cars_data WHERE cars_data.cylinders = \"8\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table cars data", "subexpression": "FROM cars_data"}, {"explanation": "Keep the records where the cylinders of cars data is \"8\"", "subexpression": "WHERE cars_data.cylinders = \"8\""}, {"explanation": "return the average of horsepower\n", "subexpression": "SELECT cars_data.horsepower"}, {"explanation": "", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT cars_data.horsepower FROM cars_data WHERE cars_data.cylinders = \"8\"", "supplement": ""}], "duration": 33.547502756118774, "time": "2023-02-01 13:17:44"}
{"question": "what are all the degrees offered", "dbid": "student_transcripts_tracking", "TBid": "degree programs", "previous_generated_explanation": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return the degree summary name of degree programs", "subexpression": "SELECT degree_programs.degree_summary_name"}], "number": "Start first query,", "subquery": "SELECT degree_programs.degree_summary_name FROM degree_programs", "supplement": ""}], "entire_SQL": "SELECT degree_programs.degree_summary_name FROM degree_programs", "original explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return the degree summary name of degree programs", "subexpression": "SELECT degree_programs.degree_summary_name"}], "number": "Start first query,", "subquery": "SELECT degree_programs.degree_summary_name FROM degree_programs", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return the degree summary description of degree programs", "subexpression": "SELECT degree_programs.degree_summary_name"}], "number": "Start first query,", "subquery": "SELECT degree_programs.degree_summary_name FROM degree_programs", "supplement": ""}], "duration": 30.56303882598877, "time": "2023-02-01 13:18:50"}
{"question": "what are all the degrees offered", "dbid": "student_transcripts_tracking", "TBid": "degree programs", "previous_generated_explanation": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return the degree summary description of degree programs", "subexpression": "SELECT degree_programs.degree_summary_description"}], "number": "Start first query,", "subquery": "SELECT degree_programs.degree_summary_description FROM degree_programs", "supplement": ""}], "entire_SQL": "SELECT degree_programs.degree_summary_description FROM degree_programs", "original explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return the degree summary description of degree programs", "subexpression": "SELECT degree_programs.degree_summary_description"}], "number": "Start first query,", "subquery": "SELECT degree_programs.degree_summary_description FROM degree_programs", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "return the amount of degree summary descriptions ", "subexpression": "SELECT degree_programs.degree_summary_description"}], "number": "Start first query,", "subquery": "SELECT degree_programs.degree_summary_description FROM degree_programs", "supplement": ""}], "duration": 18.75188446044922, "time": "2023-02-01 13:19:10"}
{"question": "what are all the degrees offered", "dbid": "student_transcripts_tracking", "TBid": "degree programs", "previous_generated_explanation": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return the SUM of degree summary description of degree programs and the SUM", "subexpression": "SELECT SUM ( degree_programs.degree_summary_description )"}], "number": "Start first query,", "subquery": "SELECT SUM ( degree_programs.degree_summary_description ) FROM degree_programs", "supplement": ""}], "entire_SQL": "SELECT SUM( degree_programs.degree_summary_description ) FROM degree_programs", "original explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return the SUM of degree summary description of degree programs and the SUM", "subexpression": "SELECT SUM ( degree_programs.degree_summary_description )"}], "number": "Start first query,", "subquery": "SELECT SUM ( degree_programs.degree_summary_description ) FROM degree_programs", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "return the amount of degree summary descriptions ", "subexpression": "SELECT SUM( degree_programs.degree_summary_description )"}], "number": "Start first query,", "subquery": "SELECT degree_programs.degree_summary_description FROM degree_programs", "supplement": ""}], "duration": 7.927278995513916, "time": "2023-02-01 13:19:18"}
{"question": "what are all the degrees offered", "dbid": "student_transcripts_tracking", "TBid": "degree programs", "previous_generated_explanation": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return the SUM of degree summary description of degree programs and the SUM", "subexpression": "SELECT SUM ( degree_programs.degree_summary_description )"}], "number": "Start first query,", "subquery": "SELECT SUM ( degree_programs.degree_summary_description ) FROM degree_programs", "supplement": ""}], "entire_SQL": "SELECT SUM( degree_programs.degree_summary_description ) FROM degree_programs", "original explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return the SUM of degree summary description of degree programs and the SUM", "subexpression": "SELECT SUM ( degree_programs.degree_summary_description )"}], "number": "Start first query,", "subquery": "SELECT SUM ( degree_programs.degree_summary_description ) FROM degree_programs", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "return the amount of degree summary descriptions ", "subexpression": "SELECT SUM( degree_programs.degree_summary_description )"}], "number": "Start first query,", "subquery": "SELECT degree_programs.degree_summary_description FROM degree_programs", "supplement": ""}], "duration": 5.61407995223999, "time": "2023-02-01 13:19:24"}
{"question": "what are all the degrees offered", "dbid": "student_transcripts_tracking", "TBid": "degree programs", "previous_generated_explanation": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return the SUM of degree summary description of degree programs and the SUM", "subexpression": "SELECT SUM ( degree_programs.degree_summary_description )"}], "number": "Start first query,", "subquery": "SELECT SUM ( degree_programs.degree_summary_description ) FROM degree_programs", "supplement": ""}], "entire_SQL": "SELECT SUM( degree_programs.degree_summary_description ) FROM degree_programs", "original explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return the SUM of degree summary description of degree programs and the SUM", "subexpression": "SELECT SUM ( degree_programs.degree_summary_description )"}], "number": "Start first query,", "subquery": "SELECT SUM ( degree_programs.degree_summary_description ) FROM degree_programs", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return the degree summary description of degree programs", "subexpression": "SELECT degree_programs.degree_summary_description"}], "number": "Start first query,", "subquery": "SELECT degree_programs.degree_summary_name FROM degree_programs", "supplement": ""}], "duration": 4.362712621688843, "time": "2023-02-01 13:19:29"}
{"question": "what are all the degrees offered", "dbid": "car_1", "TBid": "", "previous_generated_explanation": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return the degree summary description of degree programs", "subexpression": "SELECT degree_programs.degree_summary_description"}], "number": "Start first query,", "subquery": "SELECT degree_programs.degree_summary_description FROM degree_programs", "supplement": ""}], "entire_SQL": "SELECT degree_programs.degree_summary_description FROM degree_programs", "original explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return the degree summary description of degree programs", "subexpression": "SELECT degree_programs.degree_summary_description"}], "number": "Start first query,", "subquery": "SELECT degree_programs.degree_summary_description FROM degree_programs", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return the degree summary description of degree programs", "subexpression": "SELECT degree_programs.degree_summary_description"}], "number": "Start first query,", "subquery": "SELECT degree_programs.degree_summary_description FROM degree_programs", "supplement": ""}], "duration": 53.724180459976196, "time": "2023-02-01 13:20:23"}
{"question": "which countries have at least one car maker", "dbid": "car_1", "TBid": "countries", "previous_generated_explanation": [{"explanation": [{"explanation": "In table countries and table car makers", "subexpression": "FROM countries JOIN car_makers ON countries.countryid = car_makers.country"}, {"explanation": "Return distinct countryname of countries", "subexpression": "SELECT DISTINCT countries.countryname"}], "number": "Start first query,", "subquery": "SELECT DISTINCT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country", "supplement": ""}], "entire_SQL": "SELECT DISTINCT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country", "original explanations": [{"explanation": [{"explanation": "In table countries and table car makers", "subexpression": "FROM countries JOIN car_makers ON countries.countryid = car_makers.country"}, {"explanation": "Return distinct countryname of countries", "subexpression": "SELECT DISTINCT countries.countryname"}], "number": "Start first query,", "subquery": "SELECT DISTINCT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table countries and table car makers", "subexpression": "FROM countries JOIN car_makers ON countries.countryid = car_makers.country"}, {"explanation": "Return distinct countryname and country id of countries", "subexpression": "SELECT DISTINCT countries.countryname"}], "number": "Start first query,", "subquery": "SELECT DISTINCT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country", "supplement": ""}], "duration": 12.538865566253662, "time": "2023-02-01 13:20:40"}
{"question": "which ships were captured", "dbid": "battle_death", "TBid": "ship", "previous_generated_explanation": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Keep the records where the lost in battle of ship is \"captured\"", "subexpression": "WHERE ship.lost_in_battle = \"captured\""}, {"explanation": "Return the name of ship", "subexpression": "SELECT ship.name"}], "number": "Start first query,", "subquery": "SELECT ship.name FROM ship WHERE ship.lost_in_battle = \"captured\"", "supplement": ""}], "entire_SQL": "SELECT ship.name FROM ship WHERE ship.lost_in_battle = 'captured'", "original explanations": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Keep the records where the lost in battle of ship is \"captured\"", "subexpression": "WHERE ship.lost_in_battle = \"captured\""}, {"explanation": "Return the name of ship", "subexpression": "SELECT ship.name"}], "number": "Start first query,", "subquery": "SELECT ship.name FROM ship WHERE ship.lost_in_battle = \"captured\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Keep the records where the ldisposition of ship of ship is \"captured\"", "subexpression": "WHERE ship.lost_in_battle = \"captured\""}, {"explanation": "Return the name of ship", "subexpression": "SELECT ship.name"}], "number": "Start first query,", "subquery": "SELECT ship.name FROM ship WHERE ship.lost_in_battle = \"captured\"", "supplement": ""}], "duration": 23.733511686325073, "time": "2023-02-01 13:21:40"}
{"question": "which ships were captured", "dbid": "battle_death", "TBid": "ship", "previous_generated_explanation": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Keep the records where the ldisposition of ship of ship is \"captured\"", "subexpression": "WHERE ship.ldisposition_of_ship = \"captured\""}, {"explanation": "Return the name of ship", "subexpression": "SELECT ship.name"}], "number": "Start first query,", "subquery": "SELECT ship.name FROM ship WHERE ship.ldisposition_of_ship = \"captured\"", "supplement": ""}], "entire_SQL": "SELECT ship.name FROM ship WHERE ship.ldisposition_of_ship = \"captured\"", "original explanations": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Keep the records where the ldisposition of ship of ship is \"captured\"", "subexpression": "WHERE ship.ldisposition_of_ship = \"captured\""}, {"explanation": "Return the name of ship", "subexpression": "SELECT ship.name"}], "number": "Start first query,", "subquery": "SELECT ship.name FROM ship WHERE ship.ldisposition_of_ship = \"captured\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table ship", "subexpression": "FROM ship"}, {"explanation": "Keep the records where the disposition of ship of ship is \"captured\"", "subexpression": "WHERE ship.ldisposition_of_ship = \"captured\""}, {"explanation": "Return the name of ship", "subexpression": "SELECT ship.name"}], "number": "Start first query,", "subquery": "SELECT ship.name FROM ship WHERE ship.ldisposition_of_ship = \"captured\"", "supplement": ""}], "duration": 3.9409432411193848, "time": "2023-02-01 13:21:45"}
{"question": "\nReturn the friend names of Kyle.\n", "dbid": "network_1", "TBid": "highschooler", "previous_generated_explanation": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.friend_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the name of highschooler", "subexpression": "SELECT highschooler.name"}], "number": "Start first query,", "subquery": "SELECT highschooler.name FROM friend JOIN highschooler ON friend.friend_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "entire_SQL": "SELECT highschooler.name FROM friend JOIN highschooler ON friend.friend_id = highschooler.id WHERE highschooler.name = 'Kyle'", "original explanations": [{"explanation": [{"explanation": "In table friend and table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.friend_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the name of highschooler", "subexpression": "SELECT highschooler.name"}], "number": "Start first query,", "subquery": "SELECT highschooler.name FROM friend JOIN highschooler ON friend.friend_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table highschooler", "subexpression": "FROM friend JOIN highschooler ON friend.friend_id = highschooler.id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the id of highschooler", "subexpression": "SELECT highschooler.name"}], "number": "Start first query,", "subquery": "SELECT highschooler.name FROM friend JOIN highschooler ON friend.friend_id = highschooler.id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "duration": 53.24830913543701, "time": "2023-02-03 03:18:20"}
{"question": "\nReturn the friend names of Kyle.\n", "dbid": "network_1", "TBid": "highschooler", "previous_generated_explanation": [{"explanation": [{"explanation": "In table highschooler", "subexpression": "FROM highschooler"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the id of highschooler", "subexpression": "SELECT highschooler.id"}], "number": "Start first query,", "subquery": "SELECT highschooler.id FROM highschooler WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "entire_SQL": "SELECT highschooler.id FROM highschooler WHERE highschooler.name = \"Kyle\"", "original explanations": [{"explanation": [{"explanation": "In table highschooler", "subexpression": "FROM highschooler"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the id of highschooler", "subexpression": "SELECT highschooler.id"}], "number": "Start first query,", "subquery": "SELECT highschooler.id FROM highschooler WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table highschooler and table friend", "subexpression": "FROM highschooler"}, {"explanation": "Keep the records where the friend id of firend is 1934", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the id of highschooler", "subexpression": "SELECT highschooler.id"}], "number": "Start first query,", "subquery": "SELECT highschooler.id FROM highschooler WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "duration": 72.1314754486084, "time": "2023-02-03 03:19:32"}
{"question": "\nReturn the friend names of Kyle.\n", "dbid": "network_1", "TBid": "friend", "previous_generated_explanation": [{"explanation": [{"explanation": "In table highschooler and table friend", "subexpression": "FROM highschooler JOIN friend ON highschooler.id = friend.friend_id"}, {"explanation": "Keep the records where the friend id of friend is 1934", "subexpression": "WHERE friend.friend_id = 1934"}, {"explanation": "Return the id of highschooler", "subexpression": "SELECT highschooler.id"}], "number": "Start first query,", "subquery": "SELECT highschooler.id FROM highschooler JOIN friend ON highschooler.id = friend.friend_id WHERE friend.friend_id = 1934", "supplement": ""}], "entire_SQL": "SELECT highschooler.id FROM highschooler JOIN friend ON highschooler.id = friend.friend_id WHERE friend.friend_id = 1934", "original explanations": [{"explanation": [{"explanation": "In table highschooler and table friend", "subexpression": "FROM highschooler JOIN friend ON highschooler.id = friend.friend_id"}, {"explanation": "Keep the records where the friend id of friend is 1934", "subexpression": "WHERE friend.friend_id = 1934"}, {"explanation": "Return the id of highschooler", "subexpression": "SELECT highschooler.id"}], "number": "Start first query,", "subquery": "SELECT highschooler.id FROM highschooler JOIN friend ON highschooler.id = friend.friend_id WHERE friend.friend_id = 1934", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table highschooler and table friend", "subexpression": "FROM highschooler JOIN friend ON highschooler.id = friend.friend_id"}, {"explanation": "Keep the records where the friend id of friend is 1934", "subexpression": "WHERE friend.friend_id = 1934"}, {"explanation": "Return the student id of friend", "subexpression": "SELECT highschooler.id"}], "number": "Start first query,", "subquery": "SELECT highschooler.id FROM highschooler JOIN friend ON highschooler.id = friend.friend_id WHERE friend.friend_id = 1934", "supplement": ""}], "duration": 40.28651165962219, "time": "2023-02-03 03:20:13"}
{"question": "\nReturn the friend names of Kyle.\n", "dbid": "network_1", "TBid": "highschooler", "previous_generated_explanation": [{"explanation": [{"explanation": "In table highschooler and table friend", "subexpression": "FROM highschooler JOIN friend ON highschooler.id = friend.friend_id"}, {"explanation": "Keep the records where the friend id of friend is 1934", "subexpression": "WHERE friend.friend_id = 1934"}, {"explanation": "Return the student id of friend", "subexpression": "SELECT friend.student_id"}], "number": "Start first query,", "subquery": "SELECT friend.student_id FROM highschooler JOIN friend ON highschooler.id = friend.friend_id WHERE friend.friend_id = 1934", "supplement": ""}], "entire_SQL": "SELECT friend.student_id FROM highschooler JOIN friend ON highschooler.id = friend.friend_id WHERE friend.friend_id = 1934", "original explanations": [{"explanation": [{"explanation": "In table highschooler and table friend", "subexpression": "FROM highschooler JOIN friend ON highschooler.id = friend.friend_id"}, {"explanation": "Keep the records where the friend id of friend is 1934", "subexpression": "WHERE friend.friend_id = 1934"}, {"explanation": "Return the student id of friend", "subexpression": "SELECT friend.student_id"}], "number": "Start first query,", "subquery": "SELECT friend.student_id FROM highschooler JOIN friend ON highschooler.id = friend.friend_id WHERE friend.friend_id = 1934", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table highschooler and table friend", "subexpression": "FROM highschooler JOIN friend ON highschooler.id = friend.friend_id"}, {"explanation": "Keep the records where the friend id of friend is 1934", "subexpression": "WHERE friend.friend_id = 1934"}, {"explanation": "Return the name of highschooler", "subexpression": "SELECT friend.student_id"}], "number": "Start first query,", "subquery": "SELECT friend.student_id FROM highschooler JOIN friend ON highschooler.id = friend.friend_id WHERE friend.friend_id = 1934", "supplement": ""}], "duration": 66.59480142593384, "time": "2023-02-03 03:21:20"}
{"question": "Who is Kyle's friend?", "dbid": "network_1", "TBid": "friend", "previous_generated_explanation": [{"explanation": [{"explanation": "In table highschooler and table friend", "subexpression": "FROM highschooler JOIN friend ON highschooler.id = friend.friend_id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the friend id of friend", "subexpression": "SELECT friend.friend_id"}], "number": "Start first query,", "subquery": "SELECT friend.friend_id FROM highschooler JOIN friend ON highschooler.id = friend.friend_id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "entire_SQL": "SELECT friend.friend_id FROM highschooler JOIN friend ON highschooler.id = friend.friend_id WHERE highschooler.name = 'Kyle'", "original explanations": [{"explanation": [{"explanation": "In table highschooler and table friend", "subexpression": "FROM highschooler JOIN friend ON highschooler.id = friend.friend_id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the friend id of friend", "subexpression": "SELECT friend.friend_id"}], "number": "Start first query,", "subquery": "SELECT friend.friend_id FROM highschooler JOIN friend ON highschooler.id = friend.friend_id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table highschooler and table friend", "subexpression": "FROM highschooler JOIN friend ON highschooler.id = friend.friend_id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the student id of friend", "subexpression": "SELECT friend.friend_id"}], "number": "Start first query,", "subquery": "SELECT friend.friend_id FROM highschooler JOIN friend ON highschooler.id = friend.friend_id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "duration": 19.327537298202515, "time": "2023-02-03 03:22:19"}
{"question": "Who is Kyle's friend?", "dbid": "network_1", "TBid": "friend", "previous_generated_explanation": [{"explanation": [{"explanation": "In table highschooler and table friend", "subexpression": "FROM highschooler JOIN friend ON highschooler.id = friend.friend_id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the student id of student", "subexpression": "SELECT student.student_id"}], "number": "Start first query,", "subquery": "SELECT student.student_id FROM highschooler JOIN friend ON highschooler.id = friend.friend_id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "entire_SQL": "SELECT student.student_id FROM highschooler JOIN friend ON highschooler.id = friend.friend_id WHERE highschooler.name = \"Kyle\"", "original explanations": [{"explanation": [{"explanation": "In table highschooler and table friend", "subexpression": "FROM highschooler JOIN friend ON highschooler.id = friend.friend_id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the student id of student", "subexpression": "SELECT student.student_id"}], "number": "Start first query,", "subquery": "SELECT student.student_id FROM highschooler JOIN friend ON highschooler.id = friend.friend_id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table highschooler and table friend", "subexpression": "FROM highschooler JOIN friend ON highschooler.id = friend.friend_id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the student id of friend", "subexpression": "SELECT student.student_id"}], "number": "Start first query,", "subquery": "SELECT student.student_id FROM highschooler JOIN friend ON highschooler.id = friend.friend_id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "duration": 16.191985845565796, "time": "2023-02-03 03:22:36"}
{"question": "Count the number of friends Kyle has.", "dbid": "network_1", "TBid": "highschooler", "previous_generated_explanation": [{"explanation": [{"explanation": "In table highschooler and table friend", "subexpression": "FROM highschooler JOIN friend ON highschooler.id = friend.friend_id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM highschooler JOIN friend ON highschooler.id = friend.friend_id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "entire_SQL": "SELECT COUNT( * ) FROM highschooler JOIN friend ON highschooler.id = friend.friend_id WHERE highschooler.name = 'Kyle'", "original explanations": [{"explanation": [{"explanation": "In table highschooler and table friend", "subexpression": "FROM highschooler JOIN friend ON highschooler.id = friend.friend_id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM highschooler JOIN friend ON highschooler.id = friend.friend_id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table highschooler and table friend", "subexpression": "FROM highschooler JOIN friend ON highschooler.id = friend.friend_id"}, {"explanation": "Keep the records where the name of highschooler is \"Kyle\"", "subexpression": "WHERE highschooler.name = \"Kyle\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM highschooler JOIN friend ON highschooler.id = friend.friend_id WHERE highschooler.name = \"Kyle\"", "supplement": ""}], "duration": 3.2682693004608154, "time": "2023-02-03 03:23:44"}
{"question": "What is the official language used in the country the name of whose head of state is Beatrix.", "dbid": "world_1", "TBid": "countrylanguage", "previous_generated_explanation": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the isofficial of countrylanguage", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "entire_SQL": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = 'Beatrix'", "original explanations": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the isofficial of countrylanguage", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the language of countrylanguage", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "duration": 15.778562545776367, "time": "2023-02-03 03:30:09"}
{"question": "What is the official language used in the country the name of whose head of state is Beatrix.", "dbid": "world_1", "TBid": "countrylanguage", "previous_generated_explanation": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the language of countrylanguage", "subexpression": "SELECT countrylanguage.language"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "entire_SQL": "SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "original explanations": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the language of countrylanguage", "subexpression": "SELECT countrylanguage.language"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return distinct language of countrylanguage", "subexpression": "SELECT countrylanguage.language"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.language FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "duration": 8.636516571044922, "time": "2023-02-03 03:30:18"}
{"question": "How much does the most recent treatment cost?", "dbid": "dog_kennels", "TBid": "treatments", "previous_generated_explanation": [{"explanation": [{"explanation": "In table treatments", "subexpression": "FROM treatments"}, {"explanation": "Return the maximum value of cost of treatment of treatments", "subexpression": "SELECT MAX ( treatments.cost_of_treatment )"}], "number": "Start first query,", "subquery": "SELECT MAX ( treatments.cost_of_treatment ) FROM treatments", "supplement": ""}], "entire_SQL": "SELECT MAX( treatments.cost_of_treatment ) FROM treatments", "original explanations": [{"explanation": [{"explanation": "In table treatments", "subexpression": "FROM treatments"}, {"explanation": "Return the maximum value of cost of treatment of treatments", "subexpression": "SELECT MAX ( treatments.cost_of_treatment )"}], "number": "Start first query,", "subquery": "SELECT MAX ( treatments.cost_of_treatment ) FROM treatments", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table treatments", "subexpression": "FROM treatments"}, {"explanation": "sort the records based on date of treatment of treatments, and return the top 1 record", "subexpression": "..."}, {"explanation": "Return the cost of treatment of treatments", "subexpression": "SELECT MAX ( treatments.cost_of_treatment )"}], "number": "Start first query,", "subquery": "SELECT MAX ( treatments.cost_of_treatment ) FROM treatments", "supplement": ""}], "duration": 75.25979495048523, "time": "2023-02-03 03:32:51"}
{"question": "How much does the most recent treatment cost?", "dbid": "dog_kennels", "TBid": "treatments", "previous_generated_explanation": [{"explanation": [{"explanation": "In table treatments", "subexpression": "FROM treatments"}, {"explanation": "Keep the records where the date of treatment of treatments is greater than 1", "subexpression": "WHERE treatments.date_of_treatment > 1"}, {"explanation": "Return the cost of treatment of treatments", "subexpression": "SELECT treatments.cost_of_treatment"}], "number": "Start first query,", "subquery": "SELECT treatments.cost_of_treatment FROM treatments WHERE treatments.date_of_treatment > 1", "supplement": ""}], "entire_SQL": "SELECT treatments.cost_of_treatment FROM treatments WHERE treatments.date_of_treatment > 1", "original explanations": [{"explanation": [{"explanation": "In table treatments", "subexpression": "FROM treatments"}, {"explanation": "Keep the records where the date of treatment of treatments is greater than 1", "subexpression": "WHERE treatments.date_of_treatment > 1"}, {"explanation": "Return the cost of treatment of treatments", "subexpression": "SELECT treatments.cost_of_treatment"}], "number": "Start first query,", "subquery": "SELECT treatments.cost_of_treatment FROM treatments WHERE treatments.date_of_treatment > 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table treatments", "subexpression": "FROM treatments"}, {"explanation": "Sort the records based on the date of treatment of treatments", "subexpression": "WHERE treatments.date_of_treatment > 1"}, {"explanation": "Return the cost of treatment of treatments", "subexpression": "SELECT treatments.cost_of_treatment"}], "number": "Start first query,", "subquery": "SELECT treatments.cost_of_treatment FROM treatments WHERE treatments.date_of_treatment > 1", "supplement": ""}], "duration": 16.596197605133057, "time": "2023-02-03 03:33:08"}
{"question": "How much does the most recent treatment cost?", "dbid": "dog_kennels", "TBid": "treatments", "previous_generated_explanation": [{"explanation": [{"explanation": "In table treatments", "subexpression": "FROM treatments"}, {"explanation": "Group the records based on the date of treatment of treatments", "subexpression": "GROUP BY treatments.date_of_treatment"}, {"explanation": "Return the cost of treatment of treatments", "subexpression": "SELECT treatments.cost_of_treatment"}], "number": "Start first query,", "subquery": "SELECT treatments.cost_of_treatment FROM treatments GROUP BY treatments.date_of_treatment", "supplement": ""}], "entire_SQL": "SELECT treatments.cost_of_treatment FROM treatments GROUP BY treatments.date_of_treatment", "original explanations": [{"explanation": [{"explanation": "In table treatments", "subexpression": "FROM treatments"}, {"explanation": "Group the records based on the date of treatment of treatments", "subexpression": "GROUP BY treatments.date_of_treatment"}, {"explanation": "Return the cost of treatment of treatments", "subexpression": "SELECT treatments.cost_of_treatment"}], "number": "Start first query,", "subquery": "SELECT treatments.cost_of_treatment FROM treatments GROUP BY treatments.date_of_treatment", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table treatments", "subexpression": "FROM treatments"}, {"explanation": "order the records based on the date of treatment of treatments", "subexpression": "GROUP BY treatments.date_of_treatment"}, {"explanation": "Return the cost of treatment of treatments", "subexpression": "SELECT treatments.cost_of_treatment"}], "number": "Start first query,", "subquery": "SELECT treatments.cost_of_treatment FROM treatments GROUP BY treatments.date_of_treatment", "supplement": ""}], "duration": 3.7009575366973877, "time": "2023-02-03 03:33:13"}
{"question": "How much does the most recent treatment cost?", "dbid": "dog_kennels", "TBid": "treatments", "previous_generated_explanation": [{"explanation": [{"explanation": "In table treatments", "subexpression": "FROM treatments"}, {"explanation": "Group the records based on the date of treatment of treatments", "subexpression": "GROUP BY treatments.date_of_treatment"}, {"explanation": "Return the cost of treatment of treatments", "subexpression": "SELECT treatments.cost_of_treatment"}], "number": "Start first query,", "subquery": "SELECT treatments.cost_of_treatment FROM treatments GROUP BY treatments.date_of_treatment", "supplement": ""}], "entire_SQL": "SELECT treatments.cost_of_treatment FROM treatments GROUP BY treatments.date_of_treatment", "original explanations": [{"explanation": [{"explanation": "In table treatments", "subexpression": "FROM treatments"}, {"explanation": "Group the records based on the date of treatment of treatments", "subexpression": "GROUP BY treatments.date_of_treatment"}, {"explanation": "Return the cost of treatment of treatments", "subexpression": "SELECT treatments.cost_of_treatment"}], "number": "Start first query,", "subquery": "SELECT treatments.cost_of_treatment FROM treatments GROUP BY treatments.date_of_treatment", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table treatments", "subexpression": "FROM treatments"}, {"explanation": "Sort the records based on the date of treatment of treatments", "subexpression": "GROUP BY treatments.date_of_treatment"}, {"explanation": "Return the cost of treatment of treatments", "subexpression": "SELECT treatments.cost_of_treatment"}], "number": "Start first query,", "subquery": "SELECT treatments.cost_of_treatment FROM treatments GROUP BY treatments.date_of_treatment", "supplement": ""}], "duration": 4.166157007217407, "time": "2023-02-03 03:33:17"}
{"question": "How much does the most recent treatment cost?", "dbid": "dog_kennels", "TBid": "treatments", "previous_generated_explanation": [{"explanation": [{"explanation": "In table treatments", "subexpression": "FROM treatments"}, {"explanation": "Group the records based on the date of treatment of treatments", "subexpression": "GROUP BY treatments.date_of_treatment"}, {"explanation": "Return the cost of treatment of treatments", "subexpression": "SELECT treatments.cost_of_treatment"}], "number": "Start first query,", "subquery": "SELECT treatments.cost_of_treatment FROM treatments GROUP BY treatments.date_of_treatment", "supplement": ""}], "entire_SQL": "SELECT treatments.cost_of_treatment FROM treatments GROUP BY treatments.date_of_treatment", "original explanations": [{"explanation": [{"explanation": "In table treatments", "subexpression": "FROM treatments"}, {"explanation": "Group the records based on the date of treatment of treatments", "subexpression": "GROUP BY treatments.date_of_treatment"}, {"explanation": "Return the cost of treatment of treatments", "subexpression": "SELECT treatments.cost_of_treatment"}], "number": "Start first query,", "subquery": "SELECT treatments.cost_of_treatment FROM treatments GROUP BY treatments.date_of_treatment", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table treatments", "subexpression": "FROM treatments"}, {"explanation": "Sort records based on the date of treatment of treatments", "subexpression": "GROUP BY treatments.date_of_treatment"}, {"explanation": "Return the cost of treatment of treatments", "subexpression": "SELECT treatments.cost_of_treatment"}], "number": "Start first query,", "subquery": "SELECT treatments.cost_of_treatment FROM treatments GROUP BY treatments.date_of_treatment", "supplement": ""}], "duration": 10.144656658172607, "time": "2023-02-03 03:33:28"}
{"question": "Who is the earliest graduate of the school? List the first name, middle name and last name.", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students and table student enrolment", "subexpression": "FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id"}, {"explanation": "Sort the records in descending order based on the date first registered of students, and return the first record", "subexpression": "ORDER BY students.date_first_registered DESC LIMIT 1"}, {"explanation": "Return the first name, of students the middle name, of students and the last name of students", "subexpression": "SELECT students.first_name , students.middle_name , students.last_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name , students.middle_name , students.last_name FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id ORDER BY students.date_first_registered DESC LIMIT 1", "supplement": ""}], "entire_SQL": "SELECT students.first_name , students.middle_name , students.last_name FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id ORDER BY students.date_first_registered DESC LIMIT 1", "original explanations": [{"explanation": [{"explanation": "In table students and table student enrolment", "subexpression": "FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id"}, {"explanation": "Sort the records in descending order based on the date first registered of students, and return the first record", "subexpression": "ORDER BY students.date_first_registered DESC LIMIT 1"}, {"explanation": "Return the first name, of students the middle name, of students and the last name of students", "subexpression": "SELECT students.first_name , students.middle_name , students.last_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name , students.middle_name , students.last_name FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id ORDER BY students.date_first_registered DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students and table student enrolment", "subexpression": "FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id"}, {"explanation": "Sort the records in descending order based on the date first registered of students, and return the first record", "subexpression": "ORDER BY students.date_first_registered DESC LIMIT 1"}, {"explanation": "Return the first name, of students the middle name, of students and the last name of students", "subexpression": "SELECT students.first_name , students.middle_name , students.last_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name , students.middle_name , students.last_name FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id ORDER BY students.date_first_registered DESC LIMIT 1", "supplement": ""}], "duration": 9.770967721939087, "time": "2023-02-03 03:36:59"}
{"question": "Who is the earliest graduate of the school? List the first name, middle name and last name.", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students and table student enrolment", "subexpression": "FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id"}, {"explanation": "Sort the records in descending order based on the date first registered of students, and return the first record", "subexpression": "ORDER BY students.date_first_registered DESC LIMIT 1"}, {"explanation": "Return the first name, of students the middle name, of students and the last name of students", "subexpression": "SELECT students.first_name , students.middle_name , students.last_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name , students.middle_name , students.last_name FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id ORDER BY students.date_first_registered DESC LIMIT 1", "supplement": ""}], "entire_SQL": "SELECT students.first_name , students.middle_name , students.last_name FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id ORDER BY students.date_first_registered DESC LIMIT 1", "original explanations": [{"explanation": [{"explanation": "In table students and table student enrolment", "subexpression": "FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id"}, {"explanation": "Sort the records in descending order based on the date first registered of students, and return the first record", "subexpression": "ORDER BY students.date_first_registered DESC LIMIT 1"}, {"explanation": "Return the first name, of students the middle name, of students and the last name of students", "subexpression": "SELECT students.first_name , students.middle_name , students.last_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name , students.middle_name , students.last_name FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id ORDER BY students.date_first_registered DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students and table student enrolment", "subexpression": "FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id"}, {"explanation": "Sort the records in descending order based on the date left of students, and return the first record", "subexpression": "ORDER BY students.date_first_registered DESC LIMIT 1"}, {"explanation": "Return the first name, of students the middle name, of students and the last name of students", "subexpression": "SELECT students.first_name , students.middle_name , students.last_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name , students.middle_name , students.last_name FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id ORDER BY students.date_first_registered DESC LIMIT 1", "supplement": ""}], "duration": 108.05309820175171, "time": "2023-02-03 03:38:48"}
{"question": "Who is the earliest graduate of the school? List the first name, middle name and last name.", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students and table student enrolment", "subexpression": "FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id"}, {"explanation": "Sort the records in descending order based on the date first registered of students, and return the first record", "subexpression": "ORDER BY students.date_first_registered DESC LIMIT 1"}, {"explanation": "Return the first name of students, the middle name of students, and the last name of students", "subexpression": "SELECT students.first_name , students.middle_name , students.last_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name , students.middle_name , students.last_name FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id ORDER BY students.date_first_registered DESC LIMIT 1", "supplement": ""}], "entire_SQL": "SELECT students.first_name , students.middle_name , students.last_name FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id ORDER BY students.date_first_registered DESC LIMIT 1", "original explanations": [{"explanation": [{"explanation": "In table students and table student enrolment", "subexpression": "FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id"}, {"explanation": "Sort the records in descending order based on the date first registered of students, and return the first record", "subexpression": "ORDER BY students.date_first_registered DESC LIMIT 1"}, {"explanation": "Return the first name of students, the middle name of students, and the last name of students", "subexpression": "SELECT students.first_name , students.middle_name , students.last_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name , students.middle_name , students.last_name FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id ORDER BY students.date_first_registered DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students and table student enrolment", "subexpression": "FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id"}, {"explanation": "Sort the records in descending order based on the date left of students, and return the first record", "subexpression": "ORDER BY students.date_first_registered DESC LIMIT 1"}, {"explanation": "Return the first name of students, the middle name of students, and the last name of students", "subexpression": "SELECT students.first_name , students.middle_name , students.last_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name , students.middle_name , students.last_name FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id ORDER BY students.date_first_registered DESC LIMIT 1", "supplement": ""}], "duration": 23.77119016647339, "time": "2023-02-03 03:53:57"}
{"question": "give me the location of the shop with open year earlier than 2014", "dbid": "device", "TBid": "shop", "previous_generated_explanation": [{"explanation": [{"explanation": "In table shop", "subexpression": "FROM shop"}, {"explanation": "Keep the records where the open year of shop is greater than 2014", "subexpression": "WHERE shop.open_year > 2014"}, {"explanation": "Return the location of shop", "subexpression": "SELECT shop.location"}], "number": "Start first query,", "subquery": "SELECT shop.location FROM shop WHERE shop.open_year > 2014", "supplement": ""}], "entire_SQL": "SELECT shop.location FROM shop WHERE shop.open_year > 2014", "original explanations": [{"explanation": [{"explanation": "In table shop", "subexpression": "FROM shop"}, {"explanation": "Keep the records where the open year of shop is greater than 2014", "subexpression": "WHERE shop.open_year > 2014"}, {"explanation": "Return the location of shop", "subexpression": "SELECT shop.location"}], "number": "Start first query,", "subquery": "SELECT shop.location FROM shop WHERE shop.open_year > 2014", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table shop", "subexpression": "FROM shop"}, {"explanation": "Keep the records where the open year of shop is smaller than 2014", "subexpression": "WHERE shop.open_year > 2014"}, {"explanation": "Return the location of shop", "subexpression": "SELECT shop.location"}], "number": "Start first query,", "subquery": "SELECT shop.location FROM shop WHERE shop.open_year > 2014", "supplement": ""}], "duration": 25.50208044052124, "time": "2023-02-06 22:19:21"}
{"question": "How many different degrees are offered", "dbid": "student_transcripts_tracking", "TBid": "degree programs", "previous_generated_explanation": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct department id of degree programs", "subexpression": "SELECT COUNT ( DISTINCT degree_programs.department_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_programs.department_id ) FROM degree_programs", "supplement": ""}], "entire_SQL": "SELECT COUNT( DISTINCT degree_programs.department_id ) FROM degree_programs", "original explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct department id of degree programs", "subexpression": "SELECT COUNT ( DISTINCT degree_programs.department_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_programs.department_id ) FROM degree_programs", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct degree summary name of degree programs", "subexpression": "SELECT COUNT ( DISTINCT degree_programs.department_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_programs.department_id ) FROM degree_programs", "supplement": ""}], "duration": 34.37910032272339, "time": "2023-02-06 22:27:55"}
{"question": "What is the official language used in the country the name of whose head of state is Beatrix?", "dbid": "world_1", "TBid": "countrylanguage", "previous_generated_explanation": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the isofficial of countrylanguage", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "entire_SQL": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = 'Beatrix'", "original explanations": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the isofficial of countrylanguage", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the countrylanguage with isofficial being T", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "duration": 70.06299185752869, "time": "2023-02-06 22:31:22"}
{"question": "How many car models are produced in the usa?", "dbid": "car_1", "TBid": "car makers", "previous_generated_explanation": [{"explanation": [{"explanation": "In table model list and table car makers", "subexpression": "FROM model_list JOIN car_makers ON model_list.maker = car_makers.id"}, {"explanation": "Keep the records where the country of car makers is \"usa\"", "subexpression": "WHERE car_makers.country = \"usa\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "supplement": ""}], "entire_SQL": "SELECT COUNT( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = 'usa'", "original explanations": [{"explanation": [{"explanation": "In table model list and table car makers", "subexpression": "FROM model_list JOIN car_makers ON model_list.maker = car_makers.id"}, {"explanation": "Keep the records where the country of car makers is \"usa\"", "subexpression": "WHERE car_makers.country = \"usa\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table model list and table car makers", "subexpression": "FROM model_list JOIN car_makers ON model_list.maker = car_makers.id"}, {"explanation": "Keep the records where the country of car makers is \"1\"", "subexpression": "WHERE car_makers.country = \"usa\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "supplement": ""}], "duration": 90.9441430568695, "time": "2023-02-06 22:33:58"}
{"question": "Give me the student with the smallest left date", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the date left of students, and return the first record", "subexpression": "ORDER BY students.date_left ASC LIMIT 1"}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM students ORDER BY students.date_left ASC LIMIT 1", "supplement": ""}], "entire_SQL": "SELECT students.first_name FROM students ORDER BY students.date_left ASC LIMIT 1", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the date left of students, and return the first record", "subexpression": "ORDER BY students.date_left ASC LIMIT 1"}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM students ORDER BY students.date_left ASC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the date left of students, and return the first record", "subexpression": "ORDER BY students.date_left ASC LIMIT 1"}, {"explanation": "Return the first name and middle name and last name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM students ORDER BY students.date_left ASC LIMIT 1", "supplement": ""}], "duration": 23.769600868225098, "time": "2023-02-06 22:44:57"}
{"question": "Give me the student with the smallest left date", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the date left of students, and return the first record", "subexpression": "ORDER BY students.date_left ASC LIMIT 1"}, {"explanation": "Return the first name of students, the middle name of students, and the last name of students", "subexpression": "SELECT students.first_name , students.middle_name , students.last_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name , students.middle_name , students.last_name FROM students ORDER BY students.date_left ASC LIMIT 1", "supplement": ""}], "entire_SQL": "SELECT students.first_name , students.middle_name , students.last_name FROM students ORDER BY students.date_left ASC LIMIT 1", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the date left of students, and return the first record", "subexpression": "ORDER BY students.date_left ASC LIMIT 1"}, {"explanation": "Return the first name of students, the middle name of students, and the last name of students", "subexpression": "SELECT students.first_name , students.middle_name , students.last_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name , students.middle_name , students.last_name FROM students ORDER BY students.date_left ASC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the date______left of students, and return the first record", "subexpression": "ORDER BY students.date_left ASC LIMIT 1"}, {"explanation": "Return the first name of students, the middle name of students, and the last name of students", "subexpression": "SELECT students.first_name , students.middle_name , students.last_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name , students.middle_name , students.last_name FROM students ORDER BY students.date_left ASC LIMIT 1", "supplement": ""}], "duration": 174.6392662525177, "time": "2023-02-06 22:47:53"}
{"question": "Who is the earliest graduate of the school?", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the ssn of students, and return the first record", "subexpression": "ORDER BY students.ssn ASC LIMIT 1"}, {"explanation": "Return the first name of students and the ssn of students", "subexpression": "SELECT students.first_name , students.ssn"}], "number": "Start first query,", "subquery": "SELECT students.first_name , students.ssn FROM students ORDER BY students.ssn ASC LIMIT 1", "supplement": ""}], "entire_SQL": "SELECT students.first_name , students.ssn FROM students ORDER BY students.ssn ASC LIMIT 1", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the ssn of students, and return the first record", "subexpression": "ORDER BY students.ssn ASC LIMIT 1"}, {"explanation": "Return the first name of students and the ssn of students", "subexpression": "SELECT students.first_name , students.ssn"}], "number": "Start first query,", "subquery": "SELECT students.first_name , students.ssn FROM students ORDER BY students.ssn ASC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the date_left of students, and return the first record", "subexpression": "ORDER BY students.ssn ASC LIMIT 1"}, {"explanation": "Return the first name of students and the ssn of students", "subexpression": "SELECT students.first_name , students.ssn"}], "number": "Start first query,", "subquery": "SELECT students.first_name , students.ssn FROM students ORDER BY students.ssn ASC LIMIT 1", "supplement": ""}], "duration": 53.2122905254364, "time": "2023-02-08 15:32:09"}
{"question": "What is the area code in which the most voters voted?", "dbid": "voter_1", "TBid": "area code state", "previous_generated_explanation": [{"explanation": [{"explanation": "In table area code state and table votes", "subexpression": "FROM area_code_state JOIN votes ON area_code_state.state = votes.state"}, {"explanation": "Group the records based on the state of votes", "subexpression": "GROUP BY votes.state"}, {"explanation": "Sort the groups in descending order based on the number of records, and return the first record", "subexpression": "ORDER BY COUNT ( * ) DESC LIMIT 1"}, {"explanation": "Return the area code of area code state", "subexpression": "SELECT area_code_state.area_code"}], "number": "Start first query,", "subquery": "SELECT area_code_state.area_code FROM area_code_state JOIN votes ON area_code_state.state = votes.state GROUP BY votes.state ORDER BY COUNT ( * ) DESC LIMIT 1", "supplement": ""}], "entire_SQL": "SELECT area_code_state.area_code FROM area_code_state JOIN votes ON area_code_state.state = votes.state GROUP BY votes.state ORDER BY COUNT( * ) DESC LIMIT 1", "original explanations": [{"explanation": [{"explanation": "In table area code state and table votes", "subexpression": "FROM area_code_state JOIN votes ON area_code_state.state = votes.state"}, {"explanation": "Group the records based on the state of votes", "subexpression": "GROUP BY votes.state"}, {"explanation": "Sort the groups in descending order based on the number of records, and return the first record", "subexpression": "ORDER BY COUNT ( * ) DESC LIMIT 1"}, {"explanation": "Return the area code of area code state", "subexpression": "SELECT area_code_state.area_code"}], "number": "Start first query,", "subquery": "SELECT area_code_state.area_code FROM area_code_state JOIN votes ON area_code_state.state = votes.state GROUP BY votes.state ORDER BY COUNT ( * ) DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table area code state and table votes", "subexpression": "FROM area_code_state JOIN votes ON area_code_state.state = votes.state"}, {"explanation": "Group the records based on the state of votes", "subexpression": "GROUP BY votes.state"}, {"explanation": "Sort the groups in descending order based on the number of records", "subexpression": "ORDER BY COUNT ( * ) DESC LIMIT 1"}, {"explanation": "Return the area code of area code state", "subexpression": "SELECT area_code_state.area_code"}], "number": "Start first query,", "subquery": "SELECT area_code_state.area_code FROM area_code_state JOIN votes ON area_code_state.state = votes.state GROUP BY votes.state ORDER BY COUNT ( * ) DESC LIMIT 1", "supplement": ""}], "duration": 67.44969582557678, "time": "2023-02-08 15:37:53"}
{"question": "What is the official language used in the country the name of whose head of state is Beatrix.", "dbid": "world_1", "TBid": "countrylanguage", "previous_generated_explanation": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the isofficial of countrylanguage", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "entire_SQL": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = 'Beatrix'", "original explanations": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the isofficial of countrylanguage", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the language of countrylanguage", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "duration": 40.22066950798035, "time": "2023-02-08 15:40:14"}
{"question": "What is the official language used in the country the name of whose head of state is Beatrix.", "dbid": "world_1", "TBid": "countrylanguage", "previous_generated_explanation": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the isofficial of countrylanguage", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "entire_SQL": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = 'Beatrix'", "original explanations": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the isofficial of countrylanguage", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the language of countrylanguage", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "duration": 17.253840446472168, "time": "2023-02-08 15:41:06"}
{"question": "show me architects with dual nationality", "dbid": "architecture", "TBid": "architect", "previous_generated_explanation": [{"explanation": [{"explanation": "In table architect", "subexpression": "FROM architect"}, {"explanation": "Return name of architect", "subexpression": "SELECT architect.name"}], "number": "Start first query,", "subquery": "SELECT architect.name FROM architect", "supplement": ""}, {"explanation": [{"explanation": "In table architect", "subexpression": "FROM architect"}, {"explanation": "Keep the records where the nationality of architect is not the first query result", "subexpression": "WHERE architect.nationality != ( SELECT architect.name FROM architect HAVING COUNT(DISTINCT architect.nationality) >= 2)"}, {"explanation": "Return the name of architect", "subexpression": "SELECT architect.name"}], "number": "Start second query,", "subquery": "SELECT architect.name FROM architect WHERE architect.nationality != ( SELECT architect.name FROM architect HAVING COUNT(DISTINCT architect.nationality) >= 2)", "supplement": "second query result uses first query result"}], "entire_SQL": "SELECT architect.name FROM architect WHERE architect.nationality != (SELECT architect.name FROM architect HAVING COUNT( DISTINCT architect.nationality ) >= 2)", "original explanations": [{"explanation": [{"explanation": "In table architect", "subexpression": "FROM architect"}, {"explanation": "Return name of architect", "subexpression": "SELECT architect.name"}], "number": "Start first query,", "subquery": "SELECT architect.name FROM architect", "supplement": ""}, {"explanation": [{"explanation": "In table architect", "subexpression": "FROM architect"}, {"explanation": "Keep the records where the nationality of architect is not the first query result", "subexpression": "WHERE architect.nationality != ( SELECT architect.name FROM architect HAVING COUNT(DISTINCT architect.nationality) >= 2)"}, {"explanation": "Return the name of architect", "subexpression": "SELECT architect.name"}], "number": "Start second query,", "subquery": "SELECT architect.name FROM architect WHERE architect.nationality != ( SELECT architect.name FROM architect HAVING COUNT(DISTINCT architect.nationality) >= 2)", "supplement": "second query result uses first query result"}], "edited explanations": [{"explanation": [{"explanation": "In table architect", "subexpression": "FROM architect"}, {"explanation": "Return name of architect", "subexpression": "SELECT architect.name"}], "number": "Start first query,", "subquery": "SELECT architect.name FROM architect", "supplement": ""}, {"explanation": [{"explanation": "In table architect", "subexpression": "FROM architect"}, {"explanation": "Keep the records where the nationality of architect is greater than 1", "subexpression": "WHERE architect.nationality != ( SELECT architect.name FROM architect HAVING COUNT(DISTINCT architect.nationality) >= 2)"}, {"explanation": "Return the name of architect", "subexpression": "SELECT architect.name"}], "number": "Start second query,", "subquery": "SELECT architect.name FROM architect WHERE architect.nationality != ( SELECT architect.name FROM architect HAVING COUNT(DISTINCT architect.nationality) >= 2)", "supplement": "second query result uses first query result"}], "duration": 40.335429191589355, "time": "2023-02-08 19:16:19"}
{"question": "show me architects with dual nationality", "dbid": "architecture", "TBid": "architect", "previous_generated_explanation": [{"explanation": [{"explanation": "In table architect", "subexpression": "FROM architect"}, {"explanation": "Keep the records where the nationality of architect is greater than 1", "subexpression": "WHERE architect.nationality > 1"}, {"explanation": "Return the name of architect", "subexpression": "SELECT architect.name"}], "number": "Start first query,", "subquery": "SELECT architect.name FROM architect WHERE architect.nationality > 1", "supplement": ""}], "entire_SQL": "SELECT architect.name FROM architect WHERE architect.nationality > 1", "original explanations": [{"explanation": [{"explanation": "In table architect", "subexpression": "FROM architect"}, {"explanation": "Keep the records where the nationality of architect is greater than 1", "subexpression": "WHERE architect.nationality > 1"}, {"explanation": "Return the name of architect", "subexpression": "SELECT architect.name"}], "number": "Start first query,", "subquery": "SELECT architect.name FROM architect WHERE architect.nationality > 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table architect", "subexpression": "FROM architect"}, {"explanation": "Keep the records where the nationality of architect has \",\"", "subexpression": "WHERE architect.nationality > 1"}, {"explanation": "Return the name of architect", "subexpression": "SELECT architect.name"}], "number": "Start first query,", "subquery": "SELECT architect.name FROM architect WHERE architect.nationality > 1", "supplement": ""}], "duration": 28.42351269721985, "time": "2023-02-08 19:16:49"}
{"question": "show me architects with dual nationality", "dbid": "architecture", "TBid": "architect", "previous_generated_explanation": [{"explanation": [{"explanation": "In table architect", "subexpression": "FROM architect"}, {"explanation": "Keep the records where the nationality of architect is \"\"", "subexpression": "WHERE architect.nationality = \",\""}, {"explanation": "Return the name of architect", "subexpression": "SELECT architect.name"}], "number": "Start first query,", "subquery": "SELECT architect.name FROM architect WHERE architect.nationality = \",\"", "supplement": ""}], "entire_SQL": "SELECT architect.name FROM architect WHERE architect.nationality = \",\"", "original explanations": [{"explanation": [{"explanation": "In table architect", "subexpression": "FROM architect"}, {"explanation": "Keep the records where the nationality of architect is \"\"", "subexpression": "WHERE architect.nationality = \",\""}, {"explanation": "Return the name of architect", "subexpression": "SELECT architect.name"}], "number": "Start first query,", "subquery": "SELECT architect.name FROM architect WHERE architect.nationality = \",\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table architect", "subexpression": "FROM architect"}, {"explanation": "Keep the records where the nationality of architect includes \",\"", "subexpression": "WHERE architect.nationality = \",\""}, {"explanation": "Return the name of architect", "subexpression": "SELECT architect.name"}], "number": "Start first query,", "subquery": "SELECT architect.name FROM architect WHERE architect.nationality = \",\"", "supplement": ""}], "duration": 15.391517162322998, "time": "2023-02-08 19:17:05"}
{"question": "How many different degrees are offered?\n", "dbid": "student_transcripts_tracking", "TBid": "degree programs", "previous_generated_explanation": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct department id of degree programs", "subexpression": "SELECT COUNT ( DISTINCT degree_programs.department_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_programs.department_id ) FROM degree_programs", "supplement": ""}], "entire_SQL": "SELECT COUNT( DISTINCT degree_programs.department_id ) FROM degree_programs", "original explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct department id of degree programs", "subexpression": "SELECT COUNT ( DISTINCT degree_programs.department_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_programs.department_id ) FROM degree_programs", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of degree programs", "subexpression": "SELECT COUNT ( DISTINCT degree_programs.department_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_programs.department_id ) FROM degree_programs", "supplement": ""}], "duration": 48.19007444381714, "time": "2023-02-08 19:21:20"}
{"question": "How many different degrees are offered?\n", "dbid": "student_transcripts_tracking", "TBid": "degree programs", "previous_generated_explanation": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM degree_programs", "supplement": ""}], "entire_SQL": "SELECT * FROM degree_programs", "original explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM degree_programs", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return all the count of distinct degree programs\n", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM degree_programs", "supplement": ""}], "duration": 21.601638555526733, "time": "2023-02-08 19:21:42"}
{"question": "What is the official language used in the country the name of whose head of state is Beatrix.", "dbid": "world_1", "TBid": "countrylanguage", "previous_generated_explanation": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the isofficial of countrylanguage", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "entire_SQL": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = 'Beatrix'", "original explanations": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the isofficial of countrylanguage", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the language of countrylanguage", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "duration": 25.66313600540161, "time": "2023-02-08 19:25:24"}
{"question": "how many models were made in the usa", "dbid": "car_1", "TBid": "model list", "previous_generated_explanation": [{"explanation": [{"explanation": "In table model list and table car makers", "subexpression": "FROM model_list JOIN car_makers ON model_list.maker = car_makers.id"}, {"explanation": "Keep the records where the country of car makers is \"usa\"", "subexpression": "WHERE car_makers.country = \"usa\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "supplement": ""}], "entire_SQL": "SELECT COUNT( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = 'usa'", "original explanations": [{"explanation": [{"explanation": "In table model list and table car makers", "subexpression": "FROM model_list JOIN car_makers ON model_list.maker = car_makers.id"}, {"explanation": "Keep the records where the country of car makers is \"usa\"", "subexpression": "WHERE car_makers.country = \"usa\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table model list and table car makers", "subexpression": "FROM model_list JOIN car_makers ON model_list.maker = car_makers.id"}, {"explanation": "Keep the records where the country of car makers is \"1\"", "subexpression": "WHERE car_makers.country = \"usa\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "supplement": ""}], "duration": 70.79544520378113, "time": "2023-02-08 19:27:44"}
{"question": "What is the official language used in the country the name of whose head of state is Beatrix.", "dbid": "world_1", "TBid": "countrylanguage", "previous_generated_explanation": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the isofficial of countrylanguage", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "entire_SQL": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = 'Beatrix'", "original explanations": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the isofficial of countrylanguage", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table country", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return all", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "duration": 91.0348379611969, "time": "2023-02-08 19:58:34"}
{"question": "give me info on pilot Bonan", "dbid": "aircraft", "TBid": "pilot", "previous_generated_explanation": [{"explanation": [{"explanation": "In table pilot", "subexpression": "FROM pilot"}, {"explanation": "Keep the records where the name of pilot is \"Bonan\"", "subexpression": "WHERE pilot.name = \"Bonan\""}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM pilot WHERE pilot.name = \"Bonan\"", "supplement": ""}], "entire_SQL": "SELECT * FROM pilot WHERE pilot.name = 'Bonan'", "original explanations": [{"explanation": [{"explanation": "In table pilot", "subexpression": "FROM pilot"}, {"explanation": "Keep the records where the name of pilot is \"Bonan\"", "subexpression": "WHERE pilot.name = \"Bonan\""}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM pilot WHERE pilot.name = \"Bonan\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table pilot", "subexpression": "FROM pilot"}, {"explanation": "Keep the records where the name of pilot is \"Bonan\"", "subexpression": "WHERE pilot.name = \"Bonan\""}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM pilot WHERE pilot.name = \"Bonan\"", "supplement": ""}], "duration": 10.235460996627808, "time": "2023-02-08 20:33:57"}
{"question": "tell me about Prof. Zackery Collins", "dbid": "aircraft", "TBid": "pilot", "previous_generated_explanation": [{"explanation": [{"explanation": "In table pilot", "subexpression": "FROM pilot"}, {"explanation": "Keep the records where the name of pilot is \"Collins\"", "subexpression": "WHERE pilot.name = \"Collins\""}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM pilot WHERE pilot.name = \"Collins\"", "supplement": ""}], "entire_SQL": "SELECT * FROM pilot WHERE pilot.name = 'Collins'", "original explanations": [{"explanation": [{"explanation": "In table pilot", "subexpression": "FROM pilot"}, {"explanation": "Keep the records where the name of pilot is \"Collins\"", "subexpression": "WHERE pilot.name = \"Collins\""}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM pilot WHERE pilot.name = \"Collins\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table pilot", "subexpression": "FROM pilot"}, {"explanation": "Keep the records where the name of pilot is \"Prof. Zackery Collins\"", "subexpression": "WHERE pilot.name = \"Collins\""}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM pilot WHERE pilot.name = \"Collins\"", "supplement": ""}], "duration": 27.459917783737183, "time": "2023-02-08 20:36:31"}
{"question": "How many different degrees are offered?", "dbid": "student_transcripts_tracking", "TBid": "degree programs", "previous_generated_explanation": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct department id of degree programs", "subexpression": "SELECT COUNT ( DISTINCT degree_programs.department_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_programs.department_id ) FROM degree_programs", "supplement": ""}], "entire_SQL": "SELECT COUNT( DISTINCT degree_programs.department_id ) FROM degree_programs", "original explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct department id of degree programs", "subexpression": "SELECT COUNT ( DISTINCT degree_programs.department_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_programs.department_id ) FROM degree_programs", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct degree summary name of degree programs", "subexpression": "SELECT COUNT ( DISTINCT degree_programs.department_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_programs.department_id ) FROM degree_programs", "supplement": ""}], "duration": 57.61435914039612, "time": "2023-02-08 20:46:10"}
{"question": "List all the student details in reversed alphabetical order.", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "entire_SQL": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students not in alphabetical order", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "duration": 18.034993648529053, "time": "2023-02-09 11:25:38"}
{"question": "List all the student details in reversed alphabetical order.", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "entire_SQL": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "duration": 13.66820216178894, "time": "2023-02-09 11:26:19"}
{"question": "official language used in the country the name of whose head of state is Beatrix", "dbid": "world_1", "TBid": "countrylanguage", "previous_generated_explanation": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the isofficial of countrylanguage", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "entire_SQL": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = 'Beatrix'", "original explanations": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the isofficial of countrylanguage", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return countrylanguage if isofficial is true", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "duration": 41.37855267524719, "time": "2023-02-09 11:29:27"}
{"question": "official language used in the country the name of whose head of state is Beatrix", "dbid": "world_1", "TBid": "countrylanguage", "previous_generated_explanation": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "entire_SQL": "SELECT * FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "original explanations": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "return language if isofficial == T", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "duration": 21.388595581054688, "time": "2023-02-09 11:29:49"}
{"question": "official language used in the country the name of whose head of state is Beatrix", "dbid": "world_1", "TBid": "countrylanguage", "previous_generated_explanation": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the isofficial of countrylanguage", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "entire_SQL": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = 'Beatrix'", "original explanations": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the isofficial of countrylanguage", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "keep the records where isofficial is true", "subexpression": "SELECT countrylanguage.isofficial"}, {"explanation": "return countrylanguage", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "duration": 44.68371057510376, "time": "2023-02-09 11:31:48"}
{"question": "List all the student details in reversed alphabetical order.", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "entire_SQL": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "duration": 56.16592311859131, "time": "2023-02-09 16:04:29"}
{"question": "How many different degrees are offered?", "dbid": "student_transcripts_tracking", "TBid": "degree programs", "previous_generated_explanation": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct department id of degree programs", "subexpression": "SELECT COUNT ( DISTINCT degree_programs.department_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_programs.department_id ) FROM degree_programs", "supplement": ""}], "entire_SQL": "SELECT COUNT( DISTINCT degree_programs.department_id ) FROM degree_programs", "original explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct department id of degree programs", "subexpression": "SELECT COUNT ( DISTINCT degree_programs.department_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_programs.department_id ) FROM degree_programs", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table degree programs", "subexpression": "FROM degree_programs"}, {"explanation": "Return number of distinct degree_program id of degree programs", "subexpression": "SELECT COUNT ( DISTINCT degree_programs.department_id )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( DISTINCT degree_programs.department_id ) FROM degree_programs", "supplement": ""}], "duration": 112.34871006011963, "time": "2023-02-09 16:07:13"}
{"question": "Which airlines have less than 200 flights?", "dbid": "flight_2", "TBid": "airlines", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return the airline of airlines", "subexpression": "SELECT airlines.airline"}], "number": "Start first query,", "subquery": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "entire_SQL": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno<200", "original explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return the airline of airlines", "subexpression": "SELECT airlines.airline"}], "number": "Start first query,", "subquery": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return the distinct airline of airlines", "subexpression": "SELECT airlines.airline"}], "number": "Start first query,", "subquery": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "duration": 45.77050423622131, "time": "2023-02-09 16:09:06"}
{"question": "Which airlines have less than 200 flights?", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of flights", "subexpression": "SELECT DISTINCT flights.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "entire_SQL": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "original explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of flights", "subexpression": "SELECT DISTINCT flights.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline name of flights", "subexpression": "SELECT DISTINCT flights.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "duration": 26.79425597190857, "time": "2023-02-09 16:09:34"}
{"question": "Which airlines have less than 200 flights?", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of flights", "subexpression": "SELECT DISTINCT flights.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "entire_SQL": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "original explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of flights", "subexpression": "SELECT DISTINCT flights.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of flights", "subexpression": "SELECT DISTINCT flights.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "duration": 2.7770307064056396, "time": "2023-02-09 16:09:38"}
{"question": "Which airlines have less than 200 flights?", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of flights", "subexpression": "SELECT DISTINCT flights.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "entire_SQL": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "original explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of flights", "subexpression": "SELECT DISTINCT flights.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct name of airline of flights", "subexpression": "SELECT DISTINCT flights.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "duration": 5.592849969863892, "time": "2023-02-09 16:09:46"}
{"question": "Which airlines have less than 200 flights?", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of flights", "subexpression": "SELECT DISTINCT flights.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "entire_SQL": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "original explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of flights", "subexpression": "SELECT DISTINCT flights.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of flights", "subexpression": "SELECT DISTINCT flights.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "duration": 3.477951765060425, "time": "2023-02-09 16:09:50"}
{"question": "Which airlines have less than 200 flights?", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of flights", "subexpression": "SELECT DISTINCT flights.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "entire_SQL": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "original explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of flights", "subexpression": "SELECT DISTINCT flights.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of airlines", "subexpression": "SELECT DISTINCT flights.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "duration": 40.85821866989136, "time": "2023-02-09 16:10:33"}
{"question": "What is the official language used in the country the name of whose head of state is Beatrix.", "dbid": "world_1", "TBid": "countrylanguage", "previous_generated_explanation": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the isofficial of countrylanguage", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "entire_SQL": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = 'Beatrix'", "original explanations": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the isofficial of countrylanguage", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the language where countrylanguage isofficial", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "duration": 62.6098575592041, "time": "2023-02-09 16:12:14"}
{"question": "show me the city with dock count 27", "dbid": "bike_1", "TBid": "station", "previous_generated_explanation": [{"explanation": [{"explanation": "In table station", "subexpression": "FROM station"}, {"explanation": "Keep the records where the dock count of station is 27", "subexpression": "WHERE station.dock_count = 27"}, {"explanation": "Return the city of station", "subexpression": "SELECT station.city"}], "number": "Start first query,", "subquery": "SELECT station.city FROM station WHERE station.dock_count = 27", "supplement": ""}], "entire_SQL": "SELECT station.city FROM station WHERE station.dock_count = 27", "original explanations": [{"explanation": [{"explanation": "In table station", "subexpression": "FROM station"}, {"explanation": "Keep the records where the dock count of station is 27", "subexpression": "WHERE station.dock_count = 27"}, {"explanation": "Return the city of station", "subexpression": "SELECT station.city"}], "number": "Start first query,", "subquery": "SELECT station.city FROM station WHERE station.dock_count = 27", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table station", "subexpression": "FROM station"}, {"explanation": "Keep the records where the dock count of station is 15", "subexpression": "WHERE station.dock_count = 27"}, {"explanation": "Return the city of station", "subexpression": "SELECT station.city"}], "number": "Start first query,", "subquery": "SELECT station.city FROM station WHERE station.dock_count = 27", "supplement": ""}], "duration": 19.82366394996643, "time": "2023-02-11 11:51:08"}
{"question": "show me the city with dock count 27", "dbid": "bike_1", "TBid": "station", "previous_generated_explanation": [{"explanation": [{"explanation": "In table station", "subexpression": "FROM station"}, {"explanation": "Keep the records where the dock count of station is 15", "subexpression": "WHERE station.dock_count = 15"}, {"explanation": "Return the city of station", "subexpression": "SELECT station.city"}], "number": "Start first query,", "subquery": "SELECT station.city FROM station WHERE station.dock_count = 15", "supplement": ""}], "entire_SQL": "SELECT station.city FROM station WHERE station.dock_count = 15", "original explanations": [{"explanation": [{"explanation": "In table station", "subexpression": "FROM station"}, {"explanation": "Keep the records where the dock count of station is 15", "subexpression": "WHERE station.dock_count = 15"}, {"explanation": "Return the city of station", "subexpression": "SELECT station.city"}], "number": "Start first query,", "subquery": "SELECT station.city FROM station WHERE station.dock_count = 15", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table station", "subexpression": "FROM station"}, {"explanation": "Keep the records where the dock count of station is 15", "subexpression": "WHERE station.dock_count = 15"}, {"explanation": "Return the city and lat of station", "subexpression": "SELECT station.city"}], "number": "Start first query,", "subquery": "SELECT station.city FROM station WHERE station.dock_count = 15", "supplement": ""}], "duration": 14.917850017547607, "time": "2023-02-11 11:51:24"}
{"question": "show me the city with dock count 27", "dbid": "bike_1", "TBid": "station", "previous_generated_explanation": [{"explanation": [{"explanation": "In table station", "subexpression": "FROM station"}, {"explanation": "Keep the records where the dock count of station is 15", "subexpression": "WHERE station.dock_count = 15"}, {"explanation": "Return the city of station and the lat of station", "subexpression": "SELECT station.city , station.lat"}], "number": "Start first query,", "subquery": "SELECT station.city , station.lat FROM station WHERE station.dock_count = 15", "supplement": ""}], "entire_SQL": "SELECT station.city , station.lat FROM station WHERE station.dock_count = 15", "original explanations": [{"explanation": [{"explanation": "In table station", "subexpression": "FROM station"}, {"explanation": "Keep the records where the dock count of station is 15", "subexpression": "WHERE station.dock_count = 15"}, {"explanation": "Return the city of station and the lat of station", "subexpression": "SELECT station.city , station.lat"}], "number": "Start first query,", "subquery": "SELECT station.city , station.lat FROM station WHERE station.dock_count = 15", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table station", "subexpression": "FROM station"}, {"explanation": "Keep the records where the dock count of station is 15", "subexpression": "WHERE station.dock_count = 15"}, {"explanation": "Return the city name of station and the lat of station", "subexpression": "SELECT station.city , station.lat"}], "number": "Start first query,", "subquery": "SELECT station.city , station.lat FROM station WHERE station.dock_count = 15", "supplement": ""}], "duration": 12.57691502571106, "time": "2023-02-11 11:51:38"}
{"question": "show me the city with dock count 27", "dbid": "bike_1", "TBid": "station", "previous_generated_explanation": [{"explanation": [{"explanation": "In table station", "subexpression": "FROM station"}, {"explanation": "Keep the records where the dock count of station is 15", "subexpression": "WHERE station.dock_count = 15"}, {"explanation": "Return the city of station and the lat of station", "subexpression": "SELECT station.city , station.lat"}], "number": "Start first query,", "subquery": "SELECT station.city , station.lat FROM station WHERE station.dock_count = 15", "supplement": ""}], "entire_SQL": "SELECT station.city , station.lat FROM station WHERE station.dock_count = 15", "original explanations": [{"explanation": [{"explanation": "In table station", "subexpression": "FROM station"}, {"explanation": "Keep the records where the dock count of station is 15", "subexpression": "WHERE station.dock_count = 15"}, {"explanation": "Return the city of station and the lat of station", "subexpression": "SELECT station.city , station.lat"}], "number": "Start first query,", "subquery": "SELECT station.city , station.lat FROM station WHERE station.dock_count = 15", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table station", "subexpression": "FROM station"}, {"explanation": "Keep the records where the dock count of station is 15", "subexpression": "WHERE station.dock_count = 15"}, {"explanation": "Return the name, city of station and the lat of station", "subexpression": "SELECT station.city , station.lat"}], "number": "Start first query,", "subquery": "SELECT station.city , station.lat FROM station WHERE station.dock_count = 15", "supplement": ""}], "duration": 11.199193239212036, "time": "2023-02-11 11:51:50"}
{"question": "show me the city with dock count 27", "dbid": "bike_1", "TBid": "station", "previous_generated_explanation": [{"explanation": [{"explanation": "In table station", "subexpression": "FROM station"}, {"explanation": "Keep the records where the dock count of station is 15", "subexpression": "WHERE station.dock_count = 15"}, {"explanation": "Return the name of station and the lat of station", "subexpression": "SELECT station.name , station.lat"}], "number": "Start first query,", "subquery": "SELECT station.name , station.lat FROM station WHERE station.dock_count = 15", "supplement": ""}], "entire_SQL": "SELECT station.name , station.lat FROM station WHERE station.dock_count = 15", "original explanations": [{"explanation": [{"explanation": "In table station", "subexpression": "FROM station"}, {"explanation": "Keep the records where the dock count of station is 15", "subexpression": "WHERE station.dock_count = 15"}, {"explanation": "Return the name of station and the lat of station", "subexpression": "SELECT station.name , station.lat"}], "number": "Start first query,", "subquery": "SELECT station.name , station.lat FROM station WHERE station.dock_count = 15", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table station", "subexpression": "FROM station"}, {"explanation": "Keep the records where the dock count of station is 15", "subexpression": "WHERE station.dock_count = 15"}, {"explanation": "Return the city and name of station", "subexpression": "SELECT station.name , station.lat"}], "number": "Start first query,", "subquery": "SELECT station.name , station.lat FROM station WHERE station.dock_count = 15", "supplement": ""}], "duration": 20.07474422454834, "time": "2023-02-11 11:52:12"}
{"question": "show me the city with dock count 27", "dbid": "bike_1", "TBid": "station", "previous_generated_explanation": [{"explanation": [{"explanation": "In table station", "subexpression": "FROM station"}, {"explanation": "Keep the records where the dock count of station is 15", "subexpression": "WHERE station.dock_count = 15"}, {"explanation": "Return the city of station and the name of station", "subexpression": "SELECT station.city , station.name"}], "number": "Start first query,", "subquery": "SELECT station.city , station.name FROM station WHERE station.dock_count = 15", "supplement": ""}], "entire_SQL": "SELECT station.city , station.name FROM station WHERE station.dock_count = 15", "original explanations": [{"explanation": [{"explanation": "In table station", "subexpression": "FROM station"}, {"explanation": "Keep the records where the dock count of station is 15", "subexpression": "WHERE station.dock_count = 15"}, {"explanation": "Return the city of station and the name of station", "subexpression": "SELECT station.city , station.name"}], "number": "Start first query,", "subquery": "SELECT station.city , station.name FROM station WHERE station.dock_count = 15", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table station", "subexpression": "FROM station"}, {"explanation": "Keep the records where the dock count of station is 15", "subexpression": "WHERE station.dock_count = 15"}, {"explanation": "Return the city of station and the lat and the name of station", "subexpression": "SELECT station.city , station.name"}], "number": "Start first query,", "subquery": "SELECT station.city , station.name FROM station WHERE station.dock_count = 15", "supplement": ""}], "duration": 13.295637845993042, "time": "2023-02-11 11:52:28"}
{"question": "show me the city with dock count 27", "dbid": "bike_1", "TBid": "station", "previous_generated_explanation": [{"explanation": [{"explanation": "In table station", "subexpression": "FROM station"}, {"explanation": "Keep the records where the dock count of station is 15", "subexpression": "WHERE station.dock_count = 15"}, {"explanation": "Return the city of station and the name of station", "subexpression": "SELECT station.city , station.name"}], "number": "Start first query,", "subquery": "SELECT station.city , station.name FROM station WHERE station.dock_count = 15", "supplement": ""}], "entire_SQL": "SELECT station.city , station.name FROM station WHERE station.dock_count = 15", "original explanations": [{"explanation": [{"explanation": "In table station", "subexpression": "FROM station"}, {"explanation": "Keep the records where the dock count of station is 15", "subexpression": "WHERE station.dock_count = 15"}, {"explanation": "Return the city of station and the name of station", "subexpression": "SELECT station.city , station.name"}], "number": "Start first query,", "subquery": "SELECT station.city , station.name FROM station WHERE station.dock_count = 15", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table station", "subexpression": "FROM station"}, {"explanation": "Keep the records where the dock count of station is 15", "subexpression": "WHERE station.dock_count = 15"}, {"explanation": "Return the city of station, lat of station and the name of station", "subexpression": "SELECT station.city , station.name"}], "number": "Start first query,", "subquery": "SELECT station.city , station.name FROM station WHERE station.dock_count = 15", "supplement": ""}], "duration": 16.430774450302124, "time": "2023-02-11 11:52:46"}
{"question": "List all the student details in reversed alphabetical order.", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "entire_SQL": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "duration": 17.006781578063965, "time": "2023-02-11 11:54:38"}
{"question": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table addresses and table students", "subexpression": "FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id"}, {"explanation": "Keep the records where the country of addresses is \"Haiti\" OR the cell mobile number of students is \"09700166582\"", "subexpression": "WHERE addresses.country = \"Haiti\" OR students.cell_mobile_number = \"09700166582\""}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE addresses.country = \"Haiti\" OR students.cell_mobile_number = \"09700166582\"", "supplement": ""}], "entire_SQL": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE addresses.country = 'Haiti' OR students.cell_mobile_number = '09700166582'", "original explanations": [{"explanation": [{"explanation": "In table addresses and table students", "subexpression": "FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id"}, {"explanation": "Keep the records where the country of addresses is \"Haiti\" OR the cell mobile number of students is \"09700166582\"", "subexpression": "WHERE addresses.country = \"Haiti\" OR students.cell_mobile_number = \"09700166582\""}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE addresses.country = \"Haiti\" OR students.cell_mobile_number = \"09700166582\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table addresses and table students", "subexpression": "FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id"}, {"explanation": "Keep the records where the country of addresses is \"Haiti\" OR the cell mobile number of students is \"09700166582\"", "subexpression": "WHERE addresses.country = \"Haiti\" OR students.cell_mobile_number = \"09700166582\""}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE addresses.country = \"Haiti\" OR students.cell_mobile_number = \"09700166582\"", "supplement": ""}], "duration": 20.19748091697693, "time": "2023-02-11 11:56:55"}
{"question": "Which airlines have less than 200 flights?", "dbid": "flight_2", "TBid": "", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return the airline of airlines", "subexpression": "SELECT airlines.airline"}], "number": "Start first query,", "subquery": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "entire_SQL": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno<200", "original explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return the airline of airlines", "subexpression": "SELECT airlines.airline"}], "number": "Start first query,", "subquery": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return the airline of airlines", "subexpression": "SELECT airlines.airline"}], "number": "Start first query,", "subquery": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "duration": 9.329925537109375, "time": "2023-02-11 11:57:26"}
{"question": "Which airlines have less than 200 flights?", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return the airline of airlines", "subexpression": "SELECT airlines.airline"}], "number": "Start first query,", "subquery": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "entire_SQL": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "original explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return the airline of airlines", "subexpression": "SELECT airlines.airline"}], "number": "Start first query,", "subquery": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return the airline of airlines", "subexpression": "SELECT airlines.airline"}], "number": "Start first query,", "subquery": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "duration": 23.236107110977173, "time": "2023-02-11 11:57:51"}
{"question": "Which airlines have less than 200 flights?", "dbid": "flight_2", "TBid": "airlines", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return the airline of airlines", "subexpression": "SELECT airlines.airline"}], "number": "Start first query,", "subquery": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "entire_SQL": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "original explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return the airline of airlines", "subexpression": "SELECT airlines.airline"}], "number": "Start first query,", "subquery": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return the unique airline of airlines", "subexpression": "SELECT airlines.airline"}], "number": "Start first query,", "subquery": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "duration": 13.779136657714844, "time": "2023-02-11 11:58:06"}
{"question": "Which airlines have less than 200 flights?", "dbid": "flight_2", "TBid": "airlines", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return the uid of airlines", "subexpression": "SELECT airlines.uid"}], "number": "Start first query,", "subquery": "SELECT airlines.uid FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "entire_SQL": "SELECT airlines.uid FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "original explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return the uid of airlines", "subexpression": "SELECT airlines.uid"}], "number": "Start first query,", "subquery": "SELECT airlines.uid FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return the airline of airlines", "subexpression": "SELECT airlines.uid"}], "number": "Start first query,", "subquery": "SELECT airlines.uid FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "duration": 4.219395160675049, "time": "2023-02-11 11:58:11"}
{"question": "Which airlines have less than 200 flights?", "dbid": "flight_2", "TBid": "airlines", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return the airline of airlines", "subexpression": "SELECT airlines.airline"}], "number": "Start first query,", "subquery": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "entire_SQL": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "original explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return the airline of airlines", "subexpression": "SELECT airlines.airline"}], "number": "Start first query,", "subquery": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return the distinct airline of airlines", "subexpression": "SELECT airlines.airline"}], "number": "Start first query,", "subquery": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "duration": 3.6130497455596924, "time": "2023-02-11 11:58:16"}
{"question": "Which airlines have less than 200 flights?", "dbid": "flight_2", "TBid": "airlines", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return the airline of airlines", "subexpression": "SELECT airlines.airline"}], "number": "Start first query,", "subquery": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "entire_SQL": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno<200", "original explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return the airline of airlines", "subexpression": "SELECT airlines.airline"}], "number": "Start first query,", "subquery": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return the distinct airline of airlines", "subexpression": "SELECT airlines.airline"}], "number": "Start first query,", "subquery": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "duration": 5.7832770347595215, "time": "2023-02-11 11:58:34"}
{"question": "Which airlines have less than 200 flights?", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of flights", "subexpression": "SELECT DISTINCT flights.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "entire_SQL": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "original explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of flights", "subexpression": "SELECT DISTINCT flights.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of airlines", "subexpression": "SELECT DISTINCT flights.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "duration": 43.57880187034607, "time": "2023-02-11 11:59:19"}
{"question": "What is the official language used in the country the name of whose head of state is Beatrix?", "dbid": "world_1", "TBid": "countrylanguage", "previous_generated_explanation": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the isofficial of countrylanguage", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "entire_SQL": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = 'Beatrix'", "original explanations": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the isofficial of countrylanguage", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the countrylanguage where isofficial = T", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "duration": 43.06446313858032, "time": "2023-02-11 12:00:26"}
{"question": "What is the official language used in the country the name of whose head of state is Beatrix?", "dbid": "world_1", "TBid": "countrylanguage", "previous_generated_explanation": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the isofficial of countrylanguage", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "entire_SQL": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = 'Beatrix'", "original explanations": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the isofficial of countrylanguage", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the language of countrylanguage where isofficial is T", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "duration": 32.391300201416016, "time": "2023-02-11 12:01:09"}
{"question": "What is the official language used in the country the name of whose head of state is Beatrix?", "dbid": "world_1", "TBid": "countrylanguage", "previous_generated_explanation": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the isofficial of countrylanguage", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "entire_SQL": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = 'Beatrix'", "original explanations": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the isofficial of countrylanguage", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the language of countrylanguage where isofficial of countrylanguage is T", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "duration": 15.080671787261963, "time": "2023-02-11 12:02:00"}
{"question": "What is the official language used in the country the name of whose head of state is Beatrix?", "dbid": "world_1", "TBid": "countrylanguage", "previous_generated_explanation": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the isofficial of countrylanguage", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "entire_SQL": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = 'Beatrix'", "original explanations": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Return the isofficial of countrylanguage", "subexpression": "SELECT countrylanguage.isofficial"}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table country and table countrylanguage", "subexpression": "FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode"}, {"explanation": "Keep the records where the headofstate of country is \"Beatrix\"", "subexpression": "WHERE country.headofstate = \"Beatrix\""}, {"explanation": "Keep the language of countrylanguage where the isofficial of countrylanguage is T", "subexpression": "SELECT countrylanguage.isofficial"}, {"explanation": "Return all the records", "subexpression": "..."}], "number": "Start first query,", "subquery": "SELECT countrylanguage.isofficial FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.headofstate = \"Beatrix\"", "supplement": ""}], "duration": 47.36540198326111, "time": "2023-02-11 12:03:47"}
{"question": "show me the activity name which students and faculty both participate in, sort in reverse alphabetical order", "dbid": "activity_1", "TBid": "activity", "previous_generated_explanation": [{"explanation": [{"explanation": "In table activity and table faculty participates in", "subexpression": "FROM activity JOIN faculty_participates_in ON activity.actid = faculty_participates_in.actid"}, {"explanation": "Sort the records in ascending order based on the activity name of activity", "subexpression": "ORDER BY activity.activity_name ASC"}, {"explanation": "Return the activity name of activity", "subexpression": "SELECT activity.activity_name"}], "number": "Start first query,", "subquery": "SELECT activity.activity_name FROM activity JOIN faculty_participates_in ON activity.actid = faculty_participates_in.actid ORDER BY activity.activity_name ASC", "supplement": ""}], "entire_SQL": "SELECT activity.activity_name FROM activity JOIN faculty_participates_in ON activity.actid = faculty_participates_in.actid ORDER BY activity.activity_name ASC", "original explanations": [{"explanation": [{"explanation": "In table activity and table faculty participates in", "subexpression": "FROM activity JOIN faculty_participates_in ON activity.actid = faculty_participates_in.actid"}, {"explanation": "Sort the records in ascending order based on the activity name of activity", "subexpression": "ORDER BY activity.activity_name ASC"}, {"explanation": "Return the activity name of activity", "subexpression": "SELECT activity.activity_name"}], "number": "Start first query,", "subquery": "SELECT activity.activity_name FROM activity JOIN faculty_participates_in ON activity.actid = faculty_participates_in.actid ORDER BY activity.activity_name ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table activity and table faculty participates in", "subexpression": "FROM activity JOIN faculty_participates_in ON activity.actid = faculty_participates_in.actid"}, {"explanation": "Sort the records in descending order based on the activity name of activity", "subexpression": "ORDER BY activity.activity_name ASC"}, {"explanation": "Return the activity name of activity", "subexpression": "SELECT activity.activity_name"}], "number": "Start first query,", "subquery": "SELECT activity.activity_name FROM activity JOIN faculty_participates_in ON activity.actid = faculty_participates_in.actid ORDER BY activity.activity_name ASC", "supplement": ""}], "duration": 24.6997389793396, "time": "2023-02-11 15:48:55"}
{"question": "show me the activity name which students and faculty both participate in, sort in reverse alphabetical order", "dbid": "activity_1", "TBid": "activity", "previous_generated_explanation": [{"explanation": [{"explanation": "In table activity and table faculty participates in", "subexpression": "FROM activity JOIN faculty_participates_in ON activity.actid = faculty_participates_in.actid"}, {"explanation": "Sort the records in descending order based on the activity name of activity", "subexpression": "ORDER BY activity.activity_name DESC"}, {"explanation": "Return the activity name of activity", "subexpression": "SELECT activity.activity_name"}], "number": "Start first query,", "subquery": "SELECT activity.activity_name FROM activity JOIN faculty_participates_in ON activity.actid = faculty_participates_in.actid ORDER BY activity.activity_name DESC", "supplement": ""}], "entire_SQL": "SELECT activity.activity_name FROM activity JOIN faculty_participates_in ON activity.actid = faculty_participates_in.actid ORDER BY activity.activity_name DESC", "original explanations": [{"explanation": [{"explanation": "In table activity and table faculty participates in", "subexpression": "FROM activity JOIN faculty_participates_in ON activity.actid = faculty_participates_in.actid"}, {"explanation": "Sort the records in descending order based on the activity name of activity", "subexpression": "ORDER BY activity.activity_name DESC"}, {"explanation": "Return the activity name of activity", "subexpression": "SELECT activity.activity_name"}], "number": "Start first query,", "subquery": "SELECT activity.activity_name FROM activity JOIN faculty_participates_in ON activity.actid = faculty_participates_in.actid ORDER BY activity.activity_name DESC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table activity and table faculty participates in", "subexpression": "FROM activity JOIN faculty_participates_in ON activity.actid = faculty_participates_in.actid"}, {"explanation": "Sort the records in descending order based on the activity name of activity", "subexpression": "ORDER BY activity.activity_name DESC"}, {"explanation": "Return the unique activity name of activity", "subexpression": "SELECT activity.activity_name"}], "number": "Start first query,", "subquery": "SELECT activity.activity_name FROM activity JOIN faculty_participates_in ON activity.actid = faculty_participates_in.actid ORDER BY activity.activity_name DESC", "supplement": ""}], "duration": 9.300750017166138, "time": "2023-02-11 15:49:05"}
{"question": "show me the activity name which students and faculty both participate in, sort in reverse alphabetical order", "dbid": "activity_1", "TBid": "activity", "previous_generated_explanation": [{"explanation": [{"explanation": "In table activity and table faculty participates in", "subexpression": "FROM activity JOIN faculty_participates_in ON activity.actid = faculty_participates_in.actid"}, {"explanation": "Sort the records in descending order based on the activity name of activity", "subexpression": "ORDER BY activity.activity_name DESC"}, {"explanation": "Return the activity name of activity", "subexpression": "SELECT activity.activity_name"}], "number": "Start first query,", "subquery": "SELECT activity.activity_name FROM activity JOIN faculty_participates_in ON activity.actid = faculty_participates_in.actid ORDER BY activity.activity_name DESC", "supplement": ""}], "entire_SQL": "SELECT activity.activity_name FROM activity JOIN faculty_participates_in ON activity.actid = faculty_participates_in.actid ORDER BY activity.activity_name DESC", "original explanations": [{"explanation": [{"explanation": "In table activity and table faculty participates in", "subexpression": "FROM activity JOIN faculty_participates_in ON activity.actid = faculty_participates_in.actid"}, {"explanation": "Sort the records in descending order based on the activity name of activity", "subexpression": "ORDER BY activity.activity_name DESC"}, {"explanation": "Return the activity name of activity", "subexpression": "SELECT activity.activity_name"}], "number": "Start first query,", "subquery": "SELECT activity.activity_name FROM activity JOIN faculty_participates_in ON activity.actid = faculty_participates_in.actid ORDER BY activity.activity_name DESC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table activity and table faculty participates in", "subexpression": "FROM activity JOIN faculty_participates_in ON activity.actid = faculty_participates_in.actid"}, {"explanation": "Sort the records in descending order based on the activity name of activity", "subexpression": "ORDER BY activity.activity_name DESC"}, {"explanation": "Return the distinct activity name of activity", "subexpression": "SELECT activity.activity_name"}], "number": "Start first query,", "subquery": "SELECT activity.activity_name FROM activity JOIN faculty_participates_in ON activity.actid = faculty_participates_in.actid ORDER BY activity.activity_name DESC", "supplement": ""}], "duration": 9.510055780410767, "time": "2023-02-11 15:49:16"}
{"question": "show me all students in reverse alphabetical order", "dbid": "student_transcripts_tracking", "TBid": "", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the first name of students", "subexpression": "ORDER BY students.first_name ASC"}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM students ORDER BY students.first_name ASC", "supplement": ""}], "entire_SQL": "SELECT students.first_name FROM students ORDER BY students.first_name ASC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the first name of students", "subexpression": "ORDER BY students.first_name ASC"}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM students ORDER BY students.first_name ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the first name of students", "subexpression": "ORDER BY students.first_name ASC"}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM students ORDER BY students.first_name ASC", "supplement": ""}], "duration": 7.493230104446411, "time": "2023-02-11 15:53:17"}
{"question": "show me all students in reverse alphabetical order", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the first name of students", "subexpression": "ORDER BY students.first_name DESC"}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM students ORDER BY students.first_name DESC", "supplement": ""}], "entire_SQL": "SELECT students.first_name FROM students ORDER BY students.first_name DESC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the first name of students", "subexpression": "ORDER BY students.first_name DESC"}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM students ORDER BY students.first_name DESC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the first name of students", "subexpression": "ORDER BY students.first_name DESC"}, {"explanation": "Return distinct students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM students ORDER BY students.first_name DESC", "supplement": ""}], "duration": 55.488847494125366, "time": "2023-02-11 15:54:14"}
{"question": "show me all students in reverse alphabetical order", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the first name of students", "subexpression": "ORDER BY students.first_name DESC"}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM students ORDER BY students.first_name DESC", "supplement": ""}], "entire_SQL": "SELECT * FROM students ORDER BY students.first_name DESC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the first name of students", "subexpression": "ORDER BY students.first_name DESC"}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM students ORDER BY students.first_name DESC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the first name of students", "subexpression": "ORDER BY students.first_name DESC"}, {"explanation": "Return first name last name and other_studentdetails", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM students ORDER BY students.first_name DESC", "supplement": ""}], "duration": 62.95523500442505, "time": "2023-02-11 15:55:19"}
{"question": "show me all students in reverse alphabetical order", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the first name of students", "subexpression": "ORDER BY students.first_name DESC"}, {"explanation": "Return the first name of students, the other student details of students, and the other student details of students", "subexpression": "SELECT students.first_name , students.other_student_details , students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.first_name , students.other_student_details , students.other_student_details FROM students ORDER BY students.first_name DESC", "supplement": ""}], "entire_SQL": "SELECT students.first_name , students.other_student_details , students.other_student_details FROM students ORDER BY students.first_name DESC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the first name of students", "subexpression": "ORDER BY students.first_name DESC"}, {"explanation": "Return the first name of students, the other student details of students, and the other student details of students", "subexpression": "SELECT students.first_name , students.other_student_details , students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.first_name , students.other_student_details , students.other_student_details FROM students ORDER BY students.first_name DESC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the first name of students", "subexpression": "ORDER BY students.first_name DESC"}, {"explanation": "Return the first name of students, last name of students, and other student details", "subexpression": "SELECT students.first_name , students.other_student_details , students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.first_name , students.other_student_details , students.other_student_details FROM students ORDER BY students.first_name DESC", "supplement": ""}], "duration": 29.41713309288025, "time": "2023-02-11 15:55:49"}
{"question": "Which airlines have less than 200 flights?", "dbid": "flight_2", "TBid": "airlines", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return the airline of airlines", "subexpression": "SELECT airlines.airline"}], "number": "Start first query,", "subquery": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "entire_SQL": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno<200", "original explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return the airline of airlines", "subexpression": "SELECT airlines.airline"}], "number": "Start first query,", "subquery": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return the distinct airline of airlines", "subexpression": "SELECT airlines.airline"}], "number": "Start first query,", "subquery": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "duration": 22.797234535217285, "time": "2023-02-11 15:58:46"}
{"question": "Which airlines have less than 200 flights?", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of flights", "subexpression": "SELECT DISTINCT flights.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "entire_SQL": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "original explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of flights", "subexpression": "SELECT DISTINCT flights.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return airline of distinct flights", "subexpression": "SELECT DISTINCT flights.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "duration": 30.109709978103638, "time": "2023-02-11 15:59:18"}
{"question": "Which airlines have less than 200 flights?", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of flights", "subexpression": "SELECT DISTINCT flights.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "entire_SQL": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "original explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of flights", "subexpression": "SELECT DISTINCT flights.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of airline", "subexpression": "SELECT DISTINCT flights.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "duration": 41.31078600883484, "time": "2023-02-11 16:00:01"}
{"question": "Which airlines have less than 200 flights?", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of airline", "subexpression": "SELECT DISTINCT airline.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT airline.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "entire_SQL": "SELECT DISTINCT airline.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "original explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of airline", "subexpression": "SELECT DISTINCT airline.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT airline.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of airlines", "subexpression": "SELECT DISTINCT airline.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT airline.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "duration": 5.917261362075806, "time": "2023-02-11 16:00:09"}
{"question": "Which airlines have less than 200 flights?", "dbid": "flight_2", "TBid": "airlines", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airlines of airlines", "subexpression": "SELECT DISTINCT airlines.airlines"}], "number": "Start first query,", "subquery": "SELECT DISTINCT airlines.airlines FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "entire_SQL": "SELECT DISTINCT airlines.airlines FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "original explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airlines of airlines", "subexpression": "SELECT DISTINCT airlines.airlines"}], "number": "Start first query,", "subquery": "SELECT DISTINCT airlines.airlines FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of airlines", "subexpression": "SELECT DISTINCT airlines.airlines"}], "number": "Start first query,", "subquery": "SELECT DISTINCT airlines.airlines FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "duration": 9.656983613967896, "time": "2023-02-11 16:00:20"}
{"question": "Which airlines have less than 200 flights?", "dbid": "flight_2", "TBid": "airlines", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of airline", "subexpression": "SELECT DISTINCT airline.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT airline.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "entire_SQL": "SELECT DISTINCT airline.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "original explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of airline", "subexpression": "SELECT DISTINCT airline.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT airline.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline from airlines", "subexpression": "SELECT DISTINCT airline.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT airline.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "duration": 20.210078477859497, "time": "2023-02-11 16:00:42"}
{"question": "Which airlines have less than 200 flights?", "dbid": "flight_2", "TBid": "airlines", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct uid of airlines", "subexpression": "SELECT DISTINCT airlines.uid"}], "number": "Start first query,", "subquery": "SELECT DISTINCT airlines.uid FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "entire_SQL": "SELECT DISTINCT airlines.uid FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "original explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct uid of airlines", "subexpression": "SELECT DISTINCT airlines.uid"}], "number": "Start first query,", "subquery": "SELECT DISTINCT airlines.uid FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of airlines", "subexpression": "SELECT DISTINCT airlines.uid"}], "number": "Start first query,", "subquery": "SELECT DISTINCT airlines.uid FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "duration": 11.66675877571106, "time": "2023-02-11 16:00:55"}
{"question": "Which airlines have less than 200 flights?", "dbid": "flight_2", "TBid": "airlines", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return the airline of airlines", "subexpression": "SELECT airlines.airline"}], "number": "Start first query,", "subquery": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "entire_SQL": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno<200", "original explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return the airline of airlines", "subexpression": "SELECT airlines.airline"}], "number": "Start first query,", "subquery": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return the distinct airline of airlines", "subexpression": "SELECT airlines.airline"}], "number": "Start first query,", "subquery": "SELECT airlines.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "duration": 16.00512385368347, "time": "2023-02-11 16:01:50"}
{"question": "Which airlines have less than 200 flights?", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of flights", "subexpression": "SELECT DISTINCT flights.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "entire_SQL": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "original explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of flights", "subexpression": "SELECT DISTINCT flights.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines and table flights", "subexpression": "FROM airlines JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the flightno of flights is less than 200", "subexpression": "WHERE flights.flightno < 200"}, {"explanation": "Return distinct airline of airlines", "subexpression": "SELECT DISTINCT flights.airline"}], "number": "Start first query,", "subquery": "SELECT DISTINCT flights.airline FROM airlines JOIN flights ON airlines.uid = flights.airline WHERE flights.flightno < 200", "supplement": ""}], "duration": 13.106462955474854, "time": "2023-02-11 16:02:04"}
{"question": "List all the student details in reversed alphabetical order according to their name", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "entire_SQL": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the first_name of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "duration": 40.721675157547, "time": "2023-02-12 15:25:00"}
{"question": "List all the student details in reversed alphabetical order according to their name", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the first name of students", "subexpression": "ORDER BY students.first_name ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.first_name ASC", "supplement": ""}], "entire_SQL": "SELECT students.other_student_details FROM students ORDER BY students.first_name ASC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the first name of students", "subexpression": "ORDER BY students.first_name ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.first_name ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other_student_details\n\n of students", "subexpression": "ORDER BY students.first_name ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.first_name ASC", "supplement": ""}], "duration": 55.90211606025696, "time": "2023-02-12 15:25:58"}
{"question": "List all the student details in reversed alphabetical order according to their name", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "entire_SQL": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "duration": 9.888049125671387, "time": "2023-02-12 15:26:10"}
{"question": "List all the student details in reversed alphabetical order according to their name", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details DESC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details DESC", "supplement": ""}], "entire_SQL": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details DESC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details DESC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details DESC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details DESC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details DESC", "supplement": ""}], "duration": 1.2289679050445557, "time": "2023-02-12 15:26:13"}
{"question": "which airlines occur in the database flights less than 200 times", "dbid": "flight_2", "TBid": "flights", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flights and table airlines", "subexpression": "FROM flights JOIN airlines ON flights.airline = airlines.uid"}, {"explanation": "Group the records based on the airline of flights", "subexpression": "GROUP BY flights.airline"}, {"explanation": "Keep the groups where the number of records is less than 200", "subexpression": "HAVING COUNT ( * ) < 200"}, {"explanation": "Return the airline of airlines", "subexpression": "SELECT airlines.airline"}], "number": "Start first query,", "subquery": "SELECT airlines.airline FROM flights JOIN airlines ON flights.airline = airlines.uid GROUP BY flights.airline HAVING COUNT ( * ) < 200", "supplement": ""}], "entire_SQL": "SELECT airlines.airline FROM flights JOIN airlines ON flights.airline = airlines.uid GROUP BY flights.airline HAVING COUNT( * )<200", "original explanations": [{"explanation": [{"explanation": "In table flights and table airlines", "subexpression": "FROM flights JOIN airlines ON flights.airline = airlines.uid"}, {"explanation": "Group the records based on the airline of flights", "subexpression": "GROUP BY flights.airline"}, {"explanation": "Keep the groups where the number of records is less than 200", "subexpression": "HAVING COUNT ( * ) < 200"}, {"explanation": "Return the airline of airlines", "subexpression": "SELECT airlines.airline"}], "number": "Start first query,", "subquery": "SELECT airlines.airline FROM flights JOIN airlines ON flights.airline = airlines.uid GROUP BY flights.airline HAVING COUNT ( * ) < 200", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flights and table airlines", "subexpression": "FROM flights JOIN airlines ON flights.airline = airlines.uid"}, {"explanation": "Group the records based on the airline of flights", "subexpression": "GROUP BY flights.airline"}, {"explanation": "Keep the groups where the number of records is less than 200", "subexpression": "HAVING COUNT ( * ) < 200"}, {"explanation": "Return the airline of airlines", "subexpression": "SELECT airlines.airline"}], "number": "Start first query,", "subquery": "SELECT airlines.airline FROM flights JOIN airlines ON flights.airline = airlines.uid GROUP BY flights.airline HAVING COUNT ( * ) < 200", "supplement": ""}], "duration": 479.2448797225952, "time": "2023-02-12 15:38:31"}
{"question": "How many countries speak both English and Dutch?", "dbid": "world_1", "TBid": "countrylanguage", "previous_generated_explanation": [{"explanation": [{"explanation": "In table countrylanguage", "subexpression": "FROM countrylanguage"}, {"explanation": "Keep the records where the language of countrylanguage is \"Dutch\"", "subexpression": "WHERE countrylanguage.language = \"Dutch\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM countrylanguage WHERE countrylanguage.language = \"Dutch\"", "supplement": ""}], "entire_SQL": "SELECT COUNT( * ) FROM countrylanguage WHERE countrylanguage.language = 'Dutch'", "original explanations": [{"explanation": [{"explanation": "In table countrylanguage", "subexpression": "FROM countrylanguage"}, {"explanation": "Keep the records where the language of countrylanguage is \"Dutch\"", "subexpression": "WHERE countrylanguage.language = \"Dutch\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM countrylanguage WHERE countrylanguage.language = \"Dutch\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table countrylanguage", "subexpression": "FROM countrylanguage"}, {"explanation": "Keep the records where the language of countrylanguage is \"Dutch\" and the language of countrylanguage is \"English\"", "subexpression": "WHERE countrylanguage.language = \"Dutch\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM countrylanguage WHERE countrylanguage.language = \"Dutch\"", "supplement": ""}], "duration": 131.9728343486786, "time": "2023-02-12 20:36:35"}
{"question": "How many 'United Airlines' flights depart from Airport 'AHD'?", "dbid": "flight_2", "TBid": "airports", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flights, table airports, AND table flights", "subexpression": "FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the airportname of airports is \"AHD\" AND the airline of airlines is \"United Airlines\"", "subexpression": "WHERE airports.airportname = \"AHD\" AND airlines.airline = \"United Airlines\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN flights ON airlines.uid = flights.airline WHERE airports.airportname = \"AHD\" AND airlines.airline = \"United Airlines\"", "supplement": ""}], "entire_SQL": "SELECT COUNT( * ) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN flights ON airlines.uid = flights.airline WHERE airports.airportname = 'AHD' AND airlines.airline = 'United Airlines'", "original explanations": [{"explanation": [{"explanation": "In table flights, table airports, AND table flights", "subexpression": "FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the airportname of airports is \"AHD\" AND the airline of airlines is \"United Airlines\"", "subexpression": "WHERE airports.airportname = \"AHD\" AND airlines.airline = \"United Airlines\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN flights ON airlines.uid = flights.airline WHERE airports.airportname = \"AHD\" AND airlines.airline = \"United Airlines\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flights, table airports, AND table flights", "subexpression": "FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the airportcode of airports is \"AHD\" AND the airline of airlines is \"United Airlines\"", "subexpression": "WHERE airports.airportname = \"AHD\" AND airlines.airline = \"United Airlines\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN flights ON airlines.uid = flights.airline WHERE airports.airportname = \"AHD\" AND airlines.airline = \"United Airlines\"", "supplement": ""}], "duration": 29.720451593399048, "time": "2023-02-12 21:52:39"}
{"question": "How many 'United Airlines' flights depart from Airport 'AHD'?", "dbid": "flight_2", "TBid": "airports", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flights, table airports, AND table flights", "subexpression": "FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the airportcode of airports is \"AHD\" AND the airline of airlines is \"United Airlines\"", "subexpression": "WHERE airports.airportcode = \"AHD\" AND airlines.airline = \"United Airlines\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN flights ON airlines.uid = flights.airline WHERE airports.airportcode = \"AHD\" AND airlines.airline = \"United Airlines\"", "supplement": ""}], "entire_SQL": "SELECT COUNT ( * ) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN flights ON airlines.uid = flights.airline WHERE airports.airportcode = \"AHD\" AND airlines.airline = \"United Airlines\"", "original explanations": [{"explanation": [{"explanation": "In table flights, table airports, AND table flights", "subexpression": "FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the airportcode of airports is \"AHD\" AND the airline of airlines is \"United Airlines\"", "subexpression": "WHERE airports.airportcode = \"AHD\" AND airlines.airline = \"United Airlines\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN flights ON airlines.uid = flights.airline WHERE airports.airportcode = \"AHD\" AND airlines.airline = \"United Airlines\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flights, table airports, AND table flights", "subexpression": "FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the airportcode of airports is \"AHD\"", "subexpression": "WHERE airports.airportcode = \"AHD\" AND airlines.airline = \"United Airlines\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN flights ON airlines.uid = flights.airline WHERE airports.airportcode = \"AHD\" AND airlines.airline = \"United Airlines\"", "supplement": ""}], "duration": 9.655356168746948, "time": "2023-02-12 21:52:50"}
{"question": "How many 'United Airlines' flights depart from Airport 'AHD'?", "dbid": "flight_2", "TBid": "airports", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flights, table airports, and table flights", "subexpression": "FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the airportcode of airports is \"A\"", "subexpression": "WHERE airports.airportcode = \"A\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN flights ON airlines.uid = flights.airline WHERE airports.airportcode = \"A\"", "supplement": ""}], "entire_SQL": "SELECT COUNT ( * ) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN flights ON airlines.uid = flights.airline WHERE airports.airportcode = \"A\"", "original explanations": [{"explanation": [{"explanation": "In table flights, table airports, and table flights", "subexpression": "FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the airportcode of airports is \"A\"", "subexpression": "WHERE airports.airportcode = \"A\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN flights ON airlines.uid = flights.airline WHERE airports.airportcode = \"A\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flights, table airports, and table flights", "subexpression": "FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the airportcode of airports is \"AHD\"", "subexpression": "WHERE airports.airportcode = \"A\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN flights ON airlines.uid = flights.airline WHERE airports.airportcode = \"A\"", "supplement": ""}], "duration": 5.275208473205566, "time": "2023-02-12 21:52:57"}
{"question": "How many 'United Airlines' flights depart from Airport 'AHD'?", "dbid": "flight_2", "TBid": "airports", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flights, table airports, and table flights", "subexpression": "FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the airportcode of airports is \"AHD\"", "subexpression": "WHERE airports.airportcode = \"AHD\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN flights ON airlines.uid = flights.airline WHERE airports.airportcode = \"AHD\"", "supplement": ""}], "entire_SQL": "SELECT COUNT ( * ) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN flights ON airlines.uid = flights.airline WHERE airports.airportcode = \"AHD\"", "original explanations": [{"explanation": [{"explanation": "In table flights, table airports, and table flights", "subexpression": "FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the airportcode of airports is \"AHD\"", "subexpression": "WHERE airports.airportcode = \"AHD\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN flights ON airlines.uid = flights.airline WHERE airports.airportcode = \"AHD\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flights, table airports, and table flights", "subexpression": "FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN flights ON airlines.uid = flights.airline"}, {"explanation": "Keep the records where the airportcode of airports is \"AHD\"", "subexpression": "WHERE airports.airportcode = \"AHD\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode JOIN flights ON airlines.uid = flights.airline WHERE airports.airportcode = \"AHD\"", "supplement": ""}], "duration": 5.256408452987671, "time": "2023-02-12 21:53:03"}
{"question": "How many ships ended up being 'Captured\u2019 ?", "dbid": "battle_death", "TBid": "ship", "previous_generated_explanation": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the result of battle is \"Captured\"", "subexpression": "WHERE battle.result = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = \"Captured\"", "supplement": ""}], "entire_SQL": "SELECT COUNT( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = 'Captured'", "original explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the result of battle is \"Captured\"", "subexpression": "WHERE battle.result = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = \"Captured\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the diposition of ship is \"Captured\"", "subexpression": "WHERE battle.result = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE battle.result = \"Captured\"", "supplement": ""}], "duration": 16.833932399749756, "time": "2023-02-12 22:03:40"}
{"question": "How many ships ended up being 'Captured\u2019 ?", "dbid": "battle_death", "TBid": "ship", "previous_generated_explanation": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the diposition of ship is \"Captured\"", "subexpression": "WHERE ship.diposition = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.diposition = \"Captured\"", "supplement": ""}], "entire_SQL": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.diposition = \"Captured\"", "original explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the diposition of ship is \"Captured\"", "subexpression": "WHERE ship.diposition = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.diposition = \"Captured\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the disposition of ship is \"Captured\"", "subexpression": "WHERE ship.diposition = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.diposition = \"Captured\"", "supplement": ""}], "duration": 10.657078266143799, "time": "2023-02-12 22:03:52"}
{"question": "How many ships ended up being 'Captured\u2019 ?", "dbid": "battle_death", "TBid": "ship", "previous_generated_explanation": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the disposition of ship is \"Captured\"", "subexpression": "WHERE ship.disposition = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.disposition = \"Captured\"", "supplement": ""}], "entire_SQL": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.disposition = \"Captured\"", "original explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the disposition of ship is \"Captured\"", "subexpression": "WHERE ship.disposition = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.disposition = \"Captured\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the disposition of ship of ship is \"Captured\"", "subexpression": "WHERE ship.disposition = \"Captured\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.disposition = \"Captured\"", "supplement": ""}], "duration": 15.112895250320435, "time": "2023-02-12 22:04:10"}
{"question": "How many ships ended up being 'Captured\u2019 ?", "dbid": "battle_death", "TBid": "ship", "previous_generated_explanation": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the disposition of ship of ship is \"Capt\"", "subexpression": "WHERE ship.disposition_of_ship = \"Capt\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.disposition_of_ship = \"Capt\"", "supplement": ""}], "entire_SQL": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.disposition_of_ship = \"Capt\"", "original explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the disposition of ship of ship is \"Capt\"", "subexpression": "WHERE ship.disposition_of_ship = \"Capt\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.disposition_of_ship = \"Capt\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table battle and table ship", "subexpression": "FROM battle JOIN ship ON battle.id = ship.lost_in_battle"}, {"explanation": "Keep the records where the disposition of ship of ship is \"Captured\"", "subexpression": "WHERE ship.disposition_of_ship = \"Capt\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.disposition_of_ship = \"Capt\"", "supplement": ""}], "duration": 7.5974462032318115, "time": "2023-02-12 22:04:19"}
{"question": "How many car models are produced in the usa?\"", "dbid": "car_1", "TBid": "car makers", "previous_generated_explanation": [{"explanation": [{"explanation": "In table model list and table car makers", "subexpression": "FROM model_list JOIN car_makers ON model_list.maker = car_makers.id"}, {"explanation": "Keep the records where the country of car makers is \"usa\"", "subexpression": "WHERE car_makers.country = \"usa\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "supplement": ""}], "entire_SQL": "SELECT COUNT( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = 'usa'", "original explanations": [{"explanation": [{"explanation": "In table model list and table car makers", "subexpression": "FROM model_list JOIN car_makers ON model_list.maker = car_makers.id"}, {"explanation": "Keep the records where the country of car makers is \"usa\"", "subexpression": "WHERE car_makers.country = \"usa\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table model list and table car makers", "subexpression": "FROM model_list JOIN car_makers ON model_list.maker = car_makers.id"}, {"explanation": "Keep the records where the country of car makers is \"1\"", "subexpression": "WHERE car_makers.country = \"usa\""}, {"explanation": "Return the number of records", "subexpression": "SELECT COUNT ( * )"}], "number": "Start first query,", "subquery": "SELECT COUNT ( * ) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = \"usa\"", "supplement": ""}], "duration": 3.2069220542907715, "time": "2023-02-12 22:54:56"}
{"question": "List all the student details in reversed alphabetical order.", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "entire_SQL": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the reversed alphabetical order of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "duration": 196.53694653511047, "time": "2023-02-13 16:18:27"}
{"question": "List all the student details in reversed alphabetical order.", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the reversed alphabetical order of alphabeticals", "subexpression": "ORDER BY alphabeticals.reversed_alphabetical_order ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY alphabeticals.reversed_alphabetical_order ASC", "supplement": ""}], "entire_SQL": "SELECT students.other_student_details FROM students ORDER BY alphabeticals.reversed_alphabetical_order ASC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the reversed alphabetical order of alphabeticals", "subexpression": "ORDER BY alphabeticals.reversed_alphabetical_order ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY alphabeticals.reversed_alphabetical_order ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the reversed alphabetical order of students", "subexpression": "ORDER BY alphabeticals.reversed_alphabetical_order ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY alphabeticals.reversed_alphabetical_order ASC", "supplement": ""}], "duration": 15.63265585899353, "time": "2023-02-13 16:18:43"}
{"question": "List all the student details from z to a", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "entire_SQL": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "original explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in ascending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table students", "subexpression": "FROM students"}, {"explanation": "Sort the records in descending order based on the other student details of students", "subexpression": "ORDER BY students.other_student_details ASC"}, {"explanation": "Return the other student details of students", "subexpression": "SELECT students.other_student_details"}], "number": "Start first query,", "subquery": "SELECT students.other_student_details FROM students ORDER BY students.other_student_details ASC", "supplement": ""}], "duration": 20.06650185585022, "time": "2023-02-13 16:19:19"}
{"question": "What are the names of the singers who are not French citizens?", "dbid": "singer", "TBid": "singer", "previous_generated_explanation": [{"explanation": [{"explanation": "In table singer", "subexpression": "FROM singer"}, {"explanation": "Keep the records where the citizenship of singer is not \"French\"", "subexpression": "WHERE singer.citizenship != \"French\""}, {"explanation": "Return the name of singer", "subexpression": "SELECT singer.name"}], "number": "Start first query,", "subquery": "SELECT singer.name FROM singer WHERE singer.citizenship != \"French\"", "supplement": ""}], "entire_SQL": "SELECT singer.name FROM singer WHERE singer.citizenship != 'French'", "original explanations": [{"explanation": [{"explanation": "In table singer", "subexpression": "FROM singer"}, {"explanation": "Keep the records where the citizenship of singer is not \"French\"", "subexpression": "WHERE singer.citizenship != \"French\""}, {"explanation": "Return the name of singer", "subexpression": "SELECT singer.name"}], "number": "Start first query,", "subquery": "SELECT singer.name FROM singer WHERE singer.citizenship != \"French\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table singer", "subexpression": "FROM singer"}, {"explanation": "Keep the records where the citizenship of singer is not \"France\"", "subexpression": "WHERE singer.citizenship != \"French\""}, {"explanation": "Return the name of singer", "subexpression": "SELECT singer.name"}], "number": "Start first query,", "subquery": "SELECT singer.name FROM singer WHERE singer.citizenship != \"French\"", "supplement": ""}], "duration": 59.981223583221436, "time": "2023-02-13 16:21:26"}
{"question": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?", "dbid": "student_transcripts_tracking", "TBid": "addresses", "previous_generated_explanation": [{"explanation": [{"explanation": "In table addresses and table students", "subexpression": "FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id"}, {"explanation": "Keep the records where the country of addresses is \"Haiti\" OR the cell mobile number of students is \"09700166582\"", "subexpression": "WHERE addresses.country = \"Haiti\" OR students.cell_mobile_number = \"09700166582\""}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE addresses.country = \"Haiti\" OR students.cell_mobile_number = \"09700166582\"", "supplement": ""}], "entire_SQL": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE addresses.country = 'Haiti' OR students.cell_mobile_number = '09700166582'", "original explanations": [{"explanation": [{"explanation": "In table addresses and table students", "subexpression": "FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id"}, {"explanation": "Keep the records where the country of addresses is \"Haiti\" OR the cell mobile number of students is \"09700166582\"", "subexpression": "WHERE addresses.country = \"Haiti\" OR students.cell_mobile_number = \"09700166582\""}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE addresses.country = \"Haiti\" OR students.cell_mobile_number = \"09700166582\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table addresses and table students", "subexpression": "FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id"}, {"explanation": "Keep the records where the country of addresses is \"Haiti\" OR the cell mobile number of students is 09700166582", "subexpression": "WHERE addresses.country = \"Haiti\" OR students.cell_mobile_number = \"09700166582\""}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE addresses.country = \"Haiti\" OR students.cell_mobile_number = \"09700166582\"", "supplement": ""}], "duration": 78.68909215927124, "time": "2023-02-13 16:23:54"}
{"question": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table addresses and table students", "subexpression": "FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id"}, {"explanation": "Keep the records where the country of addresses is \"Haiti\" OR the cell mobile number of students is 09700166582", "subexpression": "WHERE addresses.country = \"Haiti\" OR students.cell_mobile_number = 09700166582"}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE addresses.country = \"Haiti\" OR students.cell_mobile_number = 09700166582", "supplement": ""}], "entire_SQL": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE addresses.country = \"Haiti\" OR students.cell_mobile_number = 09700166582", "original explanations": [{"explanation": [{"explanation": "In table addresses and table students", "subexpression": "FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id"}, {"explanation": "Keep the records where the country of addresses is \"Haiti\" OR the cell mobile number of students is 09700166582", "subexpression": "WHERE addresses.country = \"Haiti\" OR students.cell_mobile_number = 09700166582"}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE addresses.country = \"Haiti\" OR students.cell_mobile_number = 09700166582", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table addresses and table students", "subexpression": "FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id"}, {"explanation": "Keep the records where the country of addresses is \"Haiti\" and the cell mobile number of students is 09700166582", "subexpression": "WHERE addresses.country = \"Haiti\" OR students.cell_mobile_number = 09700166582"}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE addresses.country = \"Haiti\" OR students.cell_mobile_number = 09700166582", "supplement": ""}], "duration": 59.23788833618164, "time": "2023-02-13 16:24:55"}
{"question": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?", "dbid": "student_transcripts_tracking", "TBid": "students", "previous_generated_explanation": [{"explanation": [{"explanation": "In table addresses AND table students", "subexpression": "FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id"}, {"explanation": "Keep the records where the country of addresses is \"Haiti\" AND the cell mobile number of students is 09700166582", "subexpression": "WHERE addresses.country = \"Haiti\" AND students.cell_mobile_number = 09700166582"}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE addresses.country = \"Haiti\" AND students.cell_mobile_number = 09700166582", "supplement": ""}], "entire_SQL": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE addresses.country = \"Haiti\" and students.cell_mobile_number = 09700166582", "original explanations": [{"explanation": [{"explanation": "In table addresses AND table students", "subexpression": "FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id"}, {"explanation": "Keep the records where the country of addresses is \"Haiti\" AND the cell mobile number of students is 09700166582", "subexpression": "WHERE addresses.country = \"Haiti\" AND students.cell_mobile_number = 09700166582"}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE addresses.country = \"Haiti\" AND students.cell_mobile_number = 09700166582", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table addresses AND table students", "subexpression": "FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id"}, {"explanation": "Keep the records where the country of addresses is \"Haiti\" or the cell mobile number of students is 09700166582", "subexpression": "WHERE addresses.country = \"Haiti\" AND students.cell_mobile_number = 09700166582"}, {"explanation": "Return the first name of students", "subexpression": "SELECT students.first_name"}], "number": "Start first query,", "subquery": "SELECT students.first_name FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id WHERE addresses.country = \"Haiti\" AND students.cell_mobile_number = 09700166582", "supplement": ""}], "duration": 16.26108145713806, "time": "2023-02-13 16:25:12"}
{"question": "What is the abbreviation for airline \"Delta Airlines\"?", "dbid": "flight_2", "TBid": "", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Keep the records where the airline of airlines is \"Delta Airlines\"", "subexpression": "WHERE airlines.airline = \"Delta Airlines\""}, {"explanation": "Return the abbreviation of airlines", "subexpression": "SELECT airlines.abbreviation"}], "number": "Start first query,", "subquery": "SELECT airlines.abbreviation FROM airlines WHERE airlines.airline = \"Delta Airlines\"", "supplement": ""}], "entire_SQL": "SELECT airlines.abbreviation FROM airlines WHERE airlines.airline = 'Delta Airlines'", "original explanations": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Keep the records where the airline of airlines is \"Delta Airlines\"", "subexpression": "WHERE airlines.airline = \"Delta Airlines\""}, {"explanation": "Return the abbreviation of airlines", "subexpression": "SELECT airlines.abbreviation"}], "number": "Start first query,", "subquery": "SELECT airlines.abbreviation FROM airlines WHERE airlines.airline = \"Delta Airlines\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airlines", "subexpression": "FROM airlines"}, {"explanation": "Keep the records where the airline of airlines is \"Delta Airlines\"", "subexpression": "WHERE airlines.airline = \"Delta Airlines\""}, {"explanation": "Return the abbreviation of airlines", "subexpression": "SELECT airlines.abbreviation"}], "number": "Start first query,", "subquery": "SELECT airlines.abbreviation FROM airlines WHERE airlines.airline = \"Delta Airlines\"", "supplement": ""}], "duration": 11.910168170928955, "time": "2023-02-13 16:28:12"}
{"question": "What is the airport name of airport AKO?", "dbid": "flight_2", "TBid": "airports", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "entire_SQL": "SELECT airports.airportname FROM airports WHERE airports.airportname = 'AKO'", "original explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "duration": 26.22312879562378, "time": "2023-02-14 20:04:18"}
{"question": "What is the airport name for airport AKO?", "dbid": "flight_2", "TBid": "airports", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "entire_SQL": "SELECT airports.airportname FROM airports WHERE airports.airportname = 'AKO'", "original explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "duration": 9.713354110717773, "time": "2023-02-14 20:12:41"}
{"question": "What is the airport name for airport AKO?", "dbid": "flight_2", "TBid": "airports", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "entire_SQL": "SELECT airports.airportname FROM airports WHERE airports.airportname = 'AKO'", "original explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "duration": 10.064035892486572, "time": "2023-02-14 20:18:58"}
{"question": "What is the airport name for airport AKO?", "dbid": "flight_2", "TBid": "airports", "previous_generated_explanation": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "entire_SQL": "SELECT airports.airportname FROM airports WHERE airports.airportname = 'AKO'", "original explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportname of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table airports", "subexpression": "FROM airports"}, {"explanation": "Keep the records where the airportcode of airports is \"AKO\"", "subexpression": "WHERE airports.airportname = \"AKO\""}, {"explanation": "Return the airportname of airports", "subexpression": "SELECT airports.airportname"}], "number": "Start first query,", "subquery": "SELECT airports.airportname FROM airports WHERE airports.airportname = \"AKO\"", "supplement": ""}], "duration": 149.2580132484436, "time": "2023-02-14 21:18:26"}
{"question": "show me the minimal price of the flights from Los Angeles to Honolulu which arrived before 04/12/2005 07:05", "dbid": "flight_1", "TBid": "flight", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\" AND the arrival date of flight is less than \"04, \" /, 12, /, 2005999, AND 9this0is0a0specific0hypen12365477707:05", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\" AND flight.arrival_date < \"04/12/2005 07:05\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\" AND flight.arrival_date < \"04/12/2005 07:05\"", "supplement": ""}], "entire_SQL": "SELECT MIN( flight.price ) FROM flight WHERE flight.origin = 'Los Angeles' AND flight.destination = 'Honolulu' AND flight.arrival_date<'04/12/2005 07:05'", "original explanations": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\" AND the arrival date of flight is less than \"04, \" /, 12, /, 2005999, AND 9this0is0a0specific0hypen12365477707:05", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\" AND flight.arrival_date < \"04/12/2005 07:05\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\" AND flight.arrival_date < \"04/12/2005 07:05\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\" ", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\" AND flight.arrival_date < \"04/12/2005 07:05\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\" AND flight.arrival_date < \"04/12/2005 07:05\"", "supplement": ""}], "duration": 17.76219129562378, "time": "2023-03-16 22:48:43"}
{"question": "show me the minimal price of the flights from Los Angeles to Honolulu", "dbid": "flight_1", "TBid": "flight", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "entire_SQL": "SELECT MIN( flight.price ) FROM flight WHERE flight.origin = 'Los Angeles' AND flight.destination = 'Honolulu'", "original explanations": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of distance of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "duration": 60.95206928253174, "time": "2023-03-16 22:49:53"}
{"question": "Show me the minimum price of flights from Los Angeles to Honolulu", "dbid": "flight_1", "TBid": "flight", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "entire_SQL": "SELECT MIN( flight.price ) FROM flight WHERE flight.origin = 'Los Angeles' AND flight.destination = 'Honolulu'", "original explanations": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "duration": 6276.03871512413, "time": "2023-03-25 22:18:07"}
{"question": "Show me the minimum price of flights from Los Angeles to Honolulu", "dbid": "flight_1", "TBid": "flight", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "entire_SQL": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "original explanations": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "duration": 3.1321380138397217, "time": "2023-03-25 22:18:11"}
{"question": "Show me the minimum price of flights from Los Angeles to Honolulu", "dbid": "flight_1", "TBid": "flight", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "entire_SQL": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "original explanations": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "duration": 0.6798758506774902, "time": "2023-03-25 22:18:11"}
{"question": "Show me the minimum price of flights from Los Angeles to Honolulu", "dbid": "flight_1", "TBid": "flight", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "entire_SQL": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "original explanations": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "duration": 177.8473196029663, "time": "2023-03-25 22:21:10"}
{"question": "Show me the minimum price of flights from Los Angeles to Honolulu", "dbid": "flight_1", "TBid": "flight", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "entire_SQL": "SELECT MIN( flight.price ) FROM flight WHERE flight.origin = 'Los Angeles' AND flight.destination = 'Honolulu'", "original explanations": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin is \"Los Angeles\" and the destination is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "duration": 349.6825180053711, "time": "2023-03-26 01:34:03"}
{"question": "Show me the minimum price of flights from Los Angeles to Honolulu", "dbid": "flight_1", "TBid": "flight", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the destination of flight is \"Hon\"", "subexpression": "WHERE flight.destination = \"Hon\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.destination = \"Hon\"", "supplement": ""}], "entire_SQL": "SELECT MIN ( flight.price ) FROM flight WHERE flight.destination = \"Hon\"", "original explanations": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the destination of flight is \"Hon\"", "subexpression": "WHERE flight.destination = \"Hon\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.destination = \"Hon\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin is \"Los Angeles\" and the destination is \"Honolulu\"", "subexpression": "WHERE flight.destination = \"Hon\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.destination = \"Hon\"", "supplement": ""}], "duration": 98.0885717868805, "time": "2023-03-26 01:35:43"}
{"question": "Show me the minimum price of flights from Los Angeles to Honolulu", "dbid": "flight_1", "TBid": "flight", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "entire_SQL": "SELECT MIN( flight.price ) FROM flight WHERE flight.origin = 'Los Angeles' AND flight.destination = 'Honolulu'", "original explanations": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "duration": 12.329025983810425, "time": "2023-03-26 01:36:03"}
{"question": "Show me the minimum price of flights from Los Angeles to Honolulu", "dbid": "flight_1", "TBid": "flight", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "entire_SQL": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "original explanations": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin is \"Los Angeles\" and the destination is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "duration": 748.9621877670288, "time": "2023-03-26 01:48:33"}
{"question": "Show me the minimum price of flights from Los Angeles to Honolulu", "dbid": "flight_1", "TBid": "flight", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "entire_SQL": "SELECT MIN( flight.price ) FROM flight WHERE flight.origin = 'Los Angeles' AND flight.destination = 'Honolulu'", "original explanations": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "duration": 137.20723676681519, "time": "2023-03-26 04:07:05"}
{"question": "Show me the minimum price of flights from Los Angeles to Honolulu", "dbid": "flight_1", "TBid": "flight", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "entire_SQL": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "original explanations": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "duration": 3.9348297119140625, "time": "2023-03-26 04:07:10"}
{"question": "Show me the minimum price of flights from Los Angeles to Honolulu", "dbid": "flight_1", "TBid": "flight", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "entire_SQL": "SELECT MIN( flight.price ) FROM flight WHERE flight.origin = 'Los Angeles' AND flight.destination = 'Honolulu'", "original explanations": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin is \"Los Angeles\" and the destination is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\""}, {"explanation": "Return the minimum value of price", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"Los Angeles\" AND flight.destination = \"Honolulu\"", "supplement": ""}], "duration": 306.678831577301, "time": "2023-03-31 00:20:12"}
{"question": "show me the minimal price from los angeles to honolulu.", "dbid": "flight_1", "TBid": "flight", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"los angeles\" AND the destination of flight is \"honolulu\"", "subexpression": "WHERE flight.origin = \"los angeles\" AND flight.destination = \"honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"los angeles\" AND flight.destination = \"honolulu\"", "supplement": ""}], "entire_SQL": "SELECT MIN( flight.price ) FROM flight WHERE flight.origin = 'los angeles' AND flight.destination = 'honolulu'", "original explanations": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"los angeles\" AND the destination of flight is \"honolulu\"", "subexpression": "WHERE flight.origin = \"los angeles\" AND flight.destination = \"honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"los angeles\" AND flight.destination = \"honolulu\"", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Keep the records where the origin of flight is \"Los Angeles\" AND the destination of flight is \"Honolulu\"", "subexpression": "WHERE flight.origin = \"los angeles\" AND flight.destination = \"honolulu\""}, {"explanation": "Return the minimum value of price of flight", "subexpression": "SELECT MIN ( flight.price )"}], "number": "Start first query,", "subquery": "SELECT MIN ( flight.price ) FROM flight WHERE flight.origin = \"los angeles\" AND flight.destination = \"honolulu\"", "supplement": ""}], "duration": 30.12386465072632, "time": "2023-09-11 23:19:55"}
{"question": "which is the longest bridge?", "dbid": "architecture", "TBid": "bridge", "previous_generated_explanation": [{"explanation": [{"explanation": "In table bridge", "subexpression": "FROM bridge"}, {"explanation": "Sort the records in descending order based on the length feet of bridge, and return the first record", "subexpression": "ORDER BY bridge.length_feet DESC LIMIT 1"}, {"explanation": "Return the name of bridge", "subexpression": "SELECT bridge.name"}], "number": "Start first query,", "subquery": "SELECT bridge.name FROM bridge ORDER BY bridge.length_feet DESC LIMIT 1", "supplement": ""}], "entire_SQL": "SELECT bridge.name FROM bridge ORDER BY bridge.length_feet DESC LIMIT 1", "original explanations": [{"explanation": [{"explanation": "In table bridge", "subexpression": "FROM bridge"}, {"explanation": "Sort the records in descending order based on the length feet of bridge, and return the first record", "subexpression": "ORDER BY bridge.length_feet DESC LIMIT 1"}, {"explanation": "Return the name of bridge", "subexpression": "SELECT bridge.name"}], "number": "Start first query,", "subquery": "SELECT bridge.name FROM bridge ORDER BY bridge.length_feet DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table bridge", "subexpression": "FROM bridge"}, {"explanation": "Sort the records in descending order based on the length feet of bridge, and return the first record", "subexpression": "ORDER BY bridge.length_feet DESC LIMIT 1"}, {"explanation": "Return the name and location of bridge", "subexpression": "SELECT bridge.name"}], "number": "Start first query,", "subquery": "SELECT bridge.name FROM bridge ORDER BY bridge.length_feet DESC LIMIT 1", "supplement": ""}], "duration": 213.32989978790283, "time": "2024-03-30 23:08:05"}
{"question": "who is richest?", "dbid": "flight_1", "TBid": "employee", "previous_generated_explanation": [{"explanation": [{"explanation": "In table employee", "subexpression": "FROM employee"}, {"explanation": "Sort the records in descending order based on the salary of employee, and return the first record", "subexpression": "ORDER BY employee.salary DESC LIMIT 1"}, {"explanation": "Return the name of employee", "subexpression": "SELECT employee.name"}], "number": "Start first query,", "subquery": "SELECT employee.name FROM employee ORDER BY employee.salary DESC LIMIT 1", "supplement": ""}], "entire_SQL": "SELECT employee.name FROM employee ORDER BY employee.salary DESC LIMIT 1", "original explanations": [{"explanation": [{"explanation": "In table employee", "subexpression": "FROM employee"}, {"explanation": "Sort the records in descending order based on the salary of employee, and return the first record", "subexpression": "ORDER BY employee.salary DESC LIMIT 1"}, {"explanation": "Return the name of employee", "subexpression": "SELECT employee.name"}], "number": "Start first query,", "subquery": "SELECT employee.name FROM employee ORDER BY employee.salary DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table employee", "subexpression": "FROM employee"}, {"explanation": "Return the name of employee", "subexpression": "SELECT employee.name"}], "number": "Start first query,", "subquery": "SELECT employee.name FROM employee ORDER BY employee.salary DESC LIMIT 1", "supplement": ""}], "duration": 154.7821123600006, "time": "2024-03-30 23:19:06"}
{"question": "Which flight have the longest diatance", "dbid": "flight_1", "TBid": "flight", "previous_generated_explanation": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Sort the records in descending order based on the distance of flight, and return the first record", "subexpression": "ORDER BY flight.distance DESC LIMIT 1"}, {"explanation": "Return the flno of flight", "subexpression": "SELECT flight.flno"}], "number": "Start first query,", "subquery": "SELECT flight.flno FROM flight ORDER BY flight.distance DESC LIMIT 1", "supplement": ""}], "entire_SQL": "SELECT flight.flno FROM flight ORDER BY flight.distance DESC LIMIT 1", "original explanations": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Sort the records in descending order based on the distance of flight, and return the first record", "subexpression": "ORDER BY flight.distance DESC LIMIT 1"}, {"explanation": "Return the flno of flight", "subexpression": "SELECT flight.flno"}], "number": "Start first query,", "subquery": "SELECT flight.flno FROM flight ORDER BY flight.distance DESC LIMIT 1", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table flight", "subexpression": "FROM flight"}, {"explanation": "Sort the records in descending order based on the flno of flight, and return the first record", "subexpression": "ORDER BY flight.distance DESC LIMIT 1"}, {"explanation": "Return the flno of flight", "subexpression": "SELECT flight.flno"}], "number": "Start first query,", "subquery": "SELECT flight.flno FROM flight ORDER BY flight.distance DESC LIMIT 1", "supplement": ""}], "duration": 746.5532190799713, "time": "2024-03-30 23:45:05"}
{"question": "show me everything", "dbid": "candidate_poll", "TBid": "candidate", "previous_generated_explanation": [{"explanation": [{"explanation": "In table people and table candidate", "subexpression": "FROM people JOIN candidate ON people.people_id = candidate.people_id"}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM people JOIN candidate ON people.people_id = candidate.people_id", "supplement": ""}], "entire_SQL": "SELECT * FROM people JOIN candidate ON people.people_id = candidate.people_id", "original explanations": [{"explanation": [{"explanation": "In table people and table candidate", "subexpression": "FROM people JOIN candidate ON people.people_id = candidate.people_id"}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM people JOIN candidate ON people.people_id = candidate.people_id", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table people and table candidate", "subexpression": "FROM people JOIN candidate ON people.people_id = candidate.people_id"}, {"explanation": "keep the height less than 150", "subexpression": "..."}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM people JOIN candidate ON people.people_id = candidate.people_id", "supplement": ""}], "duration": 24.92189311981201, "time": "2024-09-09 20:40:27"}
{"question": "show me everything", "dbid": "browser_web", "TBid": "web client accelerator", "previous_generated_explanation": [{"explanation": [{"explanation": "In table web client accelerator", "subexpression": "FROM web_client_accelerator"}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM web_client_accelerator", "supplement": ""}], "entire_SQL": "SELECT * FROM web_client_accelerator", "original explanations": [{"explanation": [{"explanation": "In table web client accelerator", "subexpression": "FROM web_client_accelerator"}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM web_client_accelerator", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table web client accelerator", "subexpression": "FROM web_client_accelerator"}, {"explanation": "Return everything", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM web_client_accelerator", "supplement": ""}], "duration": 11.665583848953247, "time": "2024-09-09 20:53:53"}
{"question": "Show me the data please", "dbid": "book_2", "TBid": "book", "previous_generated_explanation": [{"explanation": [{"explanation": "In table book", "subexpression": "FROM book"}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM book", "supplement": ""}], "entire_SQL": "SELECT * FROM book", "original explanations": [{"explanation": [{"explanation": "In table book", "subexpression": "FROM book"}, {"explanation": "Return all the records", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM book", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table book", "subexpression": "FROM book"}, {"explanation": "Return title", "subexpression": "SELECT *"}], "number": "Start first query,", "subquery": "SELECT * FROM book", "supplement": ""}], "duration": 11.465786933898926, "time": "2024-09-09 20:55:28"}
{"question": "show me the height", "dbid": "body_builder", "TBid": "people", "previous_generated_explanation": [{"explanation": [{"explanation": "In table people", "subexpression": "FROM people"}, {"explanation": "Return the height of people", "subexpression": "SELECT people.height"}], "number": "Start first query,", "subquery": "SELECT people.height FROM people", "supplement": ""}], "entire_SQL": "SELECT people.height FROM people", "original explanations": [{"explanation": [{"explanation": "In table people", "subexpression": "FROM people"}, {"explanation": "Return the height of people", "subexpression": "SELECT people.height"}], "number": "Start first query,", "subquery": "SELECT people.height FROM people", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table people", "subexpression": "FROM people"}, {"explanation": "Return everything", "subexpression": "SELECT people.height"}], "number": "Start first query,", "subquery": "SELECT people.height FROM people", "supplement": ""}], "duration": 11.338266849517822, "time": "2024-09-09 21:01:21"}
{"question": "show me the height", "dbid": "body_builder", "TBid": "people", "previous_generated_explanation": [{"explanation": [{"explanation": "In table people", "subexpression": "FROM people"}, {"explanation": "Return the height of people", "subexpression": "SELECT people.height"}], "number": "Start first query,", "subquery": "SELECT people.height FROM people", "supplement": ""}], "entire_SQL": "SELECT people.height FROM people", "original explanations": [{"explanation": [{"explanation": "In table people", "subexpression": "FROM people"}, {"explanation": "Return the height of people", "subexpression": "SELECT people.height"}], "number": "Start first query,", "subquery": "SELECT people.height FROM people", "supplement": ""}], "edited explanations": [{"explanation": [{"explanation": "In table people", "subexpression": "FROM people"}, {"explanation": "Return things", "subexpression": "SELECT people.height"}], "number": "Start first query,", "subquery": "SELECT people.height FROM people", "supplement": ""}], "duration": 10.01788878440857, "time": "2024-09-09 21:06:20"}
